(dp1
S'_user_agent'
p2
cgluon.storage
Storage
p3
((dp4
S'os'
p5
g3
((dp6
S'name'
p7
S'Linux'
p8
stRp9
sS'is_tablet'
p10
I00
sS'is_mobile'
p11
I00
sS'browser'
p12
g3
((dp13
S'version'
p14
S'41.0.2272.89'
p15
sg7
S'Chrome'
p16
stRp17
stRp18
sS'flash'
p19
NsS'pam_user'
p20
NsS'_formkey[appupdate/create]'
p21
(lp22
S'a2b7df5a-8da0-4544-8ed6-9dc36c2bfa9f'
p23
aS'80f44011-dbe5-400a-bb9a-73a0b12fd477'
p24
aS'6bb5af0d-dab2-4884-932f-c7131520fa98'
p25
aS'7c34b8b7-a9e1-49e0-8b86-c048ef15a467'
p26
aS'7e75d129-6a04-4102-b34f-8f40fde00ed3'
p27
aS'39b24b52-ce42-4c7a-a2a8-89ada2ed58aa'
p28
aS'c0a524c2-32b8-4cca-9120-e11da9d6db0e'
p29
asS'check_version'
p30
I01
sS'token'
p31
S'c05f9adb-b6cb-469f-b838-a9cd40591b24'
p32
sg11
S'auto'
p33
sS'authorized'
p34
I01
sS'plugins'
p35
(dp36
Vdebug
p37
(dp38
Vcount
p39
I25
sVquery
p40
V(((article.id = package_data.article_id) AND (article.content_type_id = 4)) AND (package_data.package_type = 'plugin'))
p41
sVcontent_type
p42
VPackage
p43
sVfieldnames
p44
(lp45
Varticle.id
p46
aVarticle.author
p47
aVarticle.author_nickname
p48
aVarticle.title
p49
aVarticle.description
p50
aVarticle.picture
p51
aVarticle.medium_thumbnail
p52
aVarticle.thumbnail
p53
aVarticle.draft
p54
aVarticle.category_id
p55
aVarticle.tags
p56
aVarticle.keywords
p57
aVarticle.content_type_id
p58
aVarticle.content_type
p59
aVarticle.slug
p60
aVarticle.publish_date
p61
aVarticle.publish_tz
p62
aVarticle.featured
p63
aVarticle.blocked
p64
aVarticle.privacy
p65
aVarticle.license
p66
aVarticle.likes
p67
aVarticle.dislikes
p68
aVarticle.views
p69
aVarticle.responses
p70
aVarticle.favorited
p71
aVarticle.subscriptions
p72
aVarticle.is_active
p73
aVarticle.created_on
p74
aVarticle.created_by
p75
aVarticle.modified_on
p76
aVarticle.modified_by
p77
aVpackage_data.id
p78
aVpackage_data.markup
p79
aVpackage_data.body
p80
aVpackage_data.package_type
p81
aVpackage_data.repository_project
p82
aVpackage_data.repository_brand
p83
aVpackage_data.repository_url
p84
aVpackage_data.repository_page
p85
aVpackage_data.pypi
p86
aVpackage_data.documentation
p87
aVpackage_data.demo
p88
aVpackage_data.download
p89
aVpackage_data.license_type
p90
aVpackage_data.license_version
p91
aVpackage_data.license_url
p92
aVpackage_data.license_body
p93
aVpackage_data.screenshots
p94
aVpackage_data.qualification
p95
aVpackage_data.article_id
p96
aVpackage_data.type_id
p97
aVpackage_data.is_active
p98
aVpackage_data.created_on
p99
aVpackage_data.created_by
p100
aVpackage_data.modified_on
p101
aVpackage_data.modified_by
p102
assVmessage
p103
Vdone
p104
sVresults
p105
(lp106
(dp107
Varticle
p108
(dp109
Vfavorited
p110
I0
sVdislikes
p111
I0
sVauthor_nickname
p112
NsVfeatured
p113
I00
sVlikes
p114
I0
sVkeywords
p115
NsVid
p116
I1659
sVdescription
p117
Vweb2py plugin for Python math packages
p118
sVmodified_by
p119
NsVauthor
p120
I1013
sVsubscriptions
p121
I1
sVcreated_by
p122
I1013
sVdraft
p123
I00
sVpublish_date
p124
NsVblocked
p125
I00
sVthumbnail
p126
Varticle.picture.937eea243df39aa5.6d6174683270795f6c6f676f5f7371756172652e706e67_thumb.png
p127
sVpicture
p128
Varticle.picture.937eea243df39aa5.6d6174683270795f6c6f676f5f7371756172652e706e67.png
p129
sVresponses
p130
I0
sVviews
p131
I2232
sVis_active
p132
I01
sVcontent_type
p133
NsVmodified_on
p134
NsVslug
p135
Vmath2py
p136
sVtags
p137
(lp138
Vmath
p139
aVplugin
p140
aVapp
p141
asVcontent_type_id
p142
I4
sVlicense
p143
V1
sVprivacy
p144
NsVcreated_on
p145
NsVmedium_thumbnail
p146
Varticle.picture.937eea243df39aa5.6d6174683270795f6c6f676f5f7371756172652e706e67_medium_thumb.png
p147
sVpublish_tz
p148
NsVtitle
p149
Vmath2py
p150
sVcategory_id
p151
(lp152
ssVpackage_data
p153
(dp154
Vpackage_type
p155
Vplugin
p156
sVtype_id
p157
I4
sVdemo
p158
Vhttp://math2py.appspot.com/
p159
sVdownload
p160
Vhttps://docs.google.com/uc?export=download&id=0B1G2yisrauPCcmgxeWt3RnhJWFE
p161
sVcreated_on
p162
NsVrepository_url
p163
Vhttps://code.google.com/p/math2py/ 
p164
sVscreenshots
p165
(lp166
Vhttp://revista.python.org.ar/4/es/images/math2py/graph_1.jpg
p167
aVhttp://revista.python.org.ar/4/es/images/math2py/math_panel_1.jpg
p168
asVid
p169
I4
sVmodified_by
p170
I1013
sVlicense_body
p171
V   math2py: web2py plugin/app interface for Python math tools\u000a    Copyright (C) 2011  Alan Etkin\u000a\u000a    This program is free software: you can redistribute it and/or modify\u000a    it under the terms of the GNU Affero General Public License as published by\u000a    the Free Software Foundation, either version 3 of the License, or\u000a    (at your option) any later version.\u000a\u000a    This program is distributed in the hope that it will be useful,\u000a    but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\u000a    GNU Affero General Public License for more details.\u000a\u000a    You should have received a copy of the GNU Affero General Public License\u000a    along with this program.  If not, see <http://www.gnu.org/licenses/>.
p172
sVcreated_by
p173
I1013
sVrepository_brand
p174
Vhg
p175
sVbody
p176
V<p>\u000a	math2py is a web2py app with web mathematical tools. It is designed as an easy to install and friendly web interface for python math modules including mpmath(r). math2py can be installed in almost every system supporting python 2.4 or newer versions like Google App Engine(r) . Released under de terms of AGPLv3 license</p>\u000a<p>\u000a	Developed with web2py</p>\u000a<p>\u000a	This project repository contains code from other Python and JavaScript<a href="http://code.google.com/p/math2py/w/edit/JavaScript">?</a> packages as <a href="http://code.google.com/p/flot" rel="nofollow">flot</a> and <a href="http://code.google.com/p/mpmath" rel="nofollow">mpmath</a> to satisfy dependencies. For license information on each project source code please visit the referred project sites.</p>\u000a
p177
sVpypi
p178
V
sVis_active
p179
I01
sVmodified_on
p180
NsVarticle_id
p181
I1659
sVlicense_version
p182
V3
sVmarkup
p183
Vhtml
p184
sVdocumentation
p185
V
sVlicense_url
p186
Vhttp://www.gnu.org/licenses/agpl-3.0.txt
p187
sVqualification
p188
(lp189
sVrepository_page
p190
Vhttp://code.google.com/p/math2py/
p191
sVlicense_type
p192
Vagpl
p193
sVrepository_project
p194
Vmath2py
p195
ssa(dp196
Varticle
p197
(dp198
Vfavorited
p199
I1
sVdislikes
p200
I0
sVauthor_nickname
p201
NsVfeatured
p202
I00
sVlikes
p203
I1
sVkeywords
p204
NsVid
p205
I1669
sVdescription
p206
VA client-side api for web2py crud services
p207
sVmodified_by
p208
NsVauthor
p209
I1013
sVsubscriptions
p210
I0
sVcreated_by
p211
I1013
sVdraft
p212
I00
sVpublish_date
p213
NsVblocked
p214
I00
sVthumbnail
p215
NsVpicture
p216
V
sVresponses
p217
I0
sVviews
p218
I1742
sVis_active
p219
I01
sVcontent_type
p220
NsVmodified_on
p221
NsVslug
p222
Vplugin-clientapi
p223
sVtags
p224
(lp225
Vclient
p226
aVapi
p227
aVjavascript
p228
asVcontent_type_id
p229
I4
sVlicense
p230
V1
sVprivacy
p231
NsVcreated_on
p232
NsVmedium_thumbnail
p233
NsVpublish_tz
p234
NsVtitle
p235
Vplugin-clientapi
p236
sVcategory_id
p237
(lp238
ssVpackage_data
p239
(dp240
Vpackage_type
p241
Vplugin
p242
sVtype_id
p243
I4
sVdemo
p244
V
sVdownload
p245
Vhttp://code.google.com/p/plugin-clientapi/downloads/list
p246
sVcreated_on
p247
NsVrepository_url
p248
Vhttps://code.google.com/p/plugin-clientapi/
p249
sVscreenshots
p250
(lp251
sVid
p252
I5
sVmodified_by
p253
I1013
sVlicense_body
p254
Vplugin_clientapi: web2py simple JS client\u000aCopyright (C) 2013 Alan Etkin\u000a\u000aThis program is free software: you can redistribute it and/or modify\u000ait under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\u000a\u000aThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\u000aMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.\u000a\u000aYou should have received a copy of the GNU Affero General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.\u000a
p255
sVcreated_by
p256
I1013
sVrepository_brand
p257
Vhg
p258
sVbody
p259
V<h2>\u000a	A simple javascript client for web2py apps</h2>\u000a<p>\u000a	plugin_clientapi is a multi-purpose client interface for handling web2py services from client frameworks or any javascript client software. It supports remote database queries, full database scheme and form retrieval, submission and validation with Ajax.</p>\u000a<p>\u000a	It takes advantage of web2py data serialization api to perform client-server data comunications in a simple and efficient way.</p>\u000a<h2>\u000a	<a name="Examples"></a>Examples</h2>\u000a<p>\u000a	Retrieving and submitting a form without user intervention requires a few lines:</p>\u000a<pre class="prettyprint"><span class="pln">w2pClientAPI</span><span class="pun">.</span><span class="pln">onNewForm </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(){</span>\u000a<span class="pln">&nbsp; w2pClientAPI</span><span class="pun">.</span><span class="pln">form</span><span class="pun">.</span><span class="pln">vars</span><span class="pun">.</span><span class="pln">runny </span><span class="pun">=</span><span class="pln"> </span><span class="str">&quot;very&quot;</span><span class="pun">;</span>\u000a<span class="pln">&nbsp; w2pClientAPI</span><span class="pun">.</span><span class="pln">submit</span><span class="pun">();</span>\u000a<span class="pun">}</span>\u000a<span class="pln">w2pClientAPI</span><span class="pun">.</span><span class="pln">newForm</span><span class="pun">(</span><span class="str">&quot;db&quot;</span><span class="pun">,</span><span class="pln"> </span><span class="str">&quot;cheese&quot;</span><span class="pun">);</span></pre>\u000a<p>\u000a	Retrieving data is also simple</p>\u000a<pre class="prettyprint"><span class="pln">w2pClientAPI</span><span class="pun">.</span><span class="pln">query</span><span class="pun">(</span><span class="str">&quot;db&quot;</span><span class="pun">,</span><span class="pln"> </span><span class="pun">{</span><span class="str">&quot;first&quot;</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="str">&quot;tablename&quot;</span><span class="pun">:</span><span class="pln"> </span><span class="str">&quot;cheese&quot;</span><span class="pun">,</span>\u000a<span class="pln">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">&quot;fieldname&quot;</span><span class="pun">:</span><span class="pln"> </span><span class="str">&quot;id&quot;</span><span class="pun">},</span>\u000a<span class="pln">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">&quot;op&quot;</span><span class="pun">:</span><span class="pln"> </span><span class="str">&quot;GT&quot;</span><span class="pun">,</span>\u000a<span class="pln">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">&quot;second&quot;</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">},</span>\u000a<span class="pln">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;myCallback</span><span class="pun">);</span></pre>\u000a<p>\u000a	For a full guide go to <a href="http://code.google.com/p/plugin-clientapi/wiki/ClientapiHowTo">ClientapiHowTo</a></p>\u000a<h2>\u000a	<a name="License"></a>License</h2>\u000a<p>\u000a	This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.</p>\u000a
p260
sVpypi
p261
V
sVis_active
p262
I01
sVmodified_on
p263
NsVarticle_id
p264
I1669
sVlicense_version
p265
V3
sVmarkup
p266
Vhtml
p267
sVdocumentation
p268
Vhttp://code.google.com/p/plugin-clientapi/w/list
p269
sVlicense_url
p270
Vhttp://www.gnu.org/licenses/agpl-3.0.html
p271
sVqualification
p272
(lp273
sVrepository_page
p274
Vhttp://code.google.com/p/plugin-clientapi
p275
sVlicense_type
p276
Vagpl
p277
sVrepository_project
p278
Vplugin-clientapi
p279
ssa(dp280
Varticle
p281
(dp282
Vfavorited
p283
I0
sVdislikes
p284
I0
sVauthor_nickname
p285
NsVfeatured
p286
I00
sVlikes
p287
I0
sVkeywords
p288
NsVid
p289
I1672
sVdescription
p290
VA nice way to use date(time) validators with timezones in your application
p291
sVmodified_by
p292
NsVauthor
p293
I1589
sVsubscriptions
p294
I0
sVcreated_by
p295
I1589
sVdraft
p296
I00
sVpublish_date
p297
NsVblocked
p298
I00
sVthumbnail
p299
NsVpicture
p300
V
sVresponses
p301
I0
sVviews
p302
I1407
sVis_active
p303
I01
sVcontent_type
p304
NsVmodified_on
p305
NsVslug
p306
Vw2p-timezone-plugin
p307
sVtags
p308
(lp309
Vtimezones
p310
asVcontent_type_id
p311
I4
sVlicense
p312
V2
sVprivacy
p313
NsVcreated_on
p314
NsVmedium_thumbnail
p315
NsVpublish_tz
p316
NsVtitle
p317
Vw2p_timezone_plugin
p318
sVcategory_id
p319
(lp320
I41
assVpackage_data
p321
(dp322
Vpackage_type
p323
Vplugin
p324
sVtype_id
p325
I4
sVdemo
p326
V
sVdownload
p327
Vhttps://github.com/niphlod/w2p_timezone_plugin/releases/download/1.0.1/web2py.plugin.timezone.w2p
p328
sVcreated_on
p329
NsVrepository_url
p330
Vgit@github.com:niphlod/w2p_timezone_plugin.git
p331
sVscreenshots
p332
(lp333
sVid
p334
I8
sVmodified_by
p335
I1589
sVlicense_body
p336
V
sVcreated_by
p337
I1589
sVrepository_brand
p338
Vgit
p339
sVbody
p340
V
sVpypi
p341
V
sVis_active
p342
I01
sVmodified_on
p343
NsVarticle_id
p344
I1672
sVlicense_version
p345
V
sVmarkup
p346
Vhtml
p347
sVdocumentation
p348
Vhttps://github.com/niphlod/w2p_timezone_plugin/blob/master/README.md
p349
sVlicense_url
p350
V
sVqualification
p351
(lp352
sVrepository_page
p353
Vhttps://github.com/niphlod/w2p_timezone_plugin
p354
sVlicense_type
p355
Vlgpl
p356
sVrepository_project
p357
Vw2p_timezone_plugin
p358
ssa(dp359
Varticle
p360
(dp361
Vfavorited
p362
I0
sVdislikes
p363
I0
sVauthor_nickname
p364
NsVfeatured
p365
I00
sVlikes
p366
I0
sVkeywords
p367
NsVid
p368
I1674
sVdescription
p369
VStopForumSpam plugin for web2py
p370
sVmodified_by
p371
NsVauthor
p372
I1589
sVsubscriptions
p373
I0
sVcreated_by
p374
I1589
sVdraft
p375
I00
sVpublish_date
p376
NsVblocked
p377
I00
sVthumbnail
p378
NsVpicture
p379
V
sVresponses
p380
I0
sVviews
p381
I1431
sVis_active
p382
I01
sVcontent_type
p383
NsVmodified_on
p384
NsVslug
p385
Vw2p-sfs-plugin
p386
sVtags
p387
(lp388
Vspam
p389
asVcontent_type_id
p390
I4
sVlicense
p391
V2
sVprivacy
p392
NsVcreated_on
p393
NsVmedium_thumbnail
p394
NsVpublish_tz
p395
NsVtitle
p396
Vw2p_SFS_plugin
p397
sVcategory_id
p398
(lp399
I41
assVpackage_data
p400
(dp401
Vpackage_type
p402
Vplugin
p403
sVtype_id
p404
I4
sVdemo
p405
V
sVdownload
p406
Vhttps://github.com/niphlod/w2p_SFS_plugin/releases/download/0.0.1/web2py.plugin.stopforumspam.w2p
p407
sVcreated_on
p408
NsVrepository_url
p409
Vgit@github.com:niphlod/w2p_SFS_plugin.git
p410
sVscreenshots
p411
(lp412
sVid
p413
I10
sVmodified_by
p414
I1589
sVlicense_body
p415
V
sVcreated_by
p416
I1589
sVrepository_brand
p417
Vgit
p418
sVbody
p419
V
sVpypi
p420
V
sVis_active
p421
I01
sVmodified_on
p422
NsVarticle_id
p423
I1674
sVlicense_version
p424
V
sVmarkup
p425
Vhtml
p426
sVdocumentation
p427
Vhttps://github.com/niphlod/w2p_SFS_plugin/blob/master/README.md
p428
sVlicense_url
p429
V
sVqualification
p430
(lp431
sVrepository_page
p432
Vhttps://github.com/niphlod/w2p_SFS_plugin
p433
sVlicense_type
p434
Vlgpl
p435
sVrepository_project
p436
Vw2p_SFS_plugin
p437
ssa(dp438
Varticle
p439
(dp440
Vfavorited
p441
I0
sVdislikes
p442
I0
sVauthor_nickname
p443
NsVfeatured
p444
I00
sVlikes
p445
I1
sVkeywords
p446
NsVid
p447
I1675
sVdescription
p448
VWeb2py plugin to monitor the scheduler
p449
sVmodified_by
p450
NsVauthor
p451
I1589
sVsubscriptions
p452
I0
sVcreated_by
p453
I1589
sVdraft
p454
I00
sVpublish_date
p455
NsVblocked
p456
I00
sVthumbnail
p457
NsVpicture
p458
V
sVresponses
p459
I0
sVviews
p460
I2257
sVis_active
p461
I01
sVcontent_type
p462
NsVmodified_on
p463
NsVslug
p464
Vw2p-cs-monitor-plugin
p465
sVtags
p466
(lp467
Vscheduler
p468
asVcontent_type_id
p469
I4
sVlicense
p470
V2
sVprivacy
p471
NsVcreated_on
p472
NsVmedium_thumbnail
p473
NsVpublish_tz
p474
NsVtitle
p475
Vw2p_cs_monitor_plugin
p476
sVcategory_id
p477
(lp478
I41
assVpackage_data
p479
(dp480
Vpackage_type
p481
Vplugin
p482
sVtype_id
p483
I4
sVdemo
p484
V
sVdownload
p485
Vhttps://github.com/niphlod/cs_monitor_plugin/releases/download/2.0.1/web2py.plugin.cs_monitor.w2p
p486
sVcreated_on
p487
NsVrepository_url
p488
Vgit@github.com:niphlod/cs_monitor_plugin.git
p489
sVscreenshots
p490
(lp491
sVid
p492
I11
sVmodified_by
p493
I1589
sVlicense_body
p494
V
sVcreated_by
p495
I1589
sVrepository_brand
p496
Vgit
p497
sVbody
p498
V
sVpypi
p499
V
sVis_active
p500
I01
sVmodified_on
p501
NsVarticle_id
p502
I1675
sVlicense_version
p503
V
sVmarkup
p504
Vhtml
p505
sVdocumentation
p506
Vhttps://github.com/niphlod/cs_monitor_plugin/blob/master/README.md
p507
sVlicense_url
p508
V
sVqualification
p509
(lp510
sVrepository_page
p511
Vhttps://github.com/niphlod/cs_monitor_plugin
p512
sVlicense_type
p513
Vlgpl
p514
sVrepository_project
p515
Vcs_monitor_plugin
p516
ssa(dp517
Varticle
p518
(dp519
Vfavorited
p520
I0
sVdislikes
p521
I0
sVauthor_nickname
p522
NsVfeatured
p523
I00
sVlikes
p524
I1
sVkeywords
p525
NsVid
p526
I1713
sVdescription
p527
VAllows you to open a web2py form in a dialog box by calling getdialog(url). Also includes functions to convert web2py grid buttons to call getdialog(url). Click download and install the plugin OR pull source from the mercurial link which is a copy of the welcome app with the plugin.
p528
sVmodified_by
p529
NsVauthor
p530
I978
sVsubscriptions
p531
I2
sVcreated_by
p532
I978
sVdraft
p533
I00
sVpublish_date
p534
NsVblocked
p535
I00
sVthumbnail
p536
NsVpicture
p537
V
sVresponses
p538
I0
sVviews
p539
I3741
sVis_active
p540
I01
sVcontent_type
p541
NsVmodified_on
p542
NsVslug
p543
Vplugin-to-use-dialog-boxes-with-grids
p544
sVtags
p545
(lp546
sVcontent_type_id
p547
I4
sVlicense
p548
V1
sVprivacy
p549
NsVcreated_on
p550
NsVmedium_thumbnail
p551
NsVpublish_tz
p552
NsVtitle
p553
Vplugin to use dialog boxes with grids
p554
sVcategory_id
p555
(lp556
ssVpackage_data
p557
(dp558
Vpackage_type
p559
Vplugin
p560
sVtype_id
p561
I4
sVdemo
p562
V
sVdownload
p563
Vhttps://bitbucket.org/simonm3/plugin_dialog/downloads/web2py.plugin.dialog.w2p
p564
sVcreated_on
p565
NsVrepository_url
p566
Vhttps://simonm3@bitbucket.org/simonm3/plugin_dialog
p567
sVscreenshots
p568
(lp569
sVid
p570
I14
sVmodified_by
p571
I978
sVlicense_body
p572
V
sVcreated_by
p573
I978
sVrepository_brand
p574
Vhg
p575
sVbody
p576
V
sVpypi
p577
V
sVis_active
p578
I01
sVmodified_on
p579
NsVarticle_id
p580
I1713
sVlicense_version
p581
V
sVmarkup
p582
Vhtml
p583
sVdocumentation
p584
Vhttps://bitbucket.org/simonm3/plugin_dialog/wiki/Home
p585
sVlicense_url
p586
V
sVqualification
p587
(lp588
sVrepository_page
p589
V
sVlicense_type
p590
Vgpl
p591
sVrepository_project
p592
Vplugin_dialog
p593
ssa(dp594
Varticle
p595
(dp596
Vfavorited
p597
I0
sVdislikes
p598
I0
sVauthor_nickname
p599
NsVfeatured
p600
I00
sVlikes
p601
I0
sVkeywords
p602
NsVid
p603
I1717
sVdescription
p604
VAdds file area to bottom of a web2py form. Multiple files can be dragged/dropped from the desktop or from web pages including documents and inline images.
p605
sVmodified_by
p606
NsVauthor
p607
I978
sVsubscriptions
p608
I0
sVcreated_by
p609
I978
sVdraft
p610
I00
sVpublish_date
p611
NsVblocked
p612
I00
sVthumbnail
p613
NsVpicture
p614
V
sVresponses
p615
I0
sVviews
p616
I2934
sVis_active
p617
I01
sVcontent_type
p618
NsVmodified_on
p619
NsVslug
p620
Vplugin-to-dragdrop-multiple-files-as-attachments-to-a-web2py-form
p621
sVtags
p622
(lp623
sVcontent_type_id
p624
I4
sVlicense
p625
V1
sVprivacy
p626
NsVcreated_on
p627
NsVmedium_thumbnail
p628
NsVpublish_tz
p629
NsVtitle
p630
VPlugin to drag/drop multiple files as attachments to a web2py form
p631
sVcategory_id
p632
(lp633
ssVpackage_data
p634
(dp635
Vpackage_type
p636
Vplugin
p637
sVtype_id
p638
I4
sVdemo
p639
V
sVdownload
p640
Vhttps://bitbucket.org/simonm3/plugin_attachment/downloads/web2py.plugin.attachment.w2p
p641
sVcreated_on
p642
NsVrepository_url
p643
Vhttps://bitbucket.org/simonm3/plugin_attachment/src
p644
sVscreenshots
p645
(lp646
sVid
p647
I15
sVmodified_by
p648
I978
sVlicense_body
p649
V
sVcreated_by
p650
I978
sVrepository_brand
p651
Vhg
p652
sVbody
p653
V
sVpypi
p654
V
sVis_active
p655
I01
sVmodified_on
p656
NsVarticle_id
p657
I1717
sVlicense_version
p658
V
sVmarkup
p659
Vhtml
p660
sVdocumentation
p661
Vhttps://bitbucket.org/simonm3/plugin_attachment/wiki/Home
p662
sVlicense_url
p663
V
sVqualification
p664
(lp665
sVrepository_page
p666
V
sVlicense_type
p667
Vgpl
p668
sVrepository_project
p669
Vplugin_attachment
p670
ssa(dp671
Varticle
p672
(dp673
Vfavorited
p674
I1
sVdislikes
p675
I0
sVauthor_nickname
p676
NsVfeatured
p677
I00
sVlikes
p678
I4
sVkeywords
p679
NsVid
p680
I1721
sVdescription
p681
Vajax plugin for google charts via LOAD. Tested on 2.6 to 2.8
p682
sVmodified_by
p683
NsVauthor
p684
I1581
sVsubscriptions
p685
I4
sVcreated_by
p686
I1581
sVdraft
p687
I00
sVpublish_date
p688
NsVblocked
p689
I00
sVthumbnail
p690
Varticle.picture.b07d771c809eca7c.53637265656e2053686f7420323031332d31302d303420617420362e34392e333620414d2e706e67_thumb.png
p691
sVpicture
p692
Varticle.picture.b07d771c809eca7c.53637265656e2053686f7420323031332d31302d303420617420362e34392e333620414d2e706e67.png
p693
sVresponses
p694
I0
sVviews
p695
I5176
sVis_active
p696
I01
sVcontent_type
p697
NsVmodified_on
p698
NsVslug
p699
Vgoogle-charts-plugin
p700
sVtags
p701
(lp702
sVcontent_type_id
p703
I4
sVlicense
p704
V1
sVprivacy
p705
NsVcreated_on
p706
NsVmedium_thumbnail
p707
Varticle.picture.b07d771c809eca7c.53637265656e2053686f7420323031332d31302d303420617420362e34392e333620414d2e706e67_medium_thumb.png
p708
sVpublish_tz
p709
NsVtitle
p710
VGoogle Charts plugin
p711
sVcategory_id
p712
(lp713
ssVpackage_data
p714
(dp715
Vpackage_type
p716
Vplugin
p717
sVtype_id
p718
I4
sVdemo
p719
V
sVdownload
p720
Vhttps://github.com/timrichardson/google_charts_plugin/releases/download/1.0.2/web2py.plugin.google_chart.w2p
p721
sVcreated_on
p722
NsVrepository_url
p723
Vhttps://github.com/timrichardson/google_charts_plugin/
p724
sVscreenshots
p725
(lp726
sVid
p727
I16
sVmodified_by
p728
I1581
sVlicense_body
p729
V
sVcreated_by
p730
I1581
sVrepository_brand
p731
Vgit
p732
sVbody
p733
V<p>\u000a	This is a simple plugin to use Google Charts.</p>\u000a<p>\u000a	Based on web2py 2.6.4</p>\u000a<h2>\u000a	<img alt="" src="https://f.cloud.github.com/assets/927458/1266233/d70fcb02-2c80-11e3-9b6d-a5865a419a6e.png" style="width: 972px; height: 425px;" /></h2>\u000a<h2>\u000a	Usage</h2>\u000a<p>\u000a	You need to install the plugin, write a controller function which returns the data to be charted, and set up any options to pass to the chart.</p>\u000a<p>\u000a	There are examples included. Multiple charts per page is ok.</p>\u000a<p>\u000a	Usage in a view looks like this two-chart view:</p>\u000a<div>\u000a	<pre class="prettyprint linenums">{{extend &#39;layout.html&#39;}}\u000a&lt;!-- need to source this in any view which has a LOAD chart --&gt;\u000a&lt;script src=&quot;https://www.google.com/jsapi&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\u000a\u000a&lt;!-- Here, data and options same for both charts --&gt;\u000a&lt;!-- user_signature works if using logged-in users ... not well tested --&gt;\u000a{{ data_url = URL(&#39;plugin_google_chart&#39;,&#39;plugin_return_data.json&#39;,user_signature=True)\u000a  #options are documented at https://developers.google.com/chart/\u000a  options ={&#39;title&#39;:&#39;Sales vs Expenses&#39;,&#39;width&#39;:0,&#39;height&#39;:0}\u000a          }}\u000a\u000a&lt;div class=&quot;span6&quot;&gt;\u000a{{=LOAD(&#39;plugin_google_chart&#39;,&#39;plugin_google_chart.load&#39;,ajax=True,\u000a        user_signature=True,vars={&#39;type&#39;:&#39;bar&#39;,&#39;data_url&#39;:data_url,\u000a        &#39;options_dict&#39;:options})\u000a}}\u000a&lt;/div&gt;\u000a\u000a&lt;div class=&quot;span6&quot;&gt;\u000a{{=LOAD(&#39;plugin_google_chart&#39;,&#39;plugin_google_chart.load&#39;,user_signature=True,ajax=True,\u000a    vars={&#39;type&#39;:&#39;column&#39;,&#39;data_url&#39;:data_url,&#39;options_dict&#39;:options})\u000a}}\u000a&lt;/div&gt;</pre>\u000a	<p>\u000a		&nbsp;</p>\u000a	<p>\u000a		This example above uses a function plugin_return_data in the plugin controller so you can look at that to see how to send data to a chart. In your own apps, you need to provide this function, which means replacing data_url with your own.</p>\u000a	<p>\u000a		The type of the chart is provided in the LOAD url in vars; look at the plugin_google_chart.load to see which types I have included.&nbsp;</p>\u000a</div>\u000a<h2>\u000a	Installing the plugin</h2>\u000a<p>\u000a	A plugin is simply files in directories; by uploading a plugin to an app, the web2py admin application installs those files in a given application as if you had put them there yourself. The plugin file is on the releases section of the GitHub repository. Use the Download link above to get the .w2p file</p>\u000a<p>\u000a	&nbsp;</p>\u000a<p>\u000a	In this case the plugin will add one controller and one view to your app.</p>\u000a<p>\u000a	The controller includes the function&nbsp;plugin_google_chart() which works with the view plugin_google_chart.load to display the chart.&nbsp;</p>\u000a<p>\u000a	The other content in the controller is just example/tutorial content.&nbsp;</p>\u000a<h2>\u000a	Improving and extending it (add more chart types)</h2>\u000a<p>\u000a	&nbsp;</p>\u000a<p>\u000a	The view plugin_google_chart.load has the important logic.</p>\u000a<p>\u000a	There is a switch which handles the different chart types. You can easily extend it.</p>\u000a<p>\u000a	&nbsp;</p>\u000a
p734
sVpypi
p735
V
sVis_active
p736
I01
sVmodified_on
p737
NsVarticle_id
p738
I1721
sVlicense_version
p739
V
sVmarkup
p740
Vhtml
p741
sVdocumentation
p742
V
sVlicense_url
p743
V
sVqualification
p744
(lp745
sVrepository_page
p746
Vhttps://github.com/timrichardson/google_charts_plugin/releases
p747
sVlicense_type
p748
Vgpl
p749
sVrepository_project
p750
VGoogle Charts plugin
p751
ssa(dp752
Varticle
p753
(dp754
Vfavorited
p755
I0
sVdislikes
p756
I0
sVauthor_nickname
p757
NsVfeatured
p758
I00
sVlikes
p759
I0
sVkeywords
p760
NsVid
p761
I1851
sVdescription
p762
VConnects jQuery's jsviews MVVM client-side framework to the server using a REST interface. Models can be loaded from a server-side REST interface. Changes to the model will be transparently reflected in both the connected views and also made to the server. Changes by the user in the views will be transparently reflected in the connected models and also made to the server.
p763
sVmodified_by
p764
I2062
sVauthor
p765
I2062
sVsubscriptions
p766
I0
sVcreated_by
p767
I2062
sVdraft
p768
I01
sVpublish_date
p769
NsVblocked
p770
I00
sVthumbnail
p771
NsVpicture
p772
V
sVresponses
p773
I0
sVviews
p774
I2
sVis_active
p775
I00
sVcontent_type
p776
NsVmodified_on
p777
NsVslug
p778
Vdynamic-rest
p779
sVtags
p780
(lp781
sVcontent_type_id
p782
I4
sVlicense
p783
V3
sVprivacy
p784
NsVcreated_on
p785
NsVmedium_thumbnail
p786
NsVpublish_tz
p787
NsVtitle
p788
VDynamic REST
p789
sVcategory_id
p790
(lp791
ssVpackage_data
p792
(dp793
Vpackage_type
p794
Vplugin
p795
sVtype_id
p796
I4
sVdemo
p797
V
sVdownload
p798
V
sVcreated_on
p799
NsVrepository_url
p800
Vhttps://github.com/childsish/web2py_plugin_dynamic_rest.git
p801
sVscreenshots
p802
(lp803
sVid
p804
I19
sVmodified_by
p805
I2062
sVlicense_body
p806
V
sVcreated_by
p807
I2062
sVrepository_brand
p808
Vgit
p809
sVbody
p810
V<h6>\u000a	Usage</h6>\u000a<p>\u000a	Put this in db.py</p>\u000a<pre class="prettyprint linenums">db.define_table(&#39;person&#39;,\u000a    Field(&#39;name&#39;),\u000a    format=&#39;%(name)s&#39;)</pre>\u000a<p>\u000a	Put this in the default controller.</p>\u000a<pre class="prettyprint linenums">@request.restful()\u000adef api():\u000a    from plugin_dynamic_rest.dynamic_rest import DynamicRest\u000a    dynamic_rest = DynamicRest(db)\u000a    dynamic_rest.registerTable(db.person, [&#39;GET&#39;, &#39;POST&#39;, &#39;PUT&#39;, &#39;DELETE&#39;])\u000a    return dynamic_rest.getActions()\u000a</pre>\u000a<p>\u000a	Use this as the default index.html</p>\u000a<pre class="prettyprint linenums">{{left_sidebar_enabled,right_sidebar_enabled=False,False}}\u000a{{extend &#39;layout.html&#39;}}\u000a\u000a&lt;script src=&quot;{{=URL(&#39;static&#39;, &#39;js/jsviews.min.js&#39;)}}&quot;&gt;&lt;/script&gt;\u000a&lt;script src=&quot;{{=URL(&#39;static&#39;, &#39;plugin_dynamic_rest/js/dynamic_rest.js&#39;)}}&quot;&gt;&lt;/script&gt;\u000a\u000a&lt;script id=&quot;test_template&quot; type=&quot;text/x-jsrender&quot;&gt;\u000a[^[for people]]\u000a	&lt;div&gt;\u000a		&lt;input data-link=&quot;name&quot;/&gt;\u000a		&lt;button id=&quot;element_[[:id]]&quot; class=&quot;delete&quot;&gt;X&lt;/button&gt;\u000a	&lt;/div&gt;\u000a[[/for]]\u000a&lt;/script&gt;\u000a\u000a&lt;script&gt;\u000a$.views.settings.delimiters(&#39;[[&#39;, &#39;]]&#39;);\u000a\u000avar people = DynamicRest(&quot;{{=URL(&#39;default&#39;, &#39;api.json&#39;, args=[&#39;person&#39;])}}&quot;);\u000a\u000a$(function() {\u000a	var test_template = $.templates(&quot;#test_template&quot;);\u000a\u000a	var test_data = {\u000a		people: people\u000a	};\u000a	\u000a	test_template.link(&quot;#test_target&quot;, test_data)\u000a		.on(&quot;click&quot;, &quot;.delete&quot;, function() {\u000a		    var view = $.view(this);\u000a		    $.observable(test_data.people).remove(view.index);\u000a		});\u000a	\u000a	$(&#39;#test_button&#39;).click(function() {\u000a		people.insort({name: &#39;New person&#39;});\u000a	});\u000a});\u000a&lt;/script&gt;\u000a\u000a&lt;button id=&#39;test_button&#39;&gt;Add Element&lt;/button&gt;\u000a&lt;div id=&quot;test_target&quot;&gt;\u000a	\u000a&lt;/div&gt;\u000a</pre>\u000a
p811
sVpypi
p812
V
sVis_active
p813
I01
sVmodified_on
p814
NsVarticle_id
p815
I1851
sVlicense_version
p816
V
sVmarkup
p817
Vhtml
p818
sVdocumentation
p819
V
sVlicense_url
p820
V
sVqualification
p821
(lp822
sVrepository_page
p823
Vhttps://github.com/childsish/web2py_plugin_dynamic_rest
p824
sVlicense_type
p825
Vgpl
p826
sVrepository_project
p827
Vdynamic_rest
p828
ssa(dp829
Varticle
p830
(dp831
Vfavorited
p832
I0
sVdislikes
p833
I0
sVauthor_nickname
p834
NsVfeatured
p835
I00
sVlikes
p836
I1
sVkeywords
p837
NsVid
p838
I1855
sVdescription
p839
VConnects jsviews MVVM to the server. Dynamically updates the server whenever the client changes data.
p840
sVmodified_by
p841
NsVauthor
p842
I2062
sVsubscriptions
p843
I0
sVcreated_by
p844
I2062
sVdraft
p845
I00
sVpublish_date
p846
NsVblocked
p847
I00
sVthumbnail
p848
NsVpicture
p849
V
sVresponses
p850
I0
sVviews
p851
I2721
sVis_active
p852
I01
sVcontent_type
p853
NsVmodified_on
p854
NsVslug
p855
Vdynamic-rest
p856
sVtags
p857
(lp858
Vjsviews
p859
aVmvvm
p860
aVrest
p861
asVcontent_type_id
p862
I4
sVlicense
p863
V3
sVprivacy
p864
NsVcreated_on
p865
NsVmedium_thumbnail
p866
NsVpublish_tz
p867
NsVtitle
p868
VDynamic REST
p869
sVcategory_id
p870
(lp871
ssVpackage_data
p872
(dp873
Vpackage_type
p874
Vplugin
p875
sVtype_id
p876
I4
sVdemo
p877
V
sVdownload
p878
Vhttps://github.com/childsish/web2py_plugin_dynamic_rest/archive/master.zip
p879
sVcreated_on
p880
NsVrepository_url
p881
Vhttps://github.com/childsish/web2py_plugin_dynamic_rest.git
p882
sVscreenshots
p883
(lp884
sVid
p885
I20
sVmodified_by
p886
I2062
sVlicense_body
p887
V
sVcreated_by
p888
I2062
sVrepository_brand
p889
Vgit
p890
sVbody
p891
V
sVpypi
p892
V
sVis_active
p893
I01
sVmodified_on
p894
NsVarticle_id
p895
I1855
sVlicense_version
p896
V
sVmarkup
p897
Vhtml
p898
sVdocumentation
p899
Vhttps://github.com/childsish/web2py_plugin_dynamic_rest/blob/master/README.plugin_dynamic_rest.md
p900
sVlicense_url
p901
V
sVqualification
p902
(lp903
sVrepository_page
p904
Vhttps://github.com/childsish/web2py_plugin_dynamic_rest
p905
sVlicense_type
p906
Vgpl
p907
sVrepository_project
p908
Vdynamic_rest
p909
ssa(dp910
Varticle
p911
(dp912
Vfavorited
p913
I0
sVdislikes
p914
I0
sVauthor_nickname
p915
NsVfeatured
p916
I00
sVlikes
p917
I1
sVkeywords
p918
NsVid
p919
I1919
sVdescription
p920
VAdd inline row editing capability to SQLFORM.grid
p921
sVmodified_by
p922
NsVauthor
p923
I1146
sVsubscriptions
p924
I0
sVcreated_by
p925
I1146
sVdraft
p926
I00
sVpublish_date
p927
NsVblocked
p928
I00
sVthumbnail
p929
Varticle.picture.b15916bfcc06a122.696e6c696e655f726f775f656469742e706e67_thumb.png
p930
sVpicture
p931
Varticle.picture.b15916bfcc06a122.696e6c696e655f726f775f656469742e706e67.png
p932
sVresponses
p933
I0
sVviews
p934
I8455
sVis_active
p935
I01
sVcontent_type
p936
NsVmodified_on
p937
NsVslug
p938
Vplugin-sqlform-inline
p939
sVtags
p940
(lp941
Vsqlform
p942
aVplugins
p943
aVajax
p944
aVsqlform.grid
p945
asVcontent_type_id
p946
I4
sVlicense
p947
V2
sVprivacy
p948
NsVcreated_on
p949
NsVmedium_thumbnail
p950
Varticle.picture.b15916bfcc06a122.696e6c696e655f726f775f656469742e706e67_medium_thumb.png
p951
sVpublish_tz
p952
NsVtitle
p953
Vplugin_SQLFORM_INLINE
p954
sVcategory_id
p955
(lp956
ssVpackage_data
p957
(dp958
Vpackage_type
p959
Vplugin
p960
sVtype_id
p961
I4
sVdemo
p962
V
sVdownload
p963
V
sVcreated_on
p964
NsVrepository_url
p965
Vhttps://github.com/pjryan126/plugin_SQLFORM_INLINE
p966
sVscreenshots
p967
(lp968
Vhttps://github.com/pjryan126/plugin_SQLFORM_INLINE/blob/master/inline_row_add.png?raw=true
p969
aVhttps://github.com/pjryan126/plugin_SQLFORM_INLINE/blob/master/inline_row_edit.png?raw=true
p970
asVid
p971
I23
sVmodified_by
p972
I1146
sVlicense_body
p973
V
sVcreated_by
p974
I1146
sVrepository_brand
p975
Vgit
p976
sVbody
p977
V<h1>\u000a	<font color="#333333"><font face="arial, helvetica, sans-serif"><font size="6" style="font-size: 22pt">SQLFORM_INLINE</font></font></font></h1>\u000a<p align="JUSTIFY" style="margin-bottom: 0in; font-variant: normal; font-style: normal; font-weight: normal; line-height: 0.17in">\u000a	<font color="#333333"><font face="Arial, sans-serif"><font size="2">This is a&nbsp;web2py&nbsp;plugin&nbsp;leveraging the framework&#39;s ajax&nbsp;options to provide&nbsp;inline row editing functionality to the SQLFORM.grid method.&nbsp;It&nbsp;aims to&nbsp;provide the same features&nbsp;provided by web2py&#39;s&nbsp;SQLFORM.grid&nbsp;in addition to inline row editing. Because the inline edit feature loads a SQLFORM into the selected row, the plugin will work properly only when the grid includes fields from a single table.</font></font></font></p>\u000a<p align="JUSTIFY" style="margin-bottom: 0in; font-variant: normal; font-style: normal; font-weight: normal; line-height: 0.17in">\u000a	&nbsp;</p>\u000a<h2 class="western" style="margin-top: 0in; margin-bottom: 0in; font-variant: normal; font-style: normal; line-height: 0.38in;">\u000a	<font color="#333333"><font face="arial, helvetica, sans-serif"><font size="6" style="font-size: 22pt">Installation</font></font></font></h2>\u000a<p align="JUSTIFY" style="margin-bottom: 0in; font-variant: normal; font-style: normal; font-weight: normal">\u000a	<font color="#333333"><font face="Arial, sans-serif"><font size="2" style="font-size: 9pt">Download the .w2p file and install it as a plugin via the web2py interface.</font></font></font></p>\u000a<p align="JUSTIFY" style="margin-bottom: 0in">\u000a	&nbsp;</p>\u000a<h2 class="western" style="margin-top: 0in; margin-bottom: 0in; font-variant: normal; font-style: normal;">\u000a	<font color="#333333"><font face="arial, helvetica, sans-serif"><font size="6" style="font-size: 22pt">Update</font></font></font></h2>\u000a<p align="JUSTIFY" style="margin-bottom: 0.09in; font-variant: normal; font-style: normal; font-weight: normal">\u000a	<font color="#333333"><font face="Arial, sans-serif"><font size="2" style="font-size: 9pt">Use the installation procedure above and overwrite the plugin content in your web2py app.</font></font></font></p>\u000a<h2 class="western" style="margin-top: 0in; margin-bottom: 0in; font-variant: normal; font-style: normal;">\u000a	<font color="#333333"><font face="arial, helvetica, sans-serif"><font size="6" style="font-size: 22pt">Usage</font></font></font></h2>\u000a<p align="JUSTIFY" style="margin-bottom: 0.09in; font-variant: normal; font-style: normal; font-weight: normal">\u000a	<font color="#333333"><font face="arial, helvetica, sans-serif"><font size="2" style="font-size: 9pt">(1) Install the plugin.</font></font></font></p>\u000a<p align="JUSTIFY" style="margin-bottom: 0.09in; font-variant: normal; font-style: normal; font-weight: normal">\u000a	<font color="#333333"><font face="arial, helvetica, sans-serif"><font size="2" style="font-size: 9pt">(2) Import the SQLFORM_INLINE class to your controller.</font></font></font></p>\u000a<pre class="western" style="margin-bottom: 0.2in; font-variant: normal; font-style: normal; font-weight: normal">from plugin_SQLFORM_INLINE import SQLFORM_INLINE</pre>\u000a<p align="JUSTIFY" style="margin-bottom: 0.09in; font-variant: normal; font-style: normal; font-weight: normal">\u000a	<font color="#333333"><font face="arial, helvetica, sans-serif"><font size="2" style="font-size: 9pt">(3) Create a separate controller for each inline grid. If you plan to load more than one grid into a single controller, be sure to give each grid a unique formname.</font></font></font></p>\u000a<pre class="western" style="font-variant: normal; font-style: normal; font-weight: normal">def grid1():\u000a    <span style="font-style: normal"><span style="font-weight: normal">SQLFORM=SQLFORM_INLINE</span></span>\u000a    <span style="font-style: normal"><span style="font-weight: normal">grid1=SQLFORM.inline_grid(db.things, formname=&#39;grid1&#39;)</span></span>\u000a    <span style="font-style: normal"><span style="font-weight: normal">return dict(grid1=grid1)</span></span></pre>\u000a<p align="JUSTIFY" style="margin-bottom: 0.09in; font-variant: normal; font-style: normal; font-weight: normal">\u000a	<font color="#333333"><font face="arial, helvetica, sans-serif"><font size="2" style="font-size: 9pt">(4) Load the inline grid controller into your page using the web2py LOAD helper.</font></font></font></p>\u000a<pre class="western" style="font-variant: normal; font-style: normal; font-weight: normal">def index():\u000a    <span style="font-style: normal"><span style="font-weight: normal">grid1 = LOAD(f=&#39;grid1.load&#39;, ajax=True, ajax_trap=True)</span></span>\u000a    <span style="font-style: normal"><span style="font-weight: normal">return dict(grid1=grid1)</span></span></pre>\u000a<h2 class="western" style="margin-top: 0in; margin-bottom: 0in; font-variant: normal; font-style: normal;">\u000a	<font color="#333333"><font face="arial, helvetica, sans-serif"><font size="6" style="font-size: 22pt">Development Status</font></font></font></h2>\u000a<p align="JUSTIFY" style="font-variant: normal; font-style: normal; font-weight: normal; line-height: 0.19in">\u000a	<font color="#333333"><font face="Helvetica Neue, Helvetica, Arial, sans-serif"><font size="2" style="font-size: 9pt">This plugin is intended to provide the same functionality offered by SQLFORM.grid, but is not fully tested and is currently in its initial stage of development. The CSS styling, in particular, is still a little buggy outside of Chrome.</font></font></font></p>\u000a<p align="JUSTIFY" style="margin-bottom: 0.09in">\u000a	<code class="western"><span style="font-variant: normal"><font color="#333333"><font face="Helvetica Neue, Helvetica, Arial, sans-serif"><font size="2" style="font-size: 9pt"><span style="font-style: normal"><span style="font-weight: normal">If any of the options are not working properly, or if you have ideas on how to handle cross-browser styling, please feel free to let me know or, better yet, provide a proposed solution. I welcome any help or feedback to make this plugin as useful to the community as possible.</span></span></font></font></font></span></code></p>\u000a<p align="JUSTIFY" style="margin-bottom: 0.09in">\u000a	<br />\u000a	&nbsp;</p>\u000a<p>\u000a	<br />\u000a	<br />\u000a	&nbsp;</p>\u000a
p978
sVpypi
p979
V
sVis_active
p980
I01
sVmodified_on
p981
NsVarticle_id
p982
I1919
sVlicense_version
p983
V
sVmarkup
p984
Vhtml
p985
sVdocumentation
p986
V
sVlicense_url
p987
V
sVqualification
p988
(lp989
sVrepository_page
p990
V
sVlicense_type
p991
Vmit
p992
sVrepository_project
p993
Vplugin_SQLFORM_INLINE
p994
ssa(dp995
Varticle
p996
(dp997
Vfavorited
p998
I0
sVdislikes
p999
I0
sVauthor_nickname
p1000
NsVfeatured
p1001
I00
sVlikes
p1002
I0
sVkeywords
p1003
NsVid
p1004
I1935
sVdescription
p1005
Vspam
p1006
sVmodified_by
p1007
I1013
sVauthor
p1008
I1013
sVsubscriptions
p1009
I0
sVcreated_by
p1010
I1013
sVdraft
p1011
I00
sVpublish_date
p1012
NsVblocked
p1013
I00
sVthumbnail
p1014
NsVpicture
p1015
V
sVresponses
p1016
I0
sVviews
p1017
I4
sVis_active
p1018
I00
sVcontent_type
p1019
NsVmodified_on
p1020
NsVslug
p1021
Vspam
p1022
sVtags
p1023
(lp1024
sVcontent_type_id
p1025
I4
sVlicense
p1026
V1
sVprivacy
p1027
NsVcreated_on
p1028
NsVmedium_thumbnail
p1029
NsVpublish_tz
p1030
NsVtitle
p1031
Vspam
p1032
sVcategory_id
p1033
(lp1034
ssVpackage_data
p1035
(dp1036
Vpackage_type
p1037
Vplugin
p1038
sVtype_id
p1039
I4
sVdemo
p1040
V
sVdownload
p1041
V
sVcreated_on
p1042
NsVrepository_url
p1043
V
sVscreenshots
p1044
(lp1045
sVid
p1046
I25
sVmodified_by
p1047
I1013
sVlicense_body
p1048
V
sVcreated_by
p1049
I1013
sVrepository_brand
p1050
Vother
p1051
sVbody
p1052
V
sVpypi
p1053
V
sVis_active
p1054
I01
sVmodified_on
p1055
NsVarticle_id
p1056
I1935
sVlicense_version
p1057
V
sVmarkup
p1058
Vhtml
p1059
sVdocumentation
p1060
V
sVlicense_url
p1061
V
sVqualification
p1062
(lp1063
sVrepository_page
p1064
V
sVlicense_type
p1065
Vother
p1066
sVrepository_project
p1067
V
ssa(dp1068
Varticle
p1069
(dp1070
Vfavorited
p1071
I1
sVdislikes
p1072
I0
sVauthor_nickname
p1073
NsVfeatured
p1074
I00
sVlikes
p1075
I1
sVkeywords
p1076
V
sVid
p1077
I1937
sVdescription
p1078
VAdmin Plus(A-Plus) is a web2py plugin that provides an easy-to-use interface for managing your data
p1079
sVmodified_by
p1080
NsVauthor
p1081
I1782
sVsubscriptions
p1082
I0
sVcreated_by
p1083
I1013
sVdraft
p1084
I00
sVpublish_date
p1085
NsVblocked
p1086
I00
sVthumbnail
p1087
Varticle.picture.923cad52cc340b55.61646d696e706c75732e706e67_thumb.png
p1088
sVpicture
p1089
Varticle.picture.923cad52cc340b55.61646d696e706c75732e706e67.png
p1090
sVresponses
p1091
I0
sVviews
p1092
I5567
sVis_active
p1093
I01
sVcontent_type
p1094
V
sVmodified_on
p1095
NsVslug
p1096
Vadmin-plus
p1097
sVtags
p1098
(lp1099
Vadmin
p1100
aVplugin
p1101
asVcontent_type_id
p1102
I4
sVlicense
p1103
V1
sVprivacy
p1104
NsVcreated_on
p1105
NsVmedium_thumbnail
p1106
Varticle.picture.923cad52cc340b55.61646d696e706c75732e706e67_medium_thumb.png
p1107
sVpublish_tz
p1108
V
sVtitle
p1109
VAdmin Plus
p1110
sVcategory_id
p1111
(lp1112
I41
assVpackage_data
p1113
(dp1114
Vpackage_type
p1115
Vplugin
p1116
sVtype_id
p1117
I4
sVdemo
p1118
V
sVdownload
p1119
Vhttps://github.com/pyner/admin_plus/blob/master/web2py.plugin.admin_plus.w2p?raw=true
p1120
sVcreated_on
p1121
NsVrepository_url
p1122
Vhttps://github.com/pyner/admin_plus
p1123
sVscreenshots
p1124
(lp1125
Vhttps://lh4.googleusercontent.com/-WmbChzRuovA/Usnv-uLSVXI/AAAAAAAAAX8/12e5GclFs-U/w905-h509/Screenshot+from+2014-01-05+18:32:35.png
p1126
asVid
p1127
I26
sVmodified_by
p1128
I1013
sVlicense_body
p1129
V                   GNU LESSER GENERAL PUBLIC LICENSE\u000a                       Version 3, 29 June 2007\u000a\u000a Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\u000a Everyone is permitted to copy and distribute verbatim copies\u000a of this license document, but changing it is not allowed.\u000a\u000a\u000a  This version of the GNU Lesser General Public License incorporates\u000athe terms and conditions of version 3 of the GNU General Public\u000aLicense, supplemented by the additional permissions listed below.\u000a\u000a  0. Additional Definitions.\u000a\u000a  As used herein, "this License" refers to version 3 of the GNU Lesser\u000aGeneral Public License, and the "GNU GPL" refers to version 3 of the GNU\u000aGeneral Public License.\u000a\u000a  "The Library" refers to a covered work governed by this License,\u000aother than an Application or a Combined Work as defined below.\u000a\u000a  An "Application" is any work that makes use of an interface provided\u000aby the Library, but which is not otherwise based on the Library.\u000aDefining a subclass of a class defined by the Library is deemed a mode\u000aof using an interface provided by the Library.\u000a\u000a  A "Combined Work" is a work produced by combining or linking an\u000aApplication with the Library.  The particular version of the Library\u000awith which the Combined Work was made is also called the "Linked\u000aVersion".\u000a\u000a  The "Minimal Corresponding Source" for a Combined Work means the\u000aCorresponding Source for the Combined Work, excluding any source code\u000afor portions of the Combined Work that, considered in isolation, are\u000abased on the Application, and not on the Linked Version.\u000a\u000a  The "Corresponding Application Code" for a Combined Work means the\u000aobject code and/or source code for the Application, including any data\u000aand utility programs needed for reproducing the Combined Work from the\u000aApplication, but excluding the System Libraries of the Combined Work.\u000a\u000a  1. Exception to Section 3 of the GNU GPL.\u000a\u000a  You may convey a covered work under sections 3 and 4 of this License\u000awithout being bound by section 3 of the GNU GPL.\u000a\u000a  2. Conveying Modified Versions.\u000a\u000a  If you modify a copy of the Library, and, in your modifications, a\u000afacility refers to a function or data to be supplied by an Application\u000athat uses the facility (other than as an argument passed when the\u000afacility is invoked), then you may convey a copy of the modified\u000aversion:\u000a\u000a   a) under this License, provided that you make a good faith effort to\u000a   ensure that, in the event an Application does not supply the\u000a   function or data, the facility still operates, and performs\u000a   whatever part of its purpose remains meaningful, or\u000a\u000a   b) under the GNU GPL, with none of the additional permissions of\u000a   this License applicable to that copy.\u000a\u000a  3. Object Code Incorporating Material from Library Header Files.\u000a\u000a  The object code form of an Application may incorporate material from\u000aa header file that is part of the Library.  You may convey such object\u000acode under terms of your choice, provided that, if the incorporated\u000amaterial is not limited to numerical parameters, data structure\u000alayouts and accessors, or small macros, inline functions and templates\u000a(ten or fewer lines in length), you do both of the following:\u000a\u000a   a) Give prominent notice with each copy of the object code that the\u000a   Library is used in it and that the Library and its use are\u000a   covered by this License.\u000a\u000a   b) Accompany the object code with a copy of the GNU GPL and this license\u000a   document.\u000a\u000a  4. Combined Works.\u000a\u000a  You may convey a Combined Work under terms of your choice that,\u000ataken together, effectively do not restrict modification of the\u000aportions of the Library contained in the Combined Work and reverse\u000aengineering for debugging such modifications, if you also do each of\u000athe following:\u000a\u000a   a) Give prominent notice with each copy of the Combined Work that\u000a   the Library is used in it and that the Library and its use are\u000a   covered by this License.\u000a\u000a   b) Accompany the Combined Work with a copy of the GNU GPL and this license\u000a   document.\u000a\u000a   c) For a Combined Work that displays copyright notices during\u000a   execution, include the copyright notice for the Library among\u000a   these notices, as well as a reference directing the user to the\u000a   copies of the GNU GPL and this license document.\u000a\u000a   d) Do one of the following:\u000a\u000a       0) Convey the Minimal Corresponding Source under the terms of this\u000a       License, and the Corresponding Application Code in a form\u000a       suitable for, and under terms that permit, the user to\u000a       recombine or relink the Application with a modified version of\u000a       the Linked Version to produce a modified Combined Work, in the\u000a       manner specified by section 6 of the GNU GPL for conveying\u000a       Corresponding Source.\u000a\u000a       1) Use a suitable shared library mechanism for linking with the\u000a       Library.  A suitable mechanism is one that (a) uses at run time\u000a       a copy of the Library already present on the user's computer\u000a       system, and (b) will operate properly with a modified version\u000a       of the Library that is interface-compatible with the Linked\u000a       Version.\u000a\u000a   e) Provide Installation Information, but only if you would otherwise\u000a   be required to provide such information under section 6 of the\u000a   GNU GPL, and only to the extent that such information is\u000a   necessary to install and execute a modified version of the\u000a   Combined Work produced by recombining or relinking the\u000a   Application with a modified version of the Linked Version. (If\u000a   you use option 4d0, the Installation Information must accompany\u000a   the Minimal Corresponding Source and Corresponding Application\u000a   Code. If you use option 4d1, you must provide the Installation\u000a   Information in the manner specified by section 6 of the GNU GPL\u000a   for conveying Corresponding Source.)\u000a\u000a  5. Combined Libraries.\u000a\u000a  You may place library facilities that are a work based on the\u000aLibrary side by side in a single library together with other library\u000afacilities that are not Applications and are not covered by this\u000aLicense, and convey such a combined library under terms of your\u000achoice, if you do both of the following:\u000a\u000a   a) Accompany the combined library with a copy of the same work based\u000a   on the Library, uncombined with any other library facilities,\u000a   conveyed under the terms of this License.\u000a\u000a   b) Give prominent notice with the combined library that part of it\u000a   is a work based on the Library, and explaining where to find the\u000a   accompanying uncombined form of the same work.\u000a\u000a  6. Revised Versions of the GNU Lesser General Public License.\u000a\u000a  The Free Software Foundation may publish revised and/or new versions\u000aof the GNU Lesser General Public License from time to time. Such new\u000aversions will be similar in spirit to the present version, but may\u000adiffer in detail to address new problems or concerns.\u000a\u000a  Each version is given a distinguishing version number. If the\u000aLibrary as you received it specifies that a certain numbered version\u000aof the GNU Lesser General Public License "or any later version"\u000aapplies to it, you have the option of following the terms and\u000aconditions either of that published version or of any later version\u000apublished by the Free Software Foundation. If the Library as you\u000areceived it does not specify a version number of the GNU Lesser\u000aGeneral Public License, you may choose any version of the GNU Lesser\u000aGeneral Public License ever published by the Free Software Foundation.\u000a\u000a  If the Library as you received it specifies that a proxy can decide\u000awhether future versions of the GNU Lesser General Public License shall\u000aapply, that proxy's public statement of acceptance of any version is\u000apermanent authorization for you to choose that version for the\u000aLibrary.\u000a
p1130
sVcreated_by
p1131
I1013
sVrepository_brand
p1132
Vgit
p1133
sVbody
p1134
V<p>\u000a	Install<br />\u000a	<br />\u000a	1. Download and install the plugin<br />\u000a	<br />\u000a	<br />\u000a	2. go to &quot;127.0.0.1:8000/&lt;app&gt;/plugin_admin_plus/install&quot;<br />\u000a	<br />\u000a	3. Get the permissions &quot; plugin_admin_plus_superuser &quot; in &quot;127.0.0.1:8000/&lt;app&gt;/appadmin/insert/db/auth_membership&quot;<br />\u000a	<br />\u000a	4. !! ready! Now you can log in...&nbsp; &quot; 127.0.0.1:8000/&lt;app&gt;/plugin_admin_plus/index&quot;<br />\u000a	<br />\u000a	NOTE: &lt;app&gt; is&nbsp; replaced by the name of your application<br />\u000a	&nbsp;</p>\u000a
p1135
sVpypi
p1136
V
sVis_active
p1137
I01
sVmodified_on
p1138
NsVarticle_id
p1139
I1937
sVlicense_version
p1140
V3
sVmarkup
p1141
Vhtml
p1142
sVdocumentation
p1143
Vhttps://github.com/pyner/admin_plus
p1144
sVlicense_url
p1145
Vhttp://www.gnu.org/licenses/lgpl.html
p1146
sVqualification
p1147
(lp1148
sVrepository_page
p1149
Vhttps://github.com/pyner/admin_plus
p1150
sVlicense_type
p1151
Vlgpl
p1152
sVrepository_project
p1153
VAdmin plus
p1154
ssa(dp1155
Varticle
p1156
(dp1157
Vfavorited
p1158
I3
sVdislikes
p1159
I0
sVauthor_nickname
p1160
NsVfeatured
p1161
I00
sVlikes
p1162
I7
sVkeywords
p1163
NsVid
p1164
I1952
sVdescription
p1165
VFork of existing ckEditor plugin updated to ckEditor v4.4.7 (Jan 2015) (Plugin is v 1.1, March 2015)
p1166
sVmodified_by
p1167
NsVauthor
p1168
I1581
sVsubscriptions
p1169
I1
sVcreated_by
p1170
I1581
sVdraft
p1171
I00
sVpublish_date
p1172
NsVblocked
p1173
I00
sVthumbnail
p1174
Varticle.picture.ab3960fc91d8ab06.434b456469746f722e706e67_thumb.png
p1175
sVpicture
p1176
Varticle.picture.ab3960fc91d8ab06.434b456469746f722e706e67.png
p1177
sVresponses
p1178
I0
sVviews
p1179
I3488
sVis_active
p1180
I01
sVcontent_type
p1181
NsVmodified_on
p1182
NsVslug
p1183
Vck-editor4-plugin
p1184
sVtags
p1185
(lp1186
Vckeditor
p1187
asVcontent_type_id
p1188
I4
sVlicense
p1189
V3
sVprivacy
p1190
NsVcreated_on
p1191
NsVmedium_thumbnail
p1192
Varticle.picture.ab3960fc91d8ab06.434b456469746f722e706e67_medium_thumb.png
p1193
sVpublish_tz
p1194
NsVtitle
p1195
Vck_editor4 plugin
p1196
sVcategory_id
p1197
(lp1198
ssVpackage_data
p1199
(dp1200
Vpackage_type
p1201
Vplugin
p1202
sVtype_id
p1203
I4
sVdemo
p1204
V
sVdownload
p1205
Vhttps://github.com/timrichardson/web2py_ckeditor4/releases/download/v1.1/web2py.plugin.ckeditor.w2p
p1206
sVcreated_on
p1207
NsVrepository_url
p1208
Vhttps://github.com/timrichardson/web2py_ckeditor4
p1209
sVscreenshots
p1210
(lp1211
sVid
p1212
I29
sVmodified_by
p1213
I1581
sVlicense_body
p1214
V
sVcreated_by
p1215
I1581
sVrepository_brand
p1216
Vgit
p1217
sVbody
p1218
V<p>\u000a	A plugin for ckEditor including image uploads and management of images on the server.</p>\u000a<p>\u000a	Includes the full edition of ckEditor v4.4.7 (2015-01) and tested with web2py 2.9.x -&gt; 2.12</p>\u000a<p>\u000a	This is a fork of Bruno Rocha&#39;s plugin. It&#39;s updated to v4 ckeditor, and works better with recent web2py versions. Code is on github, fixes are welcome. There are two maintainers at present.</p>\u000a<p>\u000a	The inline edit has been removed to simplify the code (and it seems that the javascript is no longer maintained upstream).</p>\u000a<p>\u000a	This web2py plugin to add ckeditor to web2py apps is based on the original <a href="https://bitbucket.org/PhreeStyle/web2py_ckeditor/wiki/Home">https://bitbucket.org/PhreeStyle/web2py_ckeditor/wiki/Home</a>)</p>\u000a<p>\u000a	<strong>Upgrading</strong></p>\u000a<p>\u000a	To upgrade to a newer version of ckeditor, replace the directory static/plugin_ckeditor with the directory downloaded from the ckeditor site. You will probably need to refresh or delete browser caches.</p>\u000a<h3>\u000a	Installation</h3>\u000a<p>\u000a	&nbsp;</p>\u000a<p>\u000a	This plugin integrates the CKEditor into web2py.</p>\u000a<p>\u000a	In your model, you need to import and initialize it:</p>\u000a<p>\u000a	&nbsp;</p>\u000a<pre class="prettyprint linenums">from plugin_ckeditor import CKEditor\u000a\u000ackeditor = CKEditor(db)\u000a\u000ackeditor.define_tables()</pre>\u000a<p>\u000a	Note that define_tables defines a table when it is executed, even if lazy tables is used. To avoid this happening on every request, you could move .define_tables to controllers where ckeditor is used.</p>\u000a<p>\u000a	&nbsp;</p>\u000a<h3>\u000a	Basic Usage</h3>\u000a<p>\u000a	Its most basic usage is to assign it to a Field widget:</p>\u000a<p>\u000a	&nbsp;</p>\u000a<pre class="prettyprint linenums">db.define_table(&#39;content&#39;, Field(&#39;title&#39;, length=255), \u000aField(&#39;public&#39;, &#39;boolean&#39;, default=True), \u000aField(&#39;text&#39;, &#39;text&#39;, widget=ckeditor.widget) )</pre>\u000a<p>\u000a	&nbsp;</p>\u000a<p>\u000a	The CKEditor now automatically becomes available every time SQLFORM is used.</p>\u000a<p>\u000a	It includes integrated upload and browse functionality for images. The plugin defines a table to store images. This works using ckeditor&#39;s custom browser integration, which means web2py controls the display of contents when the user cliick browse.</p>\u000a<p>\u000a	Look at the file views/plugin_ckeditor/browse.html to alter the appearance of the uploaded file browser. By default it&#39;s not very attractive.</p>\u000a<p>\u000a	The upload and browse functionality is all taken care of by the plugin and does not require you to do anything on your end once you have initialized the plugin in your model as demonstrated above. You can also delete images from the server.</p>\u000a<p>\u000a	&nbsp;</p>\u000a<h3>\u000a	Thanks and References</h3>\u000a<p>\u000a	Bruno used the following resources in developing this plugin, so a special thanks to the authors of these for providing the ground work required to make this possible:</p>\u000a<p>\u000a	<a href="http://www.web2pyslices.com/main/slices/take_slice/18">http://www.web2pyslices.com/main/slices/take_slice/18</a></p>\u000a<p>\u000a	<a href="http://www.bitsntuts.com/jquery/ckeditor-edit-in-place-jquery-plugin">http://www.bitsntuts.com/jquery/ckeditor-edit-in-place-jquery-plugin</a></p>\u000a<p>\u000a	So far two other GitHub users have contributed improvements:&nbsp;</p>\u000a<h3 style="box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; line-height: 16px; font-size: 16px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); padding: 10px; font-weight: normal; color: rgb(51, 51, 51); font-family: Helvetica, arial, freesans, clean, sans-serif, 'Segoe UI Emoji', 'Segoe UI Symbol';">\u000a	<a class="aname" href="https://github.com/dmvieira" style="box-sizing: border-box; color: rgb(65, 131, 196); background: transparent;">dmvieira</a>&nbsp;and&nbsp;<a class="aname" href="https://github.com/pyner" style="box-sizing: border-box; color: rgb(65, 131, 196); background: transparent;">pyner</a>. Thanks.</h3>\u000a<p>\u000a	&nbsp;</p>\u000a
p1219
sVpypi
p1220
V
sVis_active
p1221
I01
sVmodified_on
p1222
NsVarticle_id
p1223
I1952
sVlicense_version
p1224
V
sVmarkup
p1225
Vhtml
p1226
sVdocumentation
p1227
Vhttps://github.com/timrichardson/web2py_ckeditor4
p1228
sVlicense_url
p1229
V
sVqualification
p1230
(lp1231
sVrepository_page
p1232
Vhttps://github.com/timrichardson/web2py_ckeditor4
p1233
sVlicense_type
p1234
Vlgpl
p1235
sVrepository_project
p1236
Vweb2py_ckeditor4
p1237
ssa(dp1238
Varticle
p1239
(dp1240
Vfavorited
p1241
I0
sVdislikes
p1242
I0
sVauthor_nickname
p1243
NsVfeatured
p1244
I00
sVlikes
p1245
I0
sVkeywords
p1246
NsVid
p1247
I1961
sVdescription
p1248
VA plugin for expand your web2py application with OpenLayers field widgets
p1249
sVmodified_by
p1250
NsVauthor
p1251
I1129
sVsubscriptions
p1252
I1
sVcreated_by
p1253
I1129
sVdraft
p1254
I00
sVpublish_date
p1255
NsVblocked
p1256
I00
sVthumbnail
p1257
NsVpicture
p1258
V
sVresponses
p1259
I0
sVviews
p1260
I2438
sVis_active
p1261
I01
sVcontent_type
p1262
NsVmodified_on
p1263
NsVslug
p1264
Volwidgets
p1265
sVtags
p1266
(lp1267
Vplugin
p1268
aVopenlayers
p1269
asVcontent_type_id
p1270
I4
sVlicense
p1271
V3
sVprivacy
p1272
NsVcreated_on
p1273
NsVmedium_thumbnail
p1274
NsVpublish_tz
p1275
NsVtitle
p1276
Volwidgets
p1277
sVcategory_id
p1278
(lp1279
I41
assVpackage_data
p1280
(dp1281
Vpackage_type
p1282
Vplugin
p1283
sVtype_id
p1284
I4
sVdemo
p1285
V
sVdownload
p1286
Vhttp://cloud.deep.to.it/public.php?service=files&t=87a58546f90c414b719d98a0e85c6ed0
p1287
sVcreated_on
p1288
NsVrepository_url
p1289
Vhttps://github.com/manuelep/web2py.olwidgets
p1290
sVscreenshots
p1291
(lp1292
sVid
p1293
I30
sVmodified_by
p1294
I1129
sVlicense_body
p1295
V
sVcreated_by
p1296
I1129
sVrepository_brand
p1297
Vgit
p1298
sVbody
p1299
V
sVpypi
p1300
V
sVis_active
p1301
I01
sVmodified_on
p1302
NsVarticle_id
p1303
I1961
sVlicense_version
p1304
V
sVmarkup
p1305
Vhtml
p1306
sVdocumentation
p1307
V
sVlicense_url
p1308
V
sVqualification
p1309
(lp1310
sVrepository_page
p1311
Vhttps://github.com/manuelep/web2py.olwidgets
p1312
sVlicense_type
p1313
Vgpl
p1314
sVrepository_project
p1315
Vweb2py.olwidgets
p1316
ssa(dp1317
Varticle
p1318
(dp1319
Vfavorited
p1320
I0
sVdislikes
p1321
I0
sVauthor_nickname
p1322
NsVfeatured
p1323
I00
sVlikes
p1324
I0
sVkeywords
p1325
NsVid
p1326
I1970
sVdescription
p1327
Vhttps://github.com/hiho-/CRYPT_AES
p1328
sVmodified_by
p1329
I2
sVauthor
p1330
I2282
sVsubscriptions
p1331
I0
sVcreated_by
p1332
I2282
sVdraft
p1333
I01
sVpublish_date
p1334
NsVblocked
p1335
I00
sVthumbnail
p1336
NsVpicture
p1337
V
sVresponses
p1338
I0
sVviews
p1339
I0
sVis_active
p1340
I01
sVcontent_type
p1341
NsVmodified_on
p1342
NsVslug
p1343
Vcrypt-aes
p1344
sVtags
p1345
(lp1346
sVcontent_type_id
p1347
I4
sVlicense
p1348
V2
sVprivacy
p1349
NsVcreated_on
p1350
NsVmedium_thumbnail
p1351
NsVpublish_tz
p1352
NsVtitle
p1353
VCRYPT_AES
p1354
sVcategory_id
p1355
(lp1356
ssVpackage_data
p1357
(dp1358
Vpackage_type
p1359
Vplugin
p1360
sVtype_id
p1361
I4
sVdemo
p1362
V
sVdownload
p1363
Vhttps://www.dropbox.com/sh/1x3ztesezz50d2d/AADR9XTpYiAueJjikoVtcAd9a
p1364
sVcreated_on
p1365
NsVrepository_url
p1366
Vhttps://github.com/hiho-/CRYPT_AES
p1367
sVscreenshots
p1368
(lp1369
sVid
p1370
I31
sVmodified_by
p1371
I2282
sVlicense_body
p1372
V
sVcreated_by
p1373
I2282
sVrepository_brand
p1374
Vgit
p1375
sVbody
p1376
V<p>\u000a	CRYPT_AES is a plugin for web2py framework. This will encrypt the database field that you specify.</p>\u000a<p>\u000a	&nbsp;</p>\u000a<p>\u000a	Please see github, if you want to read more.</p>\u000a
p1377
sVpypi
p1378
V
sVis_active
p1379
I01
sVmodified_on
p1380
NsVarticle_id
p1381
I1970
sVlicense_version
p1382
V
sVmarkup
p1383
Vhtml
p1384
sVdocumentation
p1385
Vhttps://github.com/hiho-/CRYPT_AES
p1386
sVlicense_url
p1387
V
sVqualification
p1388
(lp1389
sVrepository_page
p1390
Vhttps://github.com/hiho-/CRYPT_AES
p1391
sVlicense_type
p1392
Vgpl
p1393
sVrepository_project
p1394
VCRYPT_AES
p1395
ssa(dp1396
Varticle
p1397
(dp1398
Vfavorited
p1399
I0
sVdislikes
p1400
I0
sVauthor_nickname
p1401
NsVfeatured
p1402
I00
sVlikes
p1403
I0
sVkeywords
p1404
NsVid
p1405
I1971
sVdescription
p1406
Vhttps://github.com/hiho-/CRYPT_AES
p1407
sVmodified_by
p1408
I2
sVauthor
p1409
I2282
sVsubscriptions
p1410
I0
sVcreated_by
p1411
I2282
sVdraft
p1412
I01
sVpublish_date
p1413
NsVblocked
p1414
I00
sVthumbnail
p1415
NsVpicture
p1416
V
sVresponses
p1417
I0
sVviews
p1418
I0
sVis_active
p1419
I01
sVcontent_type
p1420
NsVmodified_on
p1421
NsVslug
p1422
Vcrypt-aes
p1423
sVtags
p1424
(lp1425
sVcontent_type_id
p1426
I4
sVlicense
p1427
V2
sVprivacy
p1428
NsVcreated_on
p1429
NsVmedium_thumbnail
p1430
NsVpublish_tz
p1431
NsVtitle
p1432
VCRYPT_AES
p1433
sVcategory_id
p1434
(lp1435
ssVpackage_data
p1436
(dp1437
Vpackage_type
p1438
Vplugin
p1439
sVtype_id
p1440
I4
sVdemo
p1441
V
sVdownload
p1442
Vhttps://www.dropbox.com/sh/1x3ztesezz50d2d/AADR9XTpYiAueJjikoVtcAd9a
p1443
sVcreated_on
p1444
NsVrepository_url
p1445
V
sVscreenshots
p1446
(lp1447
sVid
p1448
I32
sVmodified_by
p1449
I2282
sVlicense_body
p1450
V
sVcreated_by
p1451
I2282
sVrepository_brand
p1452
Vgit
p1453
sVbody
p1454
V<p>\u000a	CRYPT_AES is a plugin for web2py framework. This will encrypt the database field that you specify.</p>\u000a
p1455
sVpypi
p1456
V
sVis_active
p1457
I01
sVmodified_on
p1458
NsVarticle_id
p1459
I1971
sVlicense_version
p1460
V
sVmarkup
p1461
Vhtml
p1462
sVdocumentation
p1463
Vhttps://github.com/hiho-/CRYPT_AES
p1464
sVlicense_url
p1465
V
sVqualification
p1466
(lp1467
sVrepository_page
p1468
Vhttps://github.com/hiho-/CRYPT_AES
p1469
sVlicense_type
p1470
Vgpl
p1471
sVrepository_project
p1472
Vhttps://github.com/hiho-/CRYPT_AES
p1473
ssa(dp1474
Varticle
p1475
(dp1476
Vfavorited
p1477
I1
sVdislikes
p1478
I1
sVauthor_nickname
p1479
NsVfeatured
p1480
I00
sVlikes
p1481
I4
sVkeywords
p1482
NsVid
p1483
I1987
sVdescription
p1484
VIt is a plug-in such as a spreadsheet.
p1485
sVmodified_by
p1486
NsVauthor
p1487
I2282
sVsubscriptions
p1488
I0
sVcreated_by
p1489
I2282
sVdraft
p1490
I00
sVpublish_date
p1491
NsVblocked
p1492
I00
sVthumbnail
p1493
Varticle.picture.b88ffb387bcccc0c.73716c6564697461626c655f3030312e706e67_thumb.png
p1494
sVpicture
p1495
Varticle.picture.b88ffb387bcccc0c.73716c6564697461626c655f3030312e706e67.png
p1496
sVresponses
p1497
I0
sVviews
p1498
I3750
sVis_active
p1499
I01
sVcontent_type
p1500
NsVmodified_on
p1501
NsVslug
p1502
Vsqleditable
p1503
sVtags
p1504
(lp1505
sVcontent_type_id
p1506
I4
sVlicense
p1507
V1
sVprivacy
p1508
NsVcreated_on
p1509
NsVmedium_thumbnail
p1510
Varticle.picture.b88ffb387bcccc0c.73716c6564697461626c655f3030312e706e67_medium_thumb.png
p1511
sVpublish_tz
p1512
NsVtitle
p1513
VSQLEDITABLE
p1514
sVcategory_id
p1515
(lp1516
ssVpackage_data
p1517
(dp1518
Vpackage_type
p1519
Vplugin
p1520
sVtype_id
p1521
I4
sVdemo
p1522
Vhttp://docs1.erp2py.com/sqleditable/demo/demo_en.html
p1523
sVdownload
p1524
Vhttps://github.com/hiho-/SQLEDITABLE/releases
p1525
sVcreated_on
p1526
NsVrepository_url
p1527
Vhttps://github.com/hiho-/SQLEDITABLE
p1528
sVscreenshots
p1529
(lp1530
sVid
p1531
I33
sVmodified_by
p1532
I2282
sVlicense_body
p1533
V
sVcreated_by
p1534
I2282
sVrepository_brand
p1535
Vgit
p1536
sVbody
p1537
V
sVpypi
p1538
V
sVis_active
p1539
I01
sVmodified_on
p1540
NsVarticle_id
p1541
I1987
sVlicense_version
p1542
Vv3
p1543
sVmarkup
p1544
Vhtml
p1545
sVdocumentation
p1546
Vhttp://docs1.erp2py.com/sqleditable/docs/document_en.html
p1547
sVlicense_url
p1548
V
sVqualification
p1549
(lp1550
sVrepository_page
p1551
Vhttps://github.com/hiho-/SQLEDITABLE
p1552
sVlicense_type
p1553
Vlgpl
p1554
sVrepository_project
p1555
VSQLEDITABLE
p1556
ssa(dp1557
Varticle
p1558
(dp1559
Vfavorited
p1560
I0
sVdislikes
p1561
I0
sVauthor_nickname
p1562
NsVfeatured
p1563
I00
sVlikes
p1564
I1
sVkeywords
p1565
NsVid
p1566
I1996
sVdescription
p1567
VA Web2py plugin and a webpage for wishes with a snowing effect, using HTML5 & JS\u000aThe preview site is https://piggy1989.pythonanywhere.com/ylrc/plugin_wish/wishes
p1568
sVmodified_by
p1569
NsVauthor
p1570
I2353
sVsubscriptions
p1571
I0
sVcreated_by
p1572
I2353
sVdraft
p1573
I00
sVpublish_date
p1574
NsVblocked
p1575
I00
sVthumbnail
p1576
Varticle.picture.b58fe6d473a56b5f.556e7469746c65642e706e67_thumb.png
p1577
sVpicture
p1578
Varticle.picture.b58fe6d473a56b5f.556e7469746c65642e706e67.png
p1579
sVresponses
p1580
I0
sVviews
p1581
I1843
sVis_active
p1582
I01
sVcontent_type
p1583
NsVmodified_on
p1584
NsVslug
p1585
Vsnowingwishes
p1586
sVtags
p1587
(lp1588
Vhtml5
p1589
asVcontent_type_id
p1590
I4
sVlicense
p1591
V2
sVprivacy
p1592
NsVcreated_on
p1593
NsVmedium_thumbnail
p1594
Varticle.picture.b58fe6d473a56b5f.556e7469746c65642e706e67_medium_thumb.png
p1595
sVpublish_tz
p1596
NsVtitle
p1597
VSnowingWishes
p1598
sVcategory_id
p1599
(lp1600
I41
assVpackage_data
p1601
(dp1602
Vpackage_type
p1603
Vplugin
p1604
sVtype_id
p1605
I4
sVdemo
p1606
Vhttps://piggy1989.pythonanywhere.com/ylrc/plugin_wish/wishes
p1607
sVdownload
p1608
V
sVcreated_on
p1609
NsVrepository_url
p1610
V
sVscreenshots
p1611
(lp1612
sVid
p1613
I34
sVmodified_by
p1614
I2353
sVlicense_body
p1615
V
sVcreated_by
p1616
I2353
sVrepository_brand
p1617
Vgit
p1618
sVbody
p1619
V<h1 style="box-sizing: border-box; font-size: 2.25em; margin-bottom: 16px; line-height: 1.2; position: relative; padding-bottom: 0.3em; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; margin-top: 0px !important;">\u000a	SnowingWishes</h1>\u000a<p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; text-align: start;">\u000a	A&nbsp;<a href="http://www.web2py.com/" style="box-sizing: border-box; color: rgb(65, 131, 196); background: transparent;">Web2py</a>&nbsp;plugin and a webpage for wishes with a snowing effect, using HTML5 &amp; JS</p>\u000a<p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; text-align: start;">\u000a	The preview site is&nbsp;<a href="https://piggy1989.pythonanywhere.com/ylrc/plugin_wish/wishes" style="box-sizing: border-box; color: rgb(65, 131, 196); background: transparent;">https://piggy1989.pythonanywhere.com/ylrc/plugin_wish/wishes</a></p>\u000a<p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; text-align: start;">\u000a	All you need to do is two steps:</p>\u000a<p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; text-align: start;">\u000a	1.Adding the following script in your default.py.</p>\u000a<pre style="box-sizing: border-box; overflow: auto; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 14px; margin-top: 0px; margin-bottom: 16px; line-height: 1.45; padding: 16px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; word-wrap: normal; color: rgb(51, 51, 51); background-color: rgb(247, 247, 247);">def wish():\u000a    wishes=db(db.plugin_wish_wishes.apply_time!=None).select(orderby=~db.plugin_wish_wishes.apply_time, limitby=(0,100))\u000a    return dict(wishes=wishes)\u000a</pre>\u000a<p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; text-align: start;">\u000a	2.Adding the following script in your db.py.</p>\u000a<pre style="box-sizing: border-box; overflow: auto; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 14px; margin-top: 0px; line-height: 1.45; padding: 16px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; word-wrap: normal; color: rgb(51, 51, 51); margin-bottom: 0px !important; background-color: rgb(247, 247, 247);">from plugin_wish import Wish\u000awish = Wish(db)\u000awish.define_tables()</pre>\u000a
p1620
sVpypi
p1621
V
sVis_active
p1622
I01
sVmodified_on
p1623
NsVarticle_id
p1624
I1996
sVlicense_version
p1625
V
sVmarkup
p1626
Vhtml
p1627
sVdocumentation
p1628
V
sVlicense_url
p1629
V
sVqualification
p1630
(lp1631
sVrepository_page
p1632
Vhttps://github.com/piggy1989/SnowingWishes
p1633
sVlicense_type
p1634
Vmit
p1635
sVrepository_project
p1636
VSnowingWishes
p1637
ssa(dp1638
Varticle
p1639
(dp1640
Vfavorited
p1641
I0
sVdislikes
p1642
I0
sVauthor_nickname
p1643
NsVfeatured
p1644
I00
sVlikes
p1645
I0
sVkeywords
p1646
NsVid
p1647
I1998
sVdescription
p1648
VThumbnails plugin for the web2py framework.\u000a\u000aThis plugin allows automatic creation of thumbnails from image upload fields. It creates a virtual field and not modify original tables.
p1649
sVmodified_by
p1650
NsVauthor
p1651
I2298
sVsubscriptions
p1652
I0
sVcreated_by
p1653
I2298
sVdraft
p1654
I00
sVpublish_date
p1655
NsVblocked
p1656
I00
sVthumbnail
p1657
NsVpicture
p1658
V
sVresponses
p1659
I0
sVviews
p1660
I77
sVis_active
p1661
I01
sVcontent_type
p1662
NsVmodified_on
p1663
NsVslug
p1664
Vthumbnails-plugin
p1665
sVtags
p1666
(lp1667
Vthumbnails
p1668
aVimages
p1669
aVplugin
p1670
asVcontent_type_id
p1671
I4
sVlicense
p1672
V1
sVprivacy
p1673
NsVcreated_on
p1674
NsVmedium_thumbnail
p1675
NsVpublish_tz
p1676
NsVtitle
p1677
VThumbnails plugin
p1678
sVcategory_id
p1679
(lp1680
ssVpackage_data
p1681
(dp1682
Vpackage_type
p1683
Vplugin
p1684
sVtype_id
p1685
I4
sVdemo
p1686
V
sVdownload
p1687
Vhttps://github.com/cccaballero/web2py-thumbnails
p1688
sVcreated_on
p1689
NsVrepository_url
p1690
Vhttps://github.com/cccaballero/web2py-thumbnails
p1691
sVscreenshots
p1692
(lp1693
sVid
p1694
I35
sVmodified_by
p1695
I2298
sVlicense_body
p1696
V
sVcreated_by
p1697
I2298
sVrepository_brand
p1698
Vgit
p1699
sVbody
p1700
V<h4>\u000a	web2py-thumbnails</h4>\u000a<p>\u000a	Thumbnails plugin for the web2py framework.</p>\u000a<p>\u000a	This plugin allows automatic creation of thumbnails from image upload fields. It creates a virtual field and not modify original tables.</p>\u000a<h4>\u000a	Installation</h4>\u000a<ul class="task-list">\u000a	<li>\u000a		Install or include Python Imaging Library (PIL)</li>\u000a	<li>\u000a		Download The plugin installer (.w2p file) and install it via the web2py interface.</li>\u000a</ul>\u000a<h4>\u000a	Usage</h4>\u000a<pre class="prettyprint linenums"># coding: utf8\u000a\u000adb = DAL()\u000adb.define_table(&#39;mytable&#39;,Field(&#39;myfield&#39;,&#39;string&#39;),\u000a                          Field(&#39;img&#39;,&#39;upload&#39;))\u000a\u000afrom plugin_thumbnails.thumbnails import thumbnails       # imports thumbnails plugin\u000athumb = thumbnails(db)                                    # instantiate plugin and crete needed table\u000athumb.create(db.mytable.img)                              # create thumbnails for mytable img field\u000a\u000adb.mytable.insert(myfield=&#39;Char&#39;,img=image)               # automatically create thumbnail for img field\u000adb(db.mytable.id).update(img=new_image)                   # automatically update thumbnail\u000athumbnail = db(db.mytable).select().first().img_thumbnail # select thumbnail\u000adb(db.mytable).delete()                                   # automatically delete thumbnail\u000a\u000a</pre>\u000a
p1701
sVpypi
p1702
V
sVis_active
p1703
I01
sVmodified_on
p1704
NsVarticle_id
p1705
I1998
sVlicense_version
p1706
V
sVmarkup
p1707
Vhtml
p1708
sVdocumentation
p1709
V
sVlicense_url
p1710
V
sVqualification
p1711
(lp1712
sVrepository_page
p1713
Vhttps://github.com/cccaballero/web2py-thumbnails
p1714
sVlicense_type
p1715
Vgpl
p1716
sVrepository_project
p1717
Vweb2py-thumbnails
p1718
ssa(dp1719
Varticle
p1720
(dp1721
Vfavorited
p1722
I0
sVdislikes
p1723
I0
sVauthor_nickname
p1724
NsVfeatured
p1725
I00
sVlikes
p1726
I0
sVkeywords
p1727
NsVid
p1728
I1999
sVdescription
p1729
VThis plugin allows automatic creation of thumbnails from image upload fields. It creates a virtual field and not modify original tables.
p1730
sVmodified_by
p1731
NsVauthor
p1732
I2298
sVsubscriptions
p1733
I0
sVcreated_by
p1734
I2298
sVdraft
p1735
I00
sVpublish_date
p1736
NsVblocked
p1737
I00
sVthumbnail
p1738
NsVpicture
p1739
V
sVresponses
p1740
I0
sVviews
p1741
I73
sVis_active
p1742
I01
sVcontent_type
p1743
NsVmodified_on
p1744
NsVslug
p1745
Vthumbnails-plugin
p1746
sVtags
p1747
(lp1748
Vthumbnails
p1749
aVplugin
p1750
asVcontent_type_id
p1751
I4
sVlicense
p1752
V2
sVprivacy
p1753
NsVcreated_on
p1754
NsVmedium_thumbnail
p1755
NsVpublish_tz
p1756
NsVtitle
p1757
VThumbnails plugin
p1758
sVcategory_id
p1759
(lp1760
I41
assVpackage_data
p1761
(dp1762
Vpackage_type
p1763
Vplugin
p1764
sVtype_id
p1765
I4
sVdemo
p1766
V
sVdownload
p1767
Vhttps://github.com/cccaballero/web2py-thumbnails/blob/master/web2py.plugin.thumbnails.w2p?raw=true
p1768
sVcreated_on
p1769
NsVrepository_url
p1770
Vhttps://github.com/cccaballero/web2py-thumbnails
p1771
sVscreenshots
p1772
(lp1773
sVid
p1774
I36
sVmodified_by
p1775
I2298
sVlicense_body
p1776
V
sVcreated_by
p1777
I2298
sVrepository_brand
p1778
Vgit
p1779
sVbody
p1780
V<h3>\u000a	Thumbnails plugin for the web2py framework.</h3>\u000a<p>\u000a	This plugin allows automatic creation of thumbnails from image upload fields. It creates a virtual field and not modify original tables.</p>\u000a<h4>\u000a	Installation</h4>\u000a<ul class="task-list">\u000a	<li>\u000a		Install or include Python Imaging Library (PIL)</li>\u000a	<li>\u000a		Download The plugin installer (.w2p file) and install it via the web2py interface.</li>\u000a</ul>\u000a<h4>\u000a	Usage</h4>\u000a<pre class="prettyprint linenums"># coding: utf8\u000a\u000adb = DAL()\u000adb.define_table(&#39;mytable&#39;,Field(&#39;myfield&#39;,&#39;string&#39;),\u000a                          Field(&#39;img&#39;,&#39;upload&#39;))\u000a\u000afrom plugin_thumbnails.thumbnails import thumbnails       # imports thumbnails plugin\u000athumb = thumbnails(db)                                    # instantiate plugin and crete needed table\u000athumb.create(db.mytable.img)                              # create thumbnails for mytable img field\u000a\u000adb.mytable.insert(myfield=&#39;Char&#39;,img=image)               # automatically create thumbnail for img field\u000adb(db.mytable.id).update(img=new_image)                   # automatically update thumbnail\u000athumbnail = db(db.mytable).select().first().img_thumbnail # select thumbnail\u000adb(db.mytable).delete()                                   # automatically delete thumbnail\u000a\u000a</pre>\u000a
p1781
sVpypi
p1782
V
sVis_active
p1783
I01
sVmodified_on
p1784
NsVarticle_id
p1785
I1999
sVlicense_version
p1786
V
sVmarkup
p1787
Vhtml
p1788
sVdocumentation
p1789
V
sVlicense_url
p1790
V
sVqualification
p1791
(lp1792
sVrepository_page
p1793
Vhttps://github.com/cccaballero/web2py-thumbnails
p1794
sVlicense_type
p1795
Vlgpl
p1796
sVrepository_project
p1797
Vweb2py-thumbnails
p1798
ssa(dp1799
Varticle
p1800
(dp1801
Vfavorited
p1802
I0
sVdislikes
p1803
I0
sVauthor_nickname
p1804
NsVfeatured
p1805
I00
sVlikes
p1806
I0
sVkeywords
p1807
NsVid
p1808
I2000
sVdescription
p1809
VThis plugin allows automatic creation of thumbnails from image upload fields. It creates a virtual field and not modify original tables.
p1810
sVmodified_by
p1811
NsVauthor
p1812
I2298
sVsubscriptions
p1813
I0
sVcreated_by
p1814
I2298
sVdraft
p1815
I00
sVpublish_date
p1816
NsVblocked
p1817
I00
sVthumbnail
p1818
NsVpicture
p1819
V
sVresponses
p1820
I0
sVviews
p1821
I119
sVis_active
p1822
I01
sVcontent_type
p1823
NsVmodified_on
p1824
NsVslug
p1825
Vthumbnails-plugin
p1826
sVtags
p1827
(lp1828
Vplugin
p1829
aVthumbnails
p1830
asVcontent_type_id
p1831
I4
sVlicense
p1832
V1
sVprivacy
p1833
NsVcreated_on
p1834
NsVmedium_thumbnail
p1835
NsVpublish_tz
p1836
NsVtitle
p1837
VThumbnails plugin
p1838
sVcategory_id
p1839
(lp1840
I41
assVpackage_data
p1841
(dp1842
Vpackage_type
p1843
Vplugin
p1844
sVtype_id
p1845
I4
sVdemo
p1846
V
sVdownload
p1847
Vhttps://github.com/cccaballero/web2py-thumbnails/blob/master/web2py.plugin.thumbnails.w2p?raw=true
p1848
sVcreated_on
p1849
NsVrepository_url
p1850
Vhttps://github.com/cccaballero/web2py-thumbnails
p1851
sVscreenshots
p1852
(lp1853
sVid
p1854
I37
sVmodified_by
p1855
I2298
sVlicense_body
p1856
V
sVcreated_by
p1857
I2298
sVrepository_brand
p1858
Vgit
p1859
sVbody
p1860
V<h3>\u000a	Thumbnails plugin for the web2py framework.</h3>\u000a<p>\u000a	This plugin allows automatic creation of thumbnails from image upload fields. It creates a virtual field and not modify original tables.</p>\u000a<h4>\u000a	Installation</h4>\u000a<ul class="task-list">\u000a	<li>\u000a		Install or include Python Imaging Library (PIL)</li>\u000a	<li>\u000a		Download The plugin installer (.w2p file) and install it via the web2py interface.</li>\u000a</ul>\u000a<h4>\u000a	Usage</h4>\u000a<pre class="prettyprint linenums"># coding: utf8\u000a\u000adb = DAL()\u000adb.define_table(&#39;mytable&#39;,Field(&#39;myfield&#39;,&#39;string&#39;),\u000a                          Field(&#39;img&#39;,&#39;upload&#39;))\u000a\u000afrom plugin_thumbnails.thumbnails import thumbnails       # imports thumbnails plugin\u000athumb = thumbnails(db)                                    # instantiate plugin and crete needed table\u000athumb.create(db.mytable.img)                              # create thumbnails for mytable img field\u000a\u000adb.mytable.insert(myfield=&#39;Char&#39;,img=image)               # automatically create thumbnail for img field\u000adb(db.mytable.id).update(img=new_image)                   # automatically update thumbnail\u000athumbnail = db(db.mytable).select().first().img_thumbnail # select thumbnail\u000adb(db.mytable).delete()                                   # automatically delete thumbnail\u000a\u000a</pre>\u000a
p1861
sVpypi
p1862
V
sVis_active
p1863
I01
sVmodified_on
p1864
NsVarticle_id
p1865
I2000
sVlicense_version
p1866
V
sVmarkup
p1867
Vhtml
p1868
sVdocumentation
p1869
V
sVlicense_url
p1870
V
sVqualification
p1871
(lp1872
sVrepository_page
p1873
Vhttps://github.com/cccaballero/web2py-thumbnails
p1874
sVlicense_type
p1875
Vlgpl
p1876
sVrepository_project
p1877
Vweb2py-thumbnails
p1878
ssa(dp1879
Varticle
p1880
(dp1881
Vfavorited
p1882
I0
sVdislikes
p1883
I0
sVauthor_nickname
p1884
NsVfeatured
p1885
I00
sVlikes
p1886
I0
sVkeywords
p1887
NsVid
p1888
I2018
sVdescription
p1889
VCreate admin group (and other groups), make possible edit user membership of the groups.
p1890
sVmodified_by
p1891
NsVauthor
p1892
I2198
sVsubscriptions
p1893
I0
sVcreated_by
p1894
I2198
sVdraft
p1895
I00
sVpublish_date
p1896
NsVblocked
p1897
I00
sVthumbnail
p1898
NsVpicture
p1899
V
sVresponses
p1900
I0
sVviews
p1901
I266
sVis_active
p1902
I01
sVcontent_type
p1903
NsVmodified_on
p1904
NsVslug
p1905
Vplugin-manage-groups
p1906
sVtags
p1907
(lp1908
Vadmin
p1909
aVgroups
p1910
aVmembership
p1911
aVauth
p1912
asVcontent_type_id
p1913
I4
sVlicense
p1914
V1
sVprivacy
p1915
NsVcreated_on
p1916
NsVmedium_thumbnail
p1917
NsVpublish_tz
p1918
NsVtitle
p1919
Vplugin_MANAGE_GROUPS
p1920
sVcategory_id
p1921
(lp1922
ssVpackage_data
p1923
(dp1924
Vpackage_type
p1925
Vplugin
p1926
sVtype_id
p1927
I4
sVdemo
p1928
V
sVdownload
p1929
Vhttps://github.com/zvolsky/plugin_manage_groups/blob/master/web2py.plugin.manage_groups.w2p
p1930
sVcreated_on
p1931
NsVrepository_url
p1932
Vhttps://github.com/zvolsky/plugin_manage_groups
p1933
sVscreenshots
p1934
(lp1935
sVid
p1936
I38
sVmodified_by
p1937
I2198
sVlicense_body
p1938
VSame licensing as Web2py
p1939
sVcreated_by
p1940
I2198
sVrepository_brand
p1941
Vgit
p1942
sVbody
p1943
V<p>\u000a	Creates an admin group, makes the first user its member and give him possibility to manage admin membership at url</p>\u000a<p>\u000a	(app)/plugin_manage_groups</p>\u000a<p>\u000a	and create/manage other groups at url</p>\u000a<p>\u000a	(app)/plugin_manage_groups/group/(group-name)</p>\u000a
p1944
sVpypi
p1945
V
sVis_active
p1946
I01
sVmodified_on
p1947
NsVarticle_id
p1948
I2018
sVlicense_version
p1949
V3
sVmarkup
p1950
Vhtml
p1951
sVdocumentation
p1952
Vhttps://github.com/zvolsky/plugin_manage_groups
p1953
sVlicense_url
p1954
Vhttps://github.com/zvolsky/plugin_manage_groups/blob/master/LICENSE
p1955
sVqualification
p1956
(lp1957
sVrepository_page
p1958
Vhttps://github.com/zvolsky/plugin_manage_groups
p1959
sVlicense_type
p1960
Vlgpl
p1961
sVrepository_project
p1962
Vplugin_MANAGE_GROUPS
p1963
ssa(dp1964
Varticle
p1965
(dp1966
Vfavorited
p1967
I0
sVdislikes
p1968
I0
sVauthor_nickname
p1969
NsVfeatured
p1970
I00
sVlikes
p1971
I0
sVkeywords
p1972
NsVid
p1973
I2028
sVdescription
p1974
VTesting - what type of 'slice' will be counted in profile as 'wrote N slices' to give possibility to edit previous entries?
p1975
sVmodified_by
p1976
I1013
sVauthor
p1977
I2478
sVsubscriptions
p1978
I0
sVcreated_by
p1979
I2478
sVdraft
p1980
I00
sVpublish_date
p1981
NsVblocked
p1982
I00
sVthumbnail
p1983
NsVpicture
p1984
V
sVresponses
p1985
I0
sVviews
p1986
I5
sVis_active
p1987
I00
sVcontent_type
p1988
NsVmodified_on
p1989
NsVslug
p1990
Vtesting-what-type-of-slice-will-be-counted-package-as-other-user
p1991
sVtags
p1992
(lp1993
Vplugin
p1994
asVcontent_type_id
p1995
I4
sVlicense
p1996
V2
sVprivacy
p1997
NsVcreated_on
p1998
NsVmedium_thumbnail
p1999
NsVpublish_tz
p2000
NsVtitle
p2001
VTesting - what type of 'slice' will be counted - Package? (as other user)
p2002
sVcategory_id
p2003
(lp2004
I41
assVpackage_data
p2005
(dp2006
Vpackage_type
p2007
Vplugin
p2008
sVtype_id
p2009
I4
sVdemo
p2010
Vhttps://github.com/zvolsky/plugin_manage_groups
p2011
sVdownload
p2012
Vhttps://zvolsky.github.io/plugin_manage_groups/web2py.plugin.manage_groups.w2p
p2013
sVcreated_on
p2014
NsVrepository_url
p2015
Vhttps://github.com/zvolsky/plugin_manage_groups
p2016
sVscreenshots
p2017
(lp2018
sVid
p2019
I39
sVmodified_by
p2020
I2478
sVlicense_body
p2021
VLGPLv3 and/or same as Web2py
p2022
sVcreated_by
p2023
I2478
sVrepository_brand
p2024
Vgit
p2025
sVbody
p2026
V<p>\u000a	<span style="color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px;">Create admin group (and other groups), make possible edit user membership of the groups.</span></p>\u000a
p2027
sVpypi
p2028
Vhttps://github.com/zvolsky/plugin_manage_groups
p2029
sVis_active
p2030
I01
sVmodified_on
p2031
NsVarticle_id
p2032
I2028
sVlicense_version
p2033
Vv3
p2034
sVmarkup
p2035
Vhtml
p2036
sVdocumentation
p2037
Vhttps://github.com/zvolsky/plugin_manage_groups
p2038
sVlicense_url
p2039
Vhttps://github.com/zvolsky/plugin_manage_groups/blob/master/LICENSE
p2040
sVqualification
p2041
(lp2042
sVrepository_page
p2043
Vhttps://github.com/zvolsky/plugin_manage_groups
p2044
sVlicense_type
p2045
Vlgpl
p2046
sVrepository_project
p2047
Vplugin_MANAGE_GROUPS
p2048
ssa(dp2049
Varticle
p2050
(dp2051
Vfavorited
p2052
I0
sVdislikes
p2053
I0
sVauthor_nickname
p2054
NsVfeatured
p2055
I00
sVlikes
p2056
I0
sVkeywords
p2057
NsVid
p2058
I2029
sVdescription
p2059
VTesting - what type of 'slice' will be counted in profile as 'wrote N slices' to give possibility to edit previous entries?
p2060
sVmodified_by
p2061
I1013
sVauthor
p2062
I2478
sVsubscriptions
p2063
I0
sVcreated_by
p2064
I2478
sVdraft
p2065
I00
sVpublish_date
p2066
NsVblocked
p2067
I00
sVthumbnail
p2068
NsVpicture
p2069
V
sVresponses
p2070
I0
sVviews
p2071
I3
sVis_active
p2072
I00
sVcontent_type
p2073
NsVmodified_on
p2074
NsVslug
p2075
Vtesting-what-type-of-slice-will-be-counted-package-as-other-user-2
p2076
sVtags
p2077
(lp2078
Vplugin
p2079
asVcontent_type_id
p2080
I4
sVlicense
p2081
V2
sVprivacy
p2082
NsVcreated_on
p2083
NsVmedium_thumbnail
p2084
NsVpublish_tz
p2085
NsVtitle
p2086
VTesting - what type of 'slice' will be counted - Package? (as other user /2)
p2087
sVcategory_id
p2088
(lp2089
ssVpackage_data
p2090
(dp2091
Vpackage_type
p2092
Vplugin
p2093
sVtype_id
p2094
I4
sVdemo
p2095
Vhttps://github.com/zvolsky/plugin_manage_groups
p2096
sVdownload
p2097
Vhttps://zvolsky.github.io/plugin_manage_groups/web2py.plugin.manage_groups.w2p
p2098
sVcreated_on
p2099
NsVrepository_url
p2100
Vhttps://github.com/zvolsky/plugin_manage_groups
p2101
sVscreenshots
p2102
(lp2103
sVid
p2104
I40
sVmodified_by
p2105
I2478
sVlicense_body
p2106
VLGPLv3
p2107
sVcreated_by
p2108
I2478
sVrepository_brand
p2109
Vgit
p2110
sVbody
p2111
V<p>\u000a	<span style="color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px;">Create admin group (and other groups), make possible edit user membership of the groups.</span></p>\u000a
p2112
sVpypi
p2113
Vhttps://github.com/zvolsky/plugin_manage_groups
p2114
sVis_active
p2115
I01
sVmodified_on
p2116
NsVarticle_id
p2117
I2029
sVlicense_version
p2118
Vv3
p2119
sVmarkup
p2120
Vhtml
p2121
sVdocumentation
p2122
Vhttps://github.com/zvolsky/plugin_manage_groups
p2123
sVlicense_url
p2124
Vhttps://github.com/zvolsky/plugin_manage_groups/blob/master/LICENSE
p2125
sVqualification
p2126
(lp2127
sVrepository_page
p2128
Vhttps://github.com/zvolsky/plugin_manage_groups
p2129
sVlicense_type
p2130
Vlgpl
p2131
sVrepository_project
p2132
Vplugin_MANAGE_GROUPS
p2133
ssassS'_formkey[appcreate/create]'
p2134
(lp2135
S'7b1f7895-1123-4946-b0eb-9b966150b034'
p2136
aS'67c19b1f-0611-44eb-83d6-5625aa328dd9'
p2137
aS'11d5a073-7ed1-4dde-8036-b5b1546964ec'
p2138
aS'b6b8c151-d65f-452f-82f4-2a6fb8a7cb7e'
p2139
aS'075f458b-b83f-462e-b89f-04cc4ef9852a'
p2140
aS'd766eeec-a282-4786-9570-84d62ce23158'
p2141
aS'247801ec-c3fd-4d78-bc70-d85adf0116f1'
p2142
asS'last_time'
p2143
F1437769775.0882051
s.