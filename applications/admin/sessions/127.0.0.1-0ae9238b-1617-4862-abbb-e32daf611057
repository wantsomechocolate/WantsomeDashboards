(dp1
S'_user_agent'
p2
cgluon.storage
Storage
p3
((dp4
S'os'
p5
g3
((dp6
S'name'
p7
S'Linux'
p8
stRp9
sS'is_tablet'
p10
I00
sS'is_mobile'
p11
I00
sS'browser'
p12
g3
((dp13
S'version'
p14
S'41.0.2272.89'
p15
sg7
S'Chrome'
p16
stRp17
stRp18
sS'flash'
p19
NsS'pam_user'
p20
NsS'_formkey[appupdate/create]'
p21
(lp22
S'a2b7df5a-8da0-4544-8ed6-9dc36c2bfa9f'
p23
aS'80f44011-dbe5-400a-bb9a-73a0b12fd477'
p24
aS'6bb5af0d-dab2-4884-932f-c7131520fa98'
p25
aS'7c34b8b7-a9e1-49e0-8b86-c048ef15a467'
p26
aS'7e75d129-6a04-4102-b34f-8f40fde00ed3'
p27
aS'39b24b52-ce42-4c7a-a2a8-89ada2ed58aa'
p28
aS'c0a524c2-32b8-4cca-9120-e11da9d6db0e'
p29
aS'9cdb68a6-f277-4ca8-a071-44aeda41f242'
p30
asS'check_version'
p31
I00
sS'token'
p32
S'c05f9adb-b6cb-469f-b838-a9cd40591b24'
p33
sg11
S'auto'
p34
sS'authorized'
p35
I01
sS'plugins'
p36
(dp37
Vdebug
p38
(dp39
Vcount
p40
I25
sVquery
p41
V(((article.id = package_data.article_id) AND (article.content_type_id = 4)) AND (package_data.package_type = 'plugin'))
p42
sVcontent_type
p43
VPackage
p44
sVfieldnames
p45
(lp46
Varticle.id
p47
aVarticle.author
p48
aVarticle.author_nickname
p49
aVarticle.title
p50
aVarticle.description
p51
aVarticle.picture
p52
aVarticle.medium_thumbnail
p53
aVarticle.thumbnail
p54
aVarticle.draft
p55
aVarticle.category_id
p56
aVarticle.tags
p57
aVarticle.keywords
p58
aVarticle.content_type_id
p59
aVarticle.content_type
p60
aVarticle.slug
p61
aVarticle.publish_date
p62
aVarticle.publish_tz
p63
aVarticle.featured
p64
aVarticle.blocked
p65
aVarticle.privacy
p66
aVarticle.license
p67
aVarticle.likes
p68
aVarticle.dislikes
p69
aVarticle.views
p70
aVarticle.responses
p71
aVarticle.favorited
p72
aVarticle.subscriptions
p73
aVarticle.is_active
p74
aVarticle.created_on
p75
aVarticle.created_by
p76
aVarticle.modified_on
p77
aVarticle.modified_by
p78
aVpackage_data.id
p79
aVpackage_data.markup
p80
aVpackage_data.body
p81
aVpackage_data.package_type
p82
aVpackage_data.repository_project
p83
aVpackage_data.repository_brand
p84
aVpackage_data.repository_url
p85
aVpackage_data.repository_page
p86
aVpackage_data.pypi
p87
aVpackage_data.documentation
p88
aVpackage_data.demo
p89
aVpackage_data.download
p90
aVpackage_data.license_type
p91
aVpackage_data.license_version
p92
aVpackage_data.license_url
p93
aVpackage_data.license_body
p94
aVpackage_data.screenshots
p95
aVpackage_data.qualification
p96
aVpackage_data.article_id
p97
aVpackage_data.type_id
p98
aVpackage_data.is_active
p99
aVpackage_data.created_on
p100
aVpackage_data.created_by
p101
aVpackage_data.modified_on
p102
aVpackage_data.modified_by
p103
assVmessage
p104
Vdone
p105
sVresults
p106
(lp107
(dp108
Varticle
p109
(dp110
Vfavorited
p111
I0
sVdislikes
p112
I0
sVauthor_nickname
p113
NsVfeatured
p114
I00
sVlikes
p115
I0
sVkeywords
p116
NsVid
p117
I1659
sVdescription
p118
Vweb2py plugin for Python math packages
p119
sVmodified_by
p120
NsVauthor
p121
I1013
sVsubscriptions
p122
I1
sVcreated_by
p123
I1013
sVdraft
p124
I00
sVpublish_date
p125
NsVblocked
p126
I00
sVthumbnail
p127
Varticle.picture.937eea243df39aa5.6d6174683270795f6c6f676f5f7371756172652e706e67_thumb.png
p128
sVpicture
p129
Varticle.picture.937eea243df39aa5.6d6174683270795f6c6f676f5f7371756172652e706e67.png
p130
sVresponses
p131
I0
sVviews
p132
I2232
sVis_active
p133
I01
sVcontent_type
p134
NsVmodified_on
p135
NsVslug
p136
Vmath2py
p137
sVtags
p138
(lp139
Vmath
p140
aVplugin
p141
aVapp
p142
asVcontent_type_id
p143
I4
sVlicense
p144
V1
sVprivacy
p145
NsVcreated_on
p146
NsVmedium_thumbnail
p147
Varticle.picture.937eea243df39aa5.6d6174683270795f6c6f676f5f7371756172652e706e67_medium_thumb.png
p148
sVpublish_tz
p149
NsVtitle
p150
Vmath2py
p151
sVcategory_id
p152
(lp153
ssVpackage_data
p154
(dp155
Vpackage_type
p156
Vplugin
p157
sVtype_id
p158
I4
sVdemo
p159
Vhttp://math2py.appspot.com/
p160
sVdownload
p161
Vhttps://docs.google.com/uc?export=download&id=0B1G2yisrauPCcmgxeWt3RnhJWFE
p162
sVcreated_on
p163
NsVrepository_url
p164
Vhttps://code.google.com/p/math2py/ 
p165
sVscreenshots
p166
(lp167
Vhttp://revista.python.org.ar/4/es/images/math2py/graph_1.jpg
p168
aVhttp://revista.python.org.ar/4/es/images/math2py/math_panel_1.jpg
p169
asVid
p170
I4
sVmodified_by
p171
I1013
sVlicense_body
p172
V   math2py: web2py plugin/app interface for Python math tools\u000a    Copyright (C) 2011  Alan Etkin\u000a\u000a    This program is free software: you can redistribute it and/or modify\u000a    it under the terms of the GNU Affero General Public License as published by\u000a    the Free Software Foundation, either version 3 of the License, or\u000a    (at your option) any later version.\u000a\u000a    This program is distributed in the hope that it will be useful,\u000a    but WITHOUT ANY WARRANTY; without even the implied warranty of\u000a    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\u000a    GNU Affero General Public License for more details.\u000a\u000a    You should have received a copy of the GNU Affero General Public License\u000a    along with this program.  If not, see <http://www.gnu.org/licenses/>.
p173
sVcreated_by
p174
I1013
sVrepository_brand
p175
Vhg
p176
sVbody
p177
V<p>\u000a	math2py is a web2py app with web mathematical tools. It is designed as an easy to install and friendly web interface for python math modules including mpmath(r). math2py can be installed in almost every system supporting python 2.4 or newer versions like Google App Engine(r) . Released under de terms of AGPLv3 license</p>\u000a<p>\u000a	Developed with web2py</p>\u000a<p>\u000a	This project repository contains code from other Python and JavaScript<a href="http://code.google.com/p/math2py/w/edit/JavaScript">?</a> packages as <a href="http://code.google.com/p/flot" rel="nofollow">flot</a> and <a href="http://code.google.com/p/mpmath" rel="nofollow">mpmath</a> to satisfy dependencies. For license information on each project source code please visit the referred project sites.</p>\u000a
p178
sVpypi
p179
V
sVis_active
p180
I01
sVmodified_on
p181
NsVarticle_id
p182
I1659
sVlicense_version
p183
V3
sVmarkup
p184
Vhtml
p185
sVdocumentation
p186
V
sVlicense_url
p187
Vhttp://www.gnu.org/licenses/agpl-3.0.txt
p188
sVqualification
p189
(lp190
sVrepository_page
p191
Vhttp://code.google.com/p/math2py/
p192
sVlicense_type
p193
Vagpl
p194
sVrepository_project
p195
Vmath2py
p196
ssa(dp197
Varticle
p198
(dp199
Vfavorited
p200
I1
sVdislikes
p201
I0
sVauthor_nickname
p202
NsVfeatured
p203
I00
sVlikes
p204
I1
sVkeywords
p205
NsVid
p206
I1669
sVdescription
p207
VA client-side api for web2py crud services
p208
sVmodified_by
p209
NsVauthor
p210
I1013
sVsubscriptions
p211
I0
sVcreated_by
p212
I1013
sVdraft
p213
I00
sVpublish_date
p214
NsVblocked
p215
I00
sVthumbnail
p216
NsVpicture
p217
V
sVresponses
p218
I0
sVviews
p219
I1742
sVis_active
p220
I01
sVcontent_type
p221
NsVmodified_on
p222
NsVslug
p223
Vplugin-clientapi
p224
sVtags
p225
(lp226
Vclient
p227
aVapi
p228
aVjavascript
p229
asVcontent_type_id
p230
I4
sVlicense
p231
V1
sVprivacy
p232
NsVcreated_on
p233
NsVmedium_thumbnail
p234
NsVpublish_tz
p235
NsVtitle
p236
Vplugin-clientapi
p237
sVcategory_id
p238
(lp239
ssVpackage_data
p240
(dp241
Vpackage_type
p242
Vplugin
p243
sVtype_id
p244
I4
sVdemo
p245
V
sVdownload
p246
Vhttp://code.google.com/p/plugin-clientapi/downloads/list
p247
sVcreated_on
p248
NsVrepository_url
p249
Vhttps://code.google.com/p/plugin-clientapi/
p250
sVscreenshots
p251
(lp252
sVid
p253
I5
sVmodified_by
p254
I1013
sVlicense_body
p255
Vplugin_clientapi: web2py simple JS client\u000aCopyright (C) 2013 Alan Etkin\u000a\u000aThis program is free software: you can redistribute it and/or modify\u000ait under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\u000a\u000aThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of\u000aMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.\u000a\u000aYou should have received a copy of the GNU Affero General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.\u000a
p256
sVcreated_by
p257
I1013
sVrepository_brand
p258
Vhg
p259
sVbody
p260
V<h2>\u000a	A simple javascript client for web2py apps</h2>\u000a<p>\u000a	plugin_clientapi is a multi-purpose client interface for handling web2py services from client frameworks or any javascript client software. It supports remote database queries, full database scheme and form retrieval, submission and validation with Ajax.</p>\u000a<p>\u000a	It takes advantage of web2py data serialization api to perform client-server data comunications in a simple and efficient way.</p>\u000a<h2>\u000a	<a name="Examples"></a>Examples</h2>\u000a<p>\u000a	Retrieving and submitting a form without user intervention requires a few lines:</p>\u000a<pre class="prettyprint"><span class="pln">w2pClientAPI</span><span class="pun">.</span><span class="pln">onNewForm </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(){</span>\u000a<span class="pln">&nbsp; w2pClientAPI</span><span class="pun">.</span><span class="pln">form</span><span class="pun">.</span><span class="pln">vars</span><span class="pun">.</span><span class="pln">runny </span><span class="pun">=</span><span class="pln"> </span><span class="str">&quot;very&quot;</span><span class="pun">;</span>\u000a<span class="pln">&nbsp; w2pClientAPI</span><span class="pun">.</span><span class="pln">submit</span><span class="pun">();</span>\u000a<span class="pun">}</span>\u000a<span class="pln">w2pClientAPI</span><span class="pun">.</span><span class="pln">newForm</span><span class="pun">(</span><span class="str">&quot;db&quot;</span><span class="pun">,</span><span class="pln"> </span><span class="str">&quot;cheese&quot;</span><span class="pun">);</span></pre>\u000a<p>\u000a	Retrieving data is also simple</p>\u000a<pre class="prettyprint"><span class="pln">w2pClientAPI</span><span class="pun">.</span><span class="pln">query</span><span class="pun">(</span><span class="str">&quot;db&quot;</span><span class="pun">,</span><span class="pln"> </span><span class="pun">{</span><span class="str">&quot;first&quot;</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="str">&quot;tablename&quot;</span><span class="pun">:</span><span class="pln"> </span><span class="str">&quot;cheese&quot;</span><span class="pun">,</span>\u000a<span class="pln">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">&quot;fieldname&quot;</span><span class="pun">:</span><span class="pln"> </span><span class="str">&quot;id&quot;</span><span class="pun">},</span>\u000a<span class="pln">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">&quot;op&quot;</span><span class="pun">:</span><span class="pln"> </span><span class="str">&quot;GT&quot;</span><span class="pun">,</span>\u000a<span class="pln">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="str">&quot;second&quot;</span><span class="pun">:</span><span class="pln"> </span><span class="lit">0</span><span class="pun">},</span>\u000a<span class="pln">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;myCallback</span><span class="pun">);</span></pre>\u000a<p>\u000a	For a full guide go to <a href="http://code.google.com/p/plugin-clientapi/wiki/ClientapiHowTo">ClientapiHowTo</a></p>\u000a<h2>\u000a	<a name="License"></a>License</h2>\u000a<p>\u000a	This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.</p>\u000a
p261
sVpypi
p262
V
sVis_active
p263
I01
sVmodified_on
p264
NsVarticle_id
p265
I1669
sVlicense_version
p266
V3
sVmarkup
p267
Vhtml
p268
sVdocumentation
p269
Vhttp://code.google.com/p/plugin-clientapi/w/list
p270
sVlicense_url
p271
Vhttp://www.gnu.org/licenses/agpl-3.0.html
p272
sVqualification
p273
(lp274
sVrepository_page
p275
Vhttp://code.google.com/p/plugin-clientapi
p276
sVlicense_type
p277
Vagpl
p278
sVrepository_project
p279
Vplugin-clientapi
p280
ssa(dp281
Varticle
p282
(dp283
Vfavorited
p284
I0
sVdislikes
p285
I0
sVauthor_nickname
p286
NsVfeatured
p287
I00
sVlikes
p288
I0
sVkeywords
p289
NsVid
p290
I1672
sVdescription
p291
VA nice way to use date(time) validators with timezones in your application
p292
sVmodified_by
p293
NsVauthor
p294
I1589
sVsubscriptions
p295
I0
sVcreated_by
p296
I1589
sVdraft
p297
I00
sVpublish_date
p298
NsVblocked
p299
I00
sVthumbnail
p300
NsVpicture
p301
V
sVresponses
p302
I0
sVviews
p303
I1407
sVis_active
p304
I01
sVcontent_type
p305
NsVmodified_on
p306
NsVslug
p307
Vw2p-timezone-plugin
p308
sVtags
p309
(lp310
Vtimezones
p311
asVcontent_type_id
p312
I4
sVlicense
p313
V2
sVprivacy
p314
NsVcreated_on
p315
NsVmedium_thumbnail
p316
NsVpublish_tz
p317
NsVtitle
p318
Vw2p_timezone_plugin
p319
sVcategory_id
p320
(lp321
I41
assVpackage_data
p322
(dp323
Vpackage_type
p324
Vplugin
p325
sVtype_id
p326
I4
sVdemo
p327
V
sVdownload
p328
Vhttps://github.com/niphlod/w2p_timezone_plugin/releases/download/1.0.1/web2py.plugin.timezone.w2p
p329
sVcreated_on
p330
NsVrepository_url
p331
Vgit@github.com:niphlod/w2p_timezone_plugin.git
p332
sVscreenshots
p333
(lp334
sVid
p335
I8
sVmodified_by
p336
I1589
sVlicense_body
p337
V
sVcreated_by
p338
I1589
sVrepository_brand
p339
Vgit
p340
sVbody
p341
V
sVpypi
p342
V
sVis_active
p343
I01
sVmodified_on
p344
NsVarticle_id
p345
I1672
sVlicense_version
p346
V
sVmarkup
p347
Vhtml
p348
sVdocumentation
p349
Vhttps://github.com/niphlod/w2p_timezone_plugin/blob/master/README.md
p350
sVlicense_url
p351
V
sVqualification
p352
(lp353
sVrepository_page
p354
Vhttps://github.com/niphlod/w2p_timezone_plugin
p355
sVlicense_type
p356
Vlgpl
p357
sVrepository_project
p358
Vw2p_timezone_plugin
p359
ssa(dp360
Varticle
p361
(dp362
Vfavorited
p363
I0
sVdislikes
p364
I0
sVauthor_nickname
p365
NsVfeatured
p366
I00
sVlikes
p367
I0
sVkeywords
p368
NsVid
p369
I1674
sVdescription
p370
VStopForumSpam plugin for web2py
p371
sVmodified_by
p372
NsVauthor
p373
I1589
sVsubscriptions
p374
I0
sVcreated_by
p375
I1589
sVdraft
p376
I00
sVpublish_date
p377
NsVblocked
p378
I00
sVthumbnail
p379
NsVpicture
p380
V
sVresponses
p381
I0
sVviews
p382
I1431
sVis_active
p383
I01
sVcontent_type
p384
NsVmodified_on
p385
NsVslug
p386
Vw2p-sfs-plugin
p387
sVtags
p388
(lp389
Vspam
p390
asVcontent_type_id
p391
I4
sVlicense
p392
V2
sVprivacy
p393
NsVcreated_on
p394
NsVmedium_thumbnail
p395
NsVpublish_tz
p396
NsVtitle
p397
Vw2p_SFS_plugin
p398
sVcategory_id
p399
(lp400
I41
assVpackage_data
p401
(dp402
Vpackage_type
p403
Vplugin
p404
sVtype_id
p405
I4
sVdemo
p406
V
sVdownload
p407
Vhttps://github.com/niphlod/w2p_SFS_plugin/releases/download/0.0.1/web2py.plugin.stopforumspam.w2p
p408
sVcreated_on
p409
NsVrepository_url
p410
Vgit@github.com:niphlod/w2p_SFS_plugin.git
p411
sVscreenshots
p412
(lp413
sVid
p414
I10
sVmodified_by
p415
I1589
sVlicense_body
p416
V
sVcreated_by
p417
I1589
sVrepository_brand
p418
Vgit
p419
sVbody
p420
V
sVpypi
p421
V
sVis_active
p422
I01
sVmodified_on
p423
NsVarticle_id
p424
I1674
sVlicense_version
p425
V
sVmarkup
p426
Vhtml
p427
sVdocumentation
p428
Vhttps://github.com/niphlod/w2p_SFS_plugin/blob/master/README.md
p429
sVlicense_url
p430
V
sVqualification
p431
(lp432
sVrepository_page
p433
Vhttps://github.com/niphlod/w2p_SFS_plugin
p434
sVlicense_type
p435
Vlgpl
p436
sVrepository_project
p437
Vw2p_SFS_plugin
p438
ssa(dp439
Varticle
p440
(dp441
Vfavorited
p442
I0
sVdislikes
p443
I0
sVauthor_nickname
p444
NsVfeatured
p445
I00
sVlikes
p446
I1
sVkeywords
p447
NsVid
p448
I1675
sVdescription
p449
VWeb2py plugin to monitor the scheduler
p450
sVmodified_by
p451
NsVauthor
p452
I1589
sVsubscriptions
p453
I0
sVcreated_by
p454
I1589
sVdraft
p455
I00
sVpublish_date
p456
NsVblocked
p457
I00
sVthumbnail
p458
NsVpicture
p459
V
sVresponses
p460
I0
sVviews
p461
I2257
sVis_active
p462
I01
sVcontent_type
p463
NsVmodified_on
p464
NsVslug
p465
Vw2p-cs-monitor-plugin
p466
sVtags
p467
(lp468
Vscheduler
p469
asVcontent_type_id
p470
I4
sVlicense
p471
V2
sVprivacy
p472
NsVcreated_on
p473
NsVmedium_thumbnail
p474
NsVpublish_tz
p475
NsVtitle
p476
Vw2p_cs_monitor_plugin
p477
sVcategory_id
p478
(lp479
I41
assVpackage_data
p480
(dp481
Vpackage_type
p482
Vplugin
p483
sVtype_id
p484
I4
sVdemo
p485
V
sVdownload
p486
Vhttps://github.com/niphlod/cs_monitor_plugin/releases/download/2.0.1/web2py.plugin.cs_monitor.w2p
p487
sVcreated_on
p488
NsVrepository_url
p489
Vgit@github.com:niphlod/cs_monitor_plugin.git
p490
sVscreenshots
p491
(lp492
sVid
p493
I11
sVmodified_by
p494
I1589
sVlicense_body
p495
V
sVcreated_by
p496
I1589
sVrepository_brand
p497
Vgit
p498
sVbody
p499
V
sVpypi
p500
V
sVis_active
p501
I01
sVmodified_on
p502
NsVarticle_id
p503
I1675
sVlicense_version
p504
V
sVmarkup
p505
Vhtml
p506
sVdocumentation
p507
Vhttps://github.com/niphlod/cs_monitor_plugin/blob/master/README.md
p508
sVlicense_url
p509
V
sVqualification
p510
(lp511
sVrepository_page
p512
Vhttps://github.com/niphlod/cs_monitor_plugin
p513
sVlicense_type
p514
Vlgpl
p515
sVrepository_project
p516
Vcs_monitor_plugin
p517
ssa(dp518
Varticle
p519
(dp520
Vfavorited
p521
I0
sVdislikes
p522
I0
sVauthor_nickname
p523
NsVfeatured
p524
I00
sVlikes
p525
I1
sVkeywords
p526
NsVid
p527
I1713
sVdescription
p528
VAllows you to open a web2py form in a dialog box by calling getdialog(url). Also includes functions to convert web2py grid buttons to call getdialog(url). Click download and install the plugin OR pull source from the mercurial link which is a copy of the welcome app with the plugin.
p529
sVmodified_by
p530
NsVauthor
p531
I978
sVsubscriptions
p532
I2
sVcreated_by
p533
I978
sVdraft
p534
I00
sVpublish_date
p535
NsVblocked
p536
I00
sVthumbnail
p537
NsVpicture
p538
V
sVresponses
p539
I0
sVviews
p540
I3741
sVis_active
p541
I01
sVcontent_type
p542
NsVmodified_on
p543
NsVslug
p544
Vplugin-to-use-dialog-boxes-with-grids
p545
sVtags
p546
(lp547
sVcontent_type_id
p548
I4
sVlicense
p549
V1
sVprivacy
p550
NsVcreated_on
p551
NsVmedium_thumbnail
p552
NsVpublish_tz
p553
NsVtitle
p554
Vplugin to use dialog boxes with grids
p555
sVcategory_id
p556
(lp557
ssVpackage_data
p558
(dp559
Vpackage_type
p560
Vplugin
p561
sVtype_id
p562
I4
sVdemo
p563
V
sVdownload
p564
Vhttps://bitbucket.org/simonm3/plugin_dialog/downloads/web2py.plugin.dialog.w2p
p565
sVcreated_on
p566
NsVrepository_url
p567
Vhttps://simonm3@bitbucket.org/simonm3/plugin_dialog
p568
sVscreenshots
p569
(lp570
sVid
p571
I14
sVmodified_by
p572
I978
sVlicense_body
p573
V
sVcreated_by
p574
I978
sVrepository_brand
p575
Vhg
p576
sVbody
p577
V
sVpypi
p578
V
sVis_active
p579
I01
sVmodified_on
p580
NsVarticle_id
p581
I1713
sVlicense_version
p582
V
sVmarkup
p583
Vhtml
p584
sVdocumentation
p585
Vhttps://bitbucket.org/simonm3/plugin_dialog/wiki/Home
p586
sVlicense_url
p587
V
sVqualification
p588
(lp589
sVrepository_page
p590
V
sVlicense_type
p591
Vgpl
p592
sVrepository_project
p593
Vplugin_dialog
p594
ssa(dp595
Varticle
p596
(dp597
Vfavorited
p598
I0
sVdislikes
p599
I0
sVauthor_nickname
p600
NsVfeatured
p601
I00
sVlikes
p602
I0
sVkeywords
p603
NsVid
p604
I1717
sVdescription
p605
VAdds file area to bottom of a web2py form. Multiple files can be dragged/dropped from the desktop or from web pages including documents and inline images.
p606
sVmodified_by
p607
NsVauthor
p608
I978
sVsubscriptions
p609
I0
sVcreated_by
p610
I978
sVdraft
p611
I00
sVpublish_date
p612
NsVblocked
p613
I00
sVthumbnail
p614
NsVpicture
p615
V
sVresponses
p616
I0
sVviews
p617
I2934
sVis_active
p618
I01
sVcontent_type
p619
NsVmodified_on
p620
NsVslug
p621
Vplugin-to-dragdrop-multiple-files-as-attachments-to-a-web2py-form
p622
sVtags
p623
(lp624
sVcontent_type_id
p625
I4
sVlicense
p626
V1
sVprivacy
p627
NsVcreated_on
p628
NsVmedium_thumbnail
p629
NsVpublish_tz
p630
NsVtitle
p631
VPlugin to drag/drop multiple files as attachments to a web2py form
p632
sVcategory_id
p633
(lp634
ssVpackage_data
p635
(dp636
Vpackage_type
p637
Vplugin
p638
sVtype_id
p639
I4
sVdemo
p640
V
sVdownload
p641
Vhttps://bitbucket.org/simonm3/plugin_attachment/downloads/web2py.plugin.attachment.w2p
p642
sVcreated_on
p643
NsVrepository_url
p644
Vhttps://bitbucket.org/simonm3/plugin_attachment/src
p645
sVscreenshots
p646
(lp647
sVid
p648
I15
sVmodified_by
p649
I978
sVlicense_body
p650
V
sVcreated_by
p651
I978
sVrepository_brand
p652
Vhg
p653
sVbody
p654
V
sVpypi
p655
V
sVis_active
p656
I01
sVmodified_on
p657
NsVarticle_id
p658
I1717
sVlicense_version
p659
V
sVmarkup
p660
Vhtml
p661
sVdocumentation
p662
Vhttps://bitbucket.org/simonm3/plugin_attachment/wiki/Home
p663
sVlicense_url
p664
V
sVqualification
p665
(lp666
sVrepository_page
p667
V
sVlicense_type
p668
Vgpl
p669
sVrepository_project
p670
Vplugin_attachment
p671
ssa(dp672
Varticle
p673
(dp674
Vfavorited
p675
I1
sVdislikes
p676
I0
sVauthor_nickname
p677
NsVfeatured
p678
I00
sVlikes
p679
I4
sVkeywords
p680
NsVid
p681
I1721
sVdescription
p682
Vajax plugin for google charts via LOAD. Tested on 2.6 to 2.8
p683
sVmodified_by
p684
NsVauthor
p685
I1581
sVsubscriptions
p686
I4
sVcreated_by
p687
I1581
sVdraft
p688
I00
sVpublish_date
p689
NsVblocked
p690
I00
sVthumbnail
p691
Varticle.picture.b07d771c809eca7c.53637265656e2053686f7420323031332d31302d303420617420362e34392e333620414d2e706e67_thumb.png
p692
sVpicture
p693
Varticle.picture.b07d771c809eca7c.53637265656e2053686f7420323031332d31302d303420617420362e34392e333620414d2e706e67.png
p694
sVresponses
p695
I0
sVviews
p696
I5176
sVis_active
p697
I01
sVcontent_type
p698
NsVmodified_on
p699
NsVslug
p700
Vgoogle-charts-plugin
p701
sVtags
p702
(lp703
sVcontent_type_id
p704
I4
sVlicense
p705
V1
sVprivacy
p706
NsVcreated_on
p707
NsVmedium_thumbnail
p708
Varticle.picture.b07d771c809eca7c.53637265656e2053686f7420323031332d31302d303420617420362e34392e333620414d2e706e67_medium_thumb.png
p709
sVpublish_tz
p710
NsVtitle
p711
VGoogle Charts plugin
p712
sVcategory_id
p713
(lp714
ssVpackage_data
p715
(dp716
Vpackage_type
p717
Vplugin
p718
sVtype_id
p719
I4
sVdemo
p720
V
sVdownload
p721
Vhttps://github.com/timrichardson/google_charts_plugin/releases/download/1.0.2/web2py.plugin.google_chart.w2p
p722
sVcreated_on
p723
NsVrepository_url
p724
Vhttps://github.com/timrichardson/google_charts_plugin/
p725
sVscreenshots
p726
(lp727
sVid
p728
I16
sVmodified_by
p729
I1581
sVlicense_body
p730
V
sVcreated_by
p731
I1581
sVrepository_brand
p732
Vgit
p733
sVbody
p734
V<p>\u000a	This is a simple plugin to use Google Charts.</p>\u000a<p>\u000a	Based on web2py 2.6.4</p>\u000a<h2>\u000a	<img alt="" src="https://f.cloud.github.com/assets/927458/1266233/d70fcb02-2c80-11e3-9b6d-a5865a419a6e.png" style="width: 972px; height: 425px;" /></h2>\u000a<h2>\u000a	Usage</h2>\u000a<p>\u000a	You need to install the plugin, write a controller function which returns the data to be charted, and set up any options to pass to the chart.</p>\u000a<p>\u000a	There are examples included. Multiple charts per page is ok.</p>\u000a<p>\u000a	Usage in a view looks like this two-chart view:</p>\u000a<div>\u000a	<pre class="prettyprint linenums">{{extend &#39;layout.html&#39;}}\u000a&lt;!-- need to source this in any view which has a LOAD chart --&gt;\u000a&lt;script src=&quot;https://www.google.com/jsapi&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;\u000a\u000a&lt;!-- Here, data and options same for both charts --&gt;\u000a&lt;!-- user_signature works if using logged-in users ... not well tested --&gt;\u000a{{ data_url = URL(&#39;plugin_google_chart&#39;,&#39;plugin_return_data.json&#39;,user_signature=True)\u000a  #options are documented at https://developers.google.com/chart/\u000a  options ={&#39;title&#39;:&#39;Sales vs Expenses&#39;,&#39;width&#39;:0,&#39;height&#39;:0}\u000a          }}\u000a\u000a&lt;div class=&quot;span6&quot;&gt;\u000a{{=LOAD(&#39;plugin_google_chart&#39;,&#39;plugin_google_chart.load&#39;,ajax=True,\u000a        user_signature=True,vars={&#39;type&#39;:&#39;bar&#39;,&#39;data_url&#39;:data_url,\u000a        &#39;options_dict&#39;:options})\u000a}}\u000a&lt;/div&gt;\u000a\u000a&lt;div class=&quot;span6&quot;&gt;\u000a{{=LOAD(&#39;plugin_google_chart&#39;,&#39;plugin_google_chart.load&#39;,user_signature=True,ajax=True,\u000a    vars={&#39;type&#39;:&#39;column&#39;,&#39;data_url&#39;:data_url,&#39;options_dict&#39;:options})\u000a}}\u000a&lt;/div&gt;</pre>\u000a	<p>\u000a		&nbsp;</p>\u000a	<p>\u000a		This example above uses a function plugin_return_data in the plugin controller so you can look at that to see how to send data to a chart. In your own apps, you need to provide this function, which means replacing data_url with your own.</p>\u000a	<p>\u000a		The type of the chart is provided in the LOAD url in vars; look at the plugin_google_chart.load to see which types I have included.&nbsp;</p>\u000a</div>\u000a<h2>\u000a	Installing the plugin</h2>\u000a<p>\u000a	A plugin is simply files in directories; by uploading a plugin to an app, the web2py admin application installs those files in a given application as if you had put them there yourself. The plugin file is on the releases section of the GitHub repository. Use the Download link above to get the .w2p file</p>\u000a<p>\u000a	&nbsp;</p>\u000a<p>\u000a	In this case the plugin will add one controller and one view to your app.</p>\u000a<p>\u000a	The controller includes the function&nbsp;plugin_google_chart() which works with the view plugin_google_chart.load to display the chart.&nbsp;</p>\u000a<p>\u000a	The other content in the controller is just example/tutorial content.&nbsp;</p>\u000a<h2>\u000a	Improving and extending it (add more chart types)</h2>\u000a<p>\u000a	&nbsp;</p>\u000a<p>\u000a	The view plugin_google_chart.load has the important logic.</p>\u000a<p>\u000a	There is a switch which handles the different chart types. You can easily extend it.</p>\u000a<p>\u000a	&nbsp;</p>\u000a
p735
sVpypi
p736
V
sVis_active
p737
I01
sVmodified_on
p738
NsVarticle_id
p739
I1721
sVlicense_version
p740
V
sVmarkup
p741
Vhtml
p742
sVdocumentation
p743
V
sVlicense_url
p744
V
sVqualification
p745
(lp746
sVrepository_page
p747
Vhttps://github.com/timrichardson/google_charts_plugin/releases
p748
sVlicense_type
p749
Vgpl
p750
sVrepository_project
p751
VGoogle Charts plugin
p752
ssa(dp753
Varticle
p754
(dp755
Vfavorited
p756
I0
sVdislikes
p757
I0
sVauthor_nickname
p758
NsVfeatured
p759
I00
sVlikes
p760
I0
sVkeywords
p761
NsVid
p762
I1851
sVdescription
p763
VConnects jQuery's jsviews MVVM client-side framework to the server using a REST interface. Models can be loaded from a server-side REST interface. Changes to the model will be transparently reflected in both the connected views and also made to the server. Changes by the user in the views will be transparently reflected in the connected models and also made to the server.
p764
sVmodified_by
p765
I2062
sVauthor
p766
I2062
sVsubscriptions
p767
I0
sVcreated_by
p768
I2062
sVdraft
p769
I01
sVpublish_date
p770
NsVblocked
p771
I00
sVthumbnail
p772
NsVpicture
p773
V
sVresponses
p774
I0
sVviews
p775
I2
sVis_active
p776
I00
sVcontent_type
p777
NsVmodified_on
p778
NsVslug
p779
Vdynamic-rest
p780
sVtags
p781
(lp782
sVcontent_type_id
p783
I4
sVlicense
p784
V3
sVprivacy
p785
NsVcreated_on
p786
NsVmedium_thumbnail
p787
NsVpublish_tz
p788
NsVtitle
p789
VDynamic REST
p790
sVcategory_id
p791
(lp792
ssVpackage_data
p793
(dp794
Vpackage_type
p795
Vplugin
p796
sVtype_id
p797
I4
sVdemo
p798
V
sVdownload
p799
V
sVcreated_on
p800
NsVrepository_url
p801
Vhttps://github.com/childsish/web2py_plugin_dynamic_rest.git
p802
sVscreenshots
p803
(lp804
sVid
p805
I19
sVmodified_by
p806
I2062
sVlicense_body
p807
V
sVcreated_by
p808
I2062
sVrepository_brand
p809
Vgit
p810
sVbody
p811
V<h6>\u000a	Usage</h6>\u000a<p>\u000a	Put this in db.py</p>\u000a<pre class="prettyprint linenums">db.define_table(&#39;person&#39;,\u000a    Field(&#39;name&#39;),\u000a    format=&#39;%(name)s&#39;)</pre>\u000a<p>\u000a	Put this in the default controller.</p>\u000a<pre class="prettyprint linenums">@request.restful()\u000adef api():\u000a    from plugin_dynamic_rest.dynamic_rest import DynamicRest\u000a    dynamic_rest = DynamicRest(db)\u000a    dynamic_rest.registerTable(db.person, [&#39;GET&#39;, &#39;POST&#39;, &#39;PUT&#39;, &#39;DELETE&#39;])\u000a    return dynamic_rest.getActions()\u000a</pre>\u000a<p>\u000a	Use this as the default index.html</p>\u000a<pre class="prettyprint linenums">{{left_sidebar_enabled,right_sidebar_enabled=False,False}}\u000a{{extend &#39;layout.html&#39;}}\u000a\u000a&lt;script src=&quot;{{=URL(&#39;static&#39;, &#39;js/jsviews.min.js&#39;)}}&quot;&gt;&lt;/script&gt;\u000a&lt;script src=&quot;{{=URL(&#39;static&#39;, &#39;plugin_dynamic_rest/js/dynamic_rest.js&#39;)}}&quot;&gt;&lt;/script&gt;\u000a\u000a&lt;script id=&quot;test_template&quot; type=&quot;text/x-jsrender&quot;&gt;\u000a[^[for people]]\u000a	&lt;div&gt;\u000a		&lt;input data-link=&quot;name&quot;/&gt;\u000a		&lt;button id=&quot;element_[[:id]]&quot; class=&quot;delete&quot;&gt;X&lt;/button&gt;\u000a	&lt;/div&gt;\u000a[[/for]]\u000a&lt;/script&gt;\u000a\u000a&lt;script&gt;\u000a$.views.settings.delimiters(&#39;[[&#39;, &#39;]]&#39;);\u000a\u000avar people = DynamicRest(&quot;{{=URL(&#39;default&#39;, &#39;api.json&#39;, args=[&#39;person&#39;])}}&quot;);\u000a\u000a$(function() {\u000a	var test_template = $.templates(&quot;#test_template&quot;);\u000a\u000a	var test_data = {\u000a		people: people\u000a	};\u000a	\u000a	test_template.link(&quot;#test_target&quot;, test_data)\u000a		.on(&quot;click&quot;, &quot;.delete&quot;, function() {\u000a		    var view = $.view(this);\u000a		    $.observable(test_data.people).remove(view.index);\u000a		});\u000a	\u000a	$(&#39;#test_button&#39;).click(function() {\u000a		people.insort({name: &#39;New person&#39;});\u000a	});\u000a});\u000a&lt;/script&gt;\u000a\u000a&lt;button id=&#39;test_button&#39;&gt;Add Element&lt;/button&gt;\u000a&lt;div id=&quot;test_target&quot;&gt;\u000a	\u000a&lt;/div&gt;\u000a</pre>\u000a
p812
sVpypi
p813
V
sVis_active
p814
I01
sVmodified_on
p815
NsVarticle_id
p816
I1851
sVlicense_version
p817
V
sVmarkup
p818
Vhtml
p819
sVdocumentation
p820
V
sVlicense_url
p821
V
sVqualification
p822
(lp823
sVrepository_page
p824
Vhttps://github.com/childsish/web2py_plugin_dynamic_rest
p825
sVlicense_type
p826
Vgpl
p827
sVrepository_project
p828
Vdynamic_rest
p829
ssa(dp830
Varticle
p831
(dp832
Vfavorited
p833
I0
sVdislikes
p834
I0
sVauthor_nickname
p835
NsVfeatured
p836
I00
sVlikes
p837
I1
sVkeywords
p838
NsVid
p839
I1855
sVdescription
p840
VConnects jsviews MVVM to the server. Dynamically updates the server whenever the client changes data.
p841
sVmodified_by
p842
NsVauthor
p843
I2062
sVsubscriptions
p844
I0
sVcreated_by
p845
I2062
sVdraft
p846
I00
sVpublish_date
p847
NsVblocked
p848
I00
sVthumbnail
p849
NsVpicture
p850
V
sVresponses
p851
I0
sVviews
p852
I2721
sVis_active
p853
I01
sVcontent_type
p854
NsVmodified_on
p855
NsVslug
p856
Vdynamic-rest
p857
sVtags
p858
(lp859
Vjsviews
p860
aVmvvm
p861
aVrest
p862
asVcontent_type_id
p863
I4
sVlicense
p864
V3
sVprivacy
p865
NsVcreated_on
p866
NsVmedium_thumbnail
p867
NsVpublish_tz
p868
NsVtitle
p869
VDynamic REST
p870
sVcategory_id
p871
(lp872
ssVpackage_data
p873
(dp874
Vpackage_type
p875
Vplugin
p876
sVtype_id
p877
I4
sVdemo
p878
V
sVdownload
p879
Vhttps://github.com/childsish/web2py_plugin_dynamic_rest/archive/master.zip
p880
sVcreated_on
p881
NsVrepository_url
p882
Vhttps://github.com/childsish/web2py_plugin_dynamic_rest.git
p883
sVscreenshots
p884
(lp885
sVid
p886
I20
sVmodified_by
p887
I2062
sVlicense_body
p888
V
sVcreated_by
p889
I2062
sVrepository_brand
p890
Vgit
p891
sVbody
p892
V
sVpypi
p893
V
sVis_active
p894
I01
sVmodified_on
p895
NsVarticle_id
p896
I1855
sVlicense_version
p897
V
sVmarkup
p898
Vhtml
p899
sVdocumentation
p900
Vhttps://github.com/childsish/web2py_plugin_dynamic_rest/blob/master/README.plugin_dynamic_rest.md
p901
sVlicense_url
p902
V
sVqualification
p903
(lp904
sVrepository_page
p905
Vhttps://github.com/childsish/web2py_plugin_dynamic_rest
p906
sVlicense_type
p907
Vgpl
p908
sVrepository_project
p909
Vdynamic_rest
p910
ssa(dp911
Varticle
p912
(dp913
Vfavorited
p914
I0
sVdislikes
p915
I0
sVauthor_nickname
p916
NsVfeatured
p917
I00
sVlikes
p918
I1
sVkeywords
p919
NsVid
p920
I1919
sVdescription
p921
VAdd inline row editing capability to SQLFORM.grid
p922
sVmodified_by
p923
NsVauthor
p924
I1146
sVsubscriptions
p925
I0
sVcreated_by
p926
I1146
sVdraft
p927
I00
sVpublish_date
p928
NsVblocked
p929
I00
sVthumbnail
p930
Varticle.picture.b15916bfcc06a122.696e6c696e655f726f775f656469742e706e67_thumb.png
p931
sVpicture
p932
Varticle.picture.b15916bfcc06a122.696e6c696e655f726f775f656469742e706e67.png
p933
sVresponses
p934
I0
sVviews
p935
I8455
sVis_active
p936
I01
sVcontent_type
p937
NsVmodified_on
p938
NsVslug
p939
Vplugin-sqlform-inline
p940
sVtags
p941
(lp942
Vsqlform
p943
aVplugins
p944
aVajax
p945
aVsqlform.grid
p946
asVcontent_type_id
p947
I4
sVlicense
p948
V2
sVprivacy
p949
NsVcreated_on
p950
NsVmedium_thumbnail
p951
Varticle.picture.b15916bfcc06a122.696e6c696e655f726f775f656469742e706e67_medium_thumb.png
p952
sVpublish_tz
p953
NsVtitle
p954
Vplugin_SQLFORM_INLINE
p955
sVcategory_id
p956
(lp957
ssVpackage_data
p958
(dp959
Vpackage_type
p960
Vplugin
p961
sVtype_id
p962
I4
sVdemo
p963
V
sVdownload
p964
V
sVcreated_on
p965
NsVrepository_url
p966
Vhttps://github.com/pjryan126/plugin_SQLFORM_INLINE
p967
sVscreenshots
p968
(lp969
Vhttps://github.com/pjryan126/plugin_SQLFORM_INLINE/blob/master/inline_row_add.png?raw=true
p970
aVhttps://github.com/pjryan126/plugin_SQLFORM_INLINE/blob/master/inline_row_edit.png?raw=true
p971
asVid
p972
I23
sVmodified_by
p973
I1146
sVlicense_body
p974
V
sVcreated_by
p975
I1146
sVrepository_brand
p976
Vgit
p977
sVbody
p978
V<h1>\u000a	<font color="#333333"><font face="arial, helvetica, sans-serif"><font size="6" style="font-size: 22pt">SQLFORM_INLINE</font></font></font></h1>\u000a<p align="JUSTIFY" style="margin-bottom: 0in; font-variant: normal; font-style: normal; font-weight: normal; line-height: 0.17in">\u000a	<font color="#333333"><font face="Arial, sans-serif"><font size="2">This is a&nbsp;web2py&nbsp;plugin&nbsp;leveraging the framework&#39;s ajax&nbsp;options to provide&nbsp;inline row editing functionality to the SQLFORM.grid method.&nbsp;It&nbsp;aims to&nbsp;provide the same features&nbsp;provided by web2py&#39;s&nbsp;SQLFORM.grid&nbsp;in addition to inline row editing. Because the inline edit feature loads a SQLFORM into the selected row, the plugin will work properly only when the grid includes fields from a single table.</font></font></font></p>\u000a<p align="JUSTIFY" style="margin-bottom: 0in; font-variant: normal; font-style: normal; font-weight: normal; line-height: 0.17in">\u000a	&nbsp;</p>\u000a<h2 class="western" style="margin-top: 0in; margin-bottom: 0in; font-variant: normal; font-style: normal; line-height: 0.38in;">\u000a	<font color="#333333"><font face="arial, helvetica, sans-serif"><font size="6" style="font-size: 22pt">Installation</font></font></font></h2>\u000a<p align="JUSTIFY" style="margin-bottom: 0in; font-variant: normal; font-style: normal; font-weight: normal">\u000a	<font color="#333333"><font face="Arial, sans-serif"><font size="2" style="font-size: 9pt">Download the .w2p file and install it as a plugin via the web2py interface.</font></font></font></p>\u000a<p align="JUSTIFY" style="margin-bottom: 0in">\u000a	&nbsp;</p>\u000a<h2 class="western" style="margin-top: 0in; margin-bottom: 0in; font-variant: normal; font-style: normal;">\u000a	<font color="#333333"><font face="arial, helvetica, sans-serif"><font size="6" style="font-size: 22pt">Update</font></font></font></h2>\u000a<p align="JUSTIFY" style="margin-bottom: 0.09in; font-variant: normal; font-style: normal; font-weight: normal">\u000a	<font color="#333333"><font face="Arial, sans-serif"><font size="2" style="font-size: 9pt">Use the installation procedure above and overwrite the plugin content in your web2py app.</font></font></font></p>\u000a<h2 class="western" style="margin-top: 0in; margin-bottom: 0in; font-variant: normal; font-style: normal;">\u000a	<font color="#333333"><font face="arial, helvetica, sans-serif"><font size="6" style="font-size: 22pt">Usage</font></font></font></h2>\u000a<p align="JUSTIFY" style="margin-bottom: 0.09in; font-variant: normal; font-style: normal; font-weight: normal">\u000a	<font color="#333333"><font face="arial, helvetica, sans-serif"><font size="2" style="font-size: 9pt">(1) Install the plugin.</font></font></font></p>\u000a<p align="JUSTIFY" style="margin-bottom: 0.09in; font-variant: normal; font-style: normal; font-weight: normal">\u000a	<font color="#333333"><font face="arial, helvetica, sans-serif"><font size="2" style="font-size: 9pt">(2) Import the SQLFORM_INLINE class to your controller.</font></font></font></p>\u000a<pre class="western" style="margin-bottom: 0.2in; font-variant: normal; font-style: normal; font-weight: normal">from plugin_SQLFORM_INLINE import SQLFORM_INLINE</pre>\u000a<p align="JUSTIFY" style="margin-bottom: 0.09in; font-variant: normal; font-style: normal; font-weight: normal">\u000a	<font color="#333333"><font face="arial, helvetica, sans-serif"><font size="2" style="font-size: 9pt">(3) Create a separate controller for each inline grid. If you plan to load more than one grid into a single controller, be sure to give each grid a unique formname.</font></font></font></p>\u000a<pre class="western" style="font-variant: normal; font-style: normal; font-weight: normal">def grid1():\u000a    <span style="font-style: normal"><span style="font-weight: normal">SQLFORM=SQLFORM_INLINE</span></span>\u000a    <span style="font-style: normal"><span style="font-weight: normal">grid1=SQLFORM.inline_grid(db.things, formname=&#39;grid1&#39;)</span></span>\u000a    <span style="font-style: normal"><span style="font-weight: normal">return dict(grid1=grid1)</span></span></pre>\u000a<p align="JUSTIFY" style="margin-bottom: 0.09in; font-variant: normal; font-style: normal; font-weight: normal">\u000a	<font color="#333333"><font face="arial, helvetica, sans-serif"><font size="2" style="font-size: 9pt">(4) Load the inline grid controller into your page using the web2py LOAD helper.</font></font></font></p>\u000a<pre class="western" style="font-variant: normal; font-style: normal; font-weight: normal">def index():\u000a    <span style="font-style: normal"><span style="font-weight: normal">grid1 = LOAD(f=&#39;grid1.load&#39;, ajax=True, ajax_trap=True)</span></span>\u000a    <span style="font-style: normal"><span style="font-weight: normal">return dict(grid1=grid1)</span></span></pre>\u000a<h2 class="western" style="margin-top: 0in; margin-bottom: 0in; font-variant: normal; font-style: normal;">\u000a	<font color="#333333"><font face="arial, helvetica, sans-serif"><font size="6" style="font-size: 22pt">Development Status</font></font></font></h2>\u000a<p align="JUSTIFY" style="font-variant: normal; font-style: normal; font-weight: normal; line-height: 0.19in">\u000a	<font color="#333333"><font face="Helvetica Neue, Helvetica, Arial, sans-serif"><font size="2" style="font-size: 9pt">This plugin is intended to provide the same functionality offered by SQLFORM.grid, but is not fully tested and is currently in its initial stage of development. The CSS styling, in particular, is still a little buggy outside of Chrome.</font></font></font></p>\u000a<p align="JUSTIFY" style="margin-bottom: 0.09in">\u000a	<code class="western"><span style="font-variant: normal"><font color="#333333"><font face="Helvetica Neue, Helvetica, Arial, sans-serif"><font size="2" style="font-size: 9pt"><span style="font-style: normal"><span style="font-weight: normal">If any of the options are not working properly, or if you have ideas on how to handle cross-browser styling, please feel free to let me know or, better yet, provide a proposed solution. I welcome any help or feedback to make this plugin as useful to the community as possible.</span></span></font></font></font></span></code></p>\u000a<p align="JUSTIFY" style="margin-bottom: 0.09in">\u000a	<br />\u000a	&nbsp;</p>\u000a<p>\u000a	<br />\u000a	<br />\u000a	&nbsp;</p>\u000a
p979
sVpypi
p980
V
sVis_active
p981
I01
sVmodified_on
p982
NsVarticle_id
p983
I1919
sVlicense_version
p984
V
sVmarkup
p985
Vhtml
p986
sVdocumentation
p987
V
sVlicense_url
p988
V
sVqualification
p989
(lp990
sVrepository_page
p991
V
sVlicense_type
p992
Vmit
p993
sVrepository_project
p994
Vplugin_SQLFORM_INLINE
p995
ssa(dp996
Varticle
p997
(dp998
Vfavorited
p999
I0
sVdislikes
p1000
I0
sVauthor_nickname
p1001
NsVfeatured
p1002
I00
sVlikes
p1003
I0
sVkeywords
p1004
NsVid
p1005
I1935
sVdescription
p1006
Vspam
p1007
sVmodified_by
p1008
I1013
sVauthor
p1009
I1013
sVsubscriptions
p1010
I0
sVcreated_by
p1011
I1013
sVdraft
p1012
I00
sVpublish_date
p1013
NsVblocked
p1014
I00
sVthumbnail
p1015
NsVpicture
p1016
V
sVresponses
p1017
I0
sVviews
p1018
I4
sVis_active
p1019
I00
sVcontent_type
p1020
NsVmodified_on
p1021
NsVslug
p1022
Vspam
p1023
sVtags
p1024
(lp1025
sVcontent_type_id
p1026
I4
sVlicense
p1027
V1
sVprivacy
p1028
NsVcreated_on
p1029
NsVmedium_thumbnail
p1030
NsVpublish_tz
p1031
NsVtitle
p1032
Vspam
p1033
sVcategory_id
p1034
(lp1035
ssVpackage_data
p1036
(dp1037
Vpackage_type
p1038
Vplugin
p1039
sVtype_id
p1040
I4
sVdemo
p1041
V
sVdownload
p1042
V
sVcreated_on
p1043
NsVrepository_url
p1044
V
sVscreenshots
p1045
(lp1046
sVid
p1047
I25
sVmodified_by
p1048
I1013
sVlicense_body
p1049
V
sVcreated_by
p1050
I1013
sVrepository_brand
p1051
Vother
p1052
sVbody
p1053
V
sVpypi
p1054
V
sVis_active
p1055
I01
sVmodified_on
p1056
NsVarticle_id
p1057
I1935
sVlicense_version
p1058
V
sVmarkup
p1059
Vhtml
p1060
sVdocumentation
p1061
V
sVlicense_url
p1062
V
sVqualification
p1063
(lp1064
sVrepository_page
p1065
V
sVlicense_type
p1066
Vother
p1067
sVrepository_project
p1068
V
ssa(dp1069
Varticle
p1070
(dp1071
Vfavorited
p1072
I1
sVdislikes
p1073
I0
sVauthor_nickname
p1074
NsVfeatured
p1075
I00
sVlikes
p1076
I1
sVkeywords
p1077
V
sVid
p1078
I1937
sVdescription
p1079
VAdmin Plus(A-Plus) is a web2py plugin that provides an easy-to-use interface for managing your data
p1080
sVmodified_by
p1081
NsVauthor
p1082
I1782
sVsubscriptions
p1083
I0
sVcreated_by
p1084
I1013
sVdraft
p1085
I00
sVpublish_date
p1086
NsVblocked
p1087
I00
sVthumbnail
p1088
Varticle.picture.923cad52cc340b55.61646d696e706c75732e706e67_thumb.png
p1089
sVpicture
p1090
Varticle.picture.923cad52cc340b55.61646d696e706c75732e706e67.png
p1091
sVresponses
p1092
I0
sVviews
p1093
I5567
sVis_active
p1094
I01
sVcontent_type
p1095
V
sVmodified_on
p1096
NsVslug
p1097
Vadmin-plus
p1098
sVtags
p1099
(lp1100
Vadmin
p1101
aVplugin
p1102
asVcontent_type_id
p1103
I4
sVlicense
p1104
V1
sVprivacy
p1105
NsVcreated_on
p1106
NsVmedium_thumbnail
p1107
Varticle.picture.923cad52cc340b55.61646d696e706c75732e706e67_medium_thumb.png
p1108
sVpublish_tz
p1109
V
sVtitle
p1110
VAdmin Plus
p1111
sVcategory_id
p1112
(lp1113
I41
assVpackage_data
p1114
(dp1115
Vpackage_type
p1116
Vplugin
p1117
sVtype_id
p1118
I4
sVdemo
p1119
V
sVdownload
p1120
Vhttps://github.com/pyner/admin_plus/blob/master/web2py.plugin.admin_plus.w2p?raw=true
p1121
sVcreated_on
p1122
NsVrepository_url
p1123
Vhttps://github.com/pyner/admin_plus
p1124
sVscreenshots
p1125
(lp1126
Vhttps://lh4.googleusercontent.com/-WmbChzRuovA/Usnv-uLSVXI/AAAAAAAAAX8/12e5GclFs-U/w905-h509/Screenshot+from+2014-01-05+18:32:35.png
p1127
asVid
p1128
I26
sVmodified_by
p1129
I1013
sVlicense_body
p1130
V                   GNU LESSER GENERAL PUBLIC LICENSE\u000a                       Version 3, 29 June 2007\u000a\u000a Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\u000a Everyone is permitted to copy and distribute verbatim copies\u000a of this license document, but changing it is not allowed.\u000a\u000a\u000a  This version of the GNU Lesser General Public License incorporates\u000athe terms and conditions of version 3 of the GNU General Public\u000aLicense, supplemented by the additional permissions listed below.\u000a\u000a  0. Additional Definitions.\u000a\u000a  As used herein, "this License" refers to version 3 of the GNU Lesser\u000aGeneral Public License, and the "GNU GPL" refers to version 3 of the GNU\u000aGeneral Public License.\u000a\u000a  "The Library" refers to a covered work governed by this License,\u000aother than an Application or a Combined Work as defined below.\u000a\u000a  An "Application" is any work that makes use of an interface provided\u000aby the Library, but which is not otherwise based on the Library.\u000aDefining a subclass of a class defined by the Library is deemed a mode\u000aof using an interface provided by the Library.\u000a\u000a  A "Combined Work" is a work produced by combining or linking an\u000aApplication with the Library.  The particular version of the Library\u000awith which the Combined Work was made is also called the "Linked\u000aVersion".\u000a\u000a  The "Minimal Corresponding Source" for a Combined Work means the\u000aCorresponding Source for the Combined Work, excluding any source code\u000afor portions of the Combined Work that, considered in isolation, are\u000abased on the Application, and not on the Linked Version.\u000a\u000a  The "Corresponding Application Code" for a Combined Work means the\u000aobject code and/or source code for the Application, including any data\u000aand utility programs needed for reproducing the Combined Work from the\u000aApplication, but excluding the System Libraries of the Combined Work.\u000a\u000a  1. Exception to Section 3 of the GNU GPL.\u000a\u000a  You may convey a covered work under sections 3 and 4 of this License\u000awithout being bound by section 3 of the GNU GPL.\u000a\u000a  2. Conveying Modified Versions.\u000a\u000a  If you modify a copy of the Library, and, in your modifications, a\u000afacility refers to a function or data to be supplied by an Application\u000athat uses the facility (other than as an argument passed when the\u000afacility is invoked), then you may convey a copy of the modified\u000aversion:\u000a\u000a   a) under this License, provided that you make a good faith effort to\u000a   ensure that, in the event an Application does not supply the\u000a   function or data, the facility still operates, and performs\u000a   whatever part of its purpose remains meaningful, or\u000a\u000a   b) under the GNU GPL, with none of the additional permissions of\u000a   this License applicable to that copy.\u000a\u000a  3. Object Code Incorporating Material from Library Header Files.\u000a\u000a  The object code form of an Application may incorporate material from\u000aa header file that is part of the Library.  You may convey such object\u000acode under terms of your choice, provided that, if the incorporated\u000amaterial is not limited to numerical parameters, data structure\u000alayouts and accessors, or small macros, inline functions and templates\u000a(ten or fewer lines in length), you do both of the following:\u000a\u000a   a) Give prominent notice with each copy of the object code that the\u000a   Library is used in it and that the Library and its use are\u000a   covered by this License.\u000a\u000a   b) Accompany the object code with a copy of the GNU GPL and this license\u000a   document.\u000a\u000a  4. Combined Works.\u000a\u000a  You may convey a Combined Work under terms of your choice that,\u000ataken together, effectively do not restrict modification of the\u000aportions of the Library contained in the Combined Work and reverse\u000aengineering for debugging such modifications, if you also do each of\u000athe following:\u000a\u000a   a) Give prominent notice with each copy of the Combined Work that\u000a   the Library is used in it and that the Library and its use are\u000a   covered by this License.\u000a\u000a   b) Accompany the Combined Work with a copy of the GNU GPL and this license\u000a   document.\u000a\u000a   c) For a Combined Work that displays copyright notices during\u000a   execution, include the copyright notice for the Library among\u000a   these notices, as well as a reference directing the user to the\u000a   copies of the GNU GPL and this license document.\u000a\u000a   d) Do one of the following:\u000a\u000a       0) Convey the Minimal Corresponding Source under the terms of this\u000a       License, and the Corresponding Application Code in a form\u000a       suitable for, and under terms that permit, the user to\u000a       recombine or relink the Application with a modified version of\u000a       the Linked Version to produce a modified Combined Work, in the\u000a       manner specified by section 6 of the GNU GPL for conveying\u000a       Corresponding Source.\u000a\u000a       1) Use a suitable shared library mechanism for linking with the\u000a       Library.  A suitable mechanism is one that (a) uses at run time\u000a       a copy of the Library already present on the user's computer\u000a       system, and (b) will operate properly with a modified version\u000a       of the Library that is interface-compatible with the Linked\u000a       Version.\u000a\u000a   e) Provide Installation Information, but only if you would otherwise\u000a   be required to provide such information under section 6 of the\u000a   GNU GPL, and only to the extent that such information is\u000a   necessary to install and execute a modified version of the\u000a   Combined Work produced by recombining or relinking the\u000a   Application with a modified version of the Linked Version. (If\u000a   you use option 4d0, the Installation Information must accompany\u000a   the Minimal Corresponding Source and Corresponding Application\u000a   Code. If you use option 4d1, you must provide the Installation\u000a   Information in the manner specified by section 6 of the GNU GPL\u000a   for conveying Corresponding Source.)\u000a\u000a  5. Combined Libraries.\u000a\u000a  You may place library facilities that are a work based on the\u000aLibrary side by side in a single library together with other library\u000afacilities that are not Applications and are not covered by this\u000aLicense, and convey such a combined library under terms of your\u000achoice, if you do both of the following:\u000a\u000a   a) Accompany the combined library with a copy of the same work based\u000a   on the Library, uncombined with any other library facilities,\u000a   conveyed under the terms of this License.\u000a\u000a   b) Give prominent notice with the combined library that part of it\u000a   is a work based on the Library, and explaining where to find the\u000a   accompanying uncombined form of the same work.\u000a\u000a  6. Revised Versions of the GNU Lesser General Public License.\u000a\u000a  The Free Software Foundation may publish revised and/or new versions\u000aof the GNU Lesser General Public License from time to time. Such new\u000aversions will be similar in spirit to the present version, but may\u000adiffer in detail to address new problems or concerns.\u000a\u000a  Each version is given a distinguishing version number. If the\u000aLibrary as you received it specifies that a certain numbered version\u000aof the GNU Lesser General Public License "or any later version"\u000aapplies to it, you have the option of following the terms and\u000aconditions either of that published version or of any later version\u000apublished by the Free Software Foundation. If the Library as you\u000areceived it does not specify a version number of the GNU Lesser\u000aGeneral Public License, you may choose any version of the GNU Lesser\u000aGeneral Public License ever published by the Free Software Foundation.\u000a\u000a  If the Library as you received it specifies that a proxy can decide\u000awhether future versions of the GNU Lesser General Public License shall\u000aapply, that proxy's public statement of acceptance of any version is\u000apermanent authorization for you to choose that version for the\u000aLibrary.\u000a
p1131
sVcreated_by
p1132
I1013
sVrepository_brand
p1133
Vgit
p1134
sVbody
p1135
V<p>\u000a	Install<br />\u000a	<br />\u000a	1. Download and install the plugin<br />\u000a	<br />\u000a	<br />\u000a	2. go to &quot;127.0.0.1:8000/&lt;app&gt;/plugin_admin_plus/install&quot;<br />\u000a	<br />\u000a	3. Get the permissions &quot; plugin_admin_plus_superuser &quot; in &quot;127.0.0.1:8000/&lt;app&gt;/appadmin/insert/db/auth_membership&quot;<br />\u000a	<br />\u000a	4. !! ready! Now you can log in...&nbsp; &quot; 127.0.0.1:8000/&lt;app&gt;/plugin_admin_plus/index&quot;<br />\u000a	<br />\u000a	NOTE: &lt;app&gt; is&nbsp; replaced by the name of your application<br />\u000a	&nbsp;</p>\u000a
p1136
sVpypi
p1137
V
sVis_active
p1138
I01
sVmodified_on
p1139
NsVarticle_id
p1140
I1937
sVlicense_version
p1141
V3
sVmarkup
p1142
Vhtml
p1143
sVdocumentation
p1144
Vhttps://github.com/pyner/admin_plus
p1145
sVlicense_url
p1146
Vhttp://www.gnu.org/licenses/lgpl.html
p1147
sVqualification
p1148
(lp1149
sVrepository_page
p1150
Vhttps://github.com/pyner/admin_plus
p1151
sVlicense_type
p1152
Vlgpl
p1153
sVrepository_project
p1154
VAdmin plus
p1155
ssa(dp1156
Varticle
p1157
(dp1158
Vfavorited
p1159
I3
sVdislikes
p1160
I0
sVauthor_nickname
p1161
NsVfeatured
p1162
I00
sVlikes
p1163
I7
sVkeywords
p1164
NsVid
p1165
I1952
sVdescription
p1166
VFork of existing ckEditor plugin updated to ckEditor v4.4.7 (Jan 2015) (Plugin is v 1.1, March 2015)
p1167
sVmodified_by
p1168
NsVauthor
p1169
I1581
sVsubscriptions
p1170
I1
sVcreated_by
p1171
I1581
sVdraft
p1172
I00
sVpublish_date
p1173
NsVblocked
p1174
I00
sVthumbnail
p1175
Varticle.picture.ab3960fc91d8ab06.434b456469746f722e706e67_thumb.png
p1176
sVpicture
p1177
Varticle.picture.ab3960fc91d8ab06.434b456469746f722e706e67.png
p1178
sVresponses
p1179
I0
sVviews
p1180
I3488
sVis_active
p1181
I01
sVcontent_type
p1182
NsVmodified_on
p1183
NsVslug
p1184
Vck-editor4-plugin
p1185
sVtags
p1186
(lp1187
Vckeditor
p1188
asVcontent_type_id
p1189
I4
sVlicense
p1190
V3
sVprivacy
p1191
NsVcreated_on
p1192
NsVmedium_thumbnail
p1193
Varticle.picture.ab3960fc91d8ab06.434b456469746f722e706e67_medium_thumb.png
p1194
sVpublish_tz
p1195
NsVtitle
p1196
Vck_editor4 plugin
p1197
sVcategory_id
p1198
(lp1199
ssVpackage_data
p1200
(dp1201
Vpackage_type
p1202
Vplugin
p1203
sVtype_id
p1204
I4
sVdemo
p1205
V
sVdownload
p1206
Vhttps://github.com/timrichardson/web2py_ckeditor4/releases/download/v1.1/web2py.plugin.ckeditor.w2p
p1207
sVcreated_on
p1208
NsVrepository_url
p1209
Vhttps://github.com/timrichardson/web2py_ckeditor4
p1210
sVscreenshots
p1211
(lp1212
sVid
p1213
I29
sVmodified_by
p1214
I1581
sVlicense_body
p1215
V
sVcreated_by
p1216
I1581
sVrepository_brand
p1217
Vgit
p1218
sVbody
p1219
V<p>\u000a	A plugin for ckEditor including image uploads and management of images on the server.</p>\u000a<p>\u000a	Includes the full edition of ckEditor v4.4.7 (2015-01) and tested with web2py 2.9.x -&gt; 2.12</p>\u000a<p>\u000a	This is a fork of Bruno Rocha&#39;s plugin. It&#39;s updated to v4 ckeditor, and works better with recent web2py versions. Code is on github, fixes are welcome. There are two maintainers at present.</p>\u000a<p>\u000a	The inline edit has been removed to simplify the code (and it seems that the javascript is no longer maintained upstream).</p>\u000a<p>\u000a	This web2py plugin to add ckeditor to web2py apps is based on the original <a href="https://bitbucket.org/PhreeStyle/web2py_ckeditor/wiki/Home">https://bitbucket.org/PhreeStyle/web2py_ckeditor/wiki/Home</a>)</p>\u000a<p>\u000a	<strong>Upgrading</strong></p>\u000a<p>\u000a	To upgrade to a newer version of ckeditor, replace the directory static/plugin_ckeditor with the directory downloaded from the ckeditor site. You will probably need to refresh or delete browser caches.</p>\u000a<h3>\u000a	Installation</h3>\u000a<p>\u000a	&nbsp;</p>\u000a<p>\u000a	This plugin integrates the CKEditor into web2py.</p>\u000a<p>\u000a	In your model, you need to import and initialize it:</p>\u000a<p>\u000a	&nbsp;</p>\u000a<pre class="prettyprint linenums">from plugin_ckeditor import CKEditor\u000a\u000ackeditor = CKEditor(db)\u000a\u000ackeditor.define_tables()</pre>\u000a<p>\u000a	Note that define_tables defines a table when it is executed, even if lazy tables is used. To avoid this happening on every request, you could move .define_tables to controllers where ckeditor is used.</p>\u000a<p>\u000a	&nbsp;</p>\u000a<h3>\u000a	Basic Usage</h3>\u000a<p>\u000a	Its most basic usage is to assign it to a Field widget:</p>\u000a<p>\u000a	&nbsp;</p>\u000a<pre class="prettyprint linenums">db.define_table(&#39;content&#39;, Field(&#39;title&#39;, length=255), \u000aField(&#39;public&#39;, &#39;boolean&#39;, default=True), \u000aField(&#39;text&#39;, &#39;text&#39;, widget=ckeditor.widget) )</pre>\u000a<p>\u000a	&nbsp;</p>\u000a<p>\u000a	The CKEditor now automatically becomes available every time SQLFORM is used.</p>\u000a<p>\u000a	It includes integrated upload and browse functionality for images. The plugin defines a table to store images. This works using ckeditor&#39;s custom browser integration, which means web2py controls the display of contents when the user cliick browse.</p>\u000a<p>\u000a	Look at the file views/plugin_ckeditor/browse.html to alter the appearance of the uploaded file browser. By default it&#39;s not very attractive.</p>\u000a<p>\u000a	The upload and browse functionality is all taken care of by the plugin and does not require you to do anything on your end once you have initialized the plugin in your model as demonstrated above. You can also delete images from the server.</p>\u000a<p>\u000a	&nbsp;</p>\u000a<h3>\u000a	Thanks and References</h3>\u000a<p>\u000a	Bruno used the following resources in developing this plugin, so a special thanks to the authors of these for providing the ground work required to make this possible:</p>\u000a<p>\u000a	<a href="http://www.web2pyslices.com/main/slices/take_slice/18">http://www.web2pyslices.com/main/slices/take_slice/18</a></p>\u000a<p>\u000a	<a href="http://www.bitsntuts.com/jquery/ckeditor-edit-in-place-jquery-plugin">http://www.bitsntuts.com/jquery/ckeditor-edit-in-place-jquery-plugin</a></p>\u000a<p>\u000a	So far two other GitHub users have contributed improvements:&nbsp;</p>\u000a<h3 style="box-sizing: border-box; margin-top: 0px; margin-bottom: 0px; line-height: 16px; font-size: 16px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); padding: 10px; font-weight: normal; color: rgb(51, 51, 51); font-family: Helvetica, arial, freesans, clean, sans-serif, 'Segoe UI Emoji', 'Segoe UI Symbol';">\u000a	<a class="aname" href="https://github.com/dmvieira" style="box-sizing: border-box; color: rgb(65, 131, 196); background: transparent;">dmvieira</a>&nbsp;and&nbsp;<a class="aname" href="https://github.com/pyner" style="box-sizing: border-box; color: rgb(65, 131, 196); background: transparent;">pyner</a>. Thanks.</h3>\u000a<p>\u000a	&nbsp;</p>\u000a
p1220
sVpypi
p1221
V
sVis_active
p1222
I01
sVmodified_on
p1223
NsVarticle_id
p1224
I1952
sVlicense_version
p1225
V
sVmarkup
p1226
Vhtml
p1227
sVdocumentation
p1228
Vhttps://github.com/timrichardson/web2py_ckeditor4
p1229
sVlicense_url
p1230
V
sVqualification
p1231
(lp1232
sVrepository_page
p1233
Vhttps://github.com/timrichardson/web2py_ckeditor4
p1234
sVlicense_type
p1235
Vlgpl
p1236
sVrepository_project
p1237
Vweb2py_ckeditor4
p1238
ssa(dp1239
Varticle
p1240
(dp1241
Vfavorited
p1242
I0
sVdislikes
p1243
I0
sVauthor_nickname
p1244
NsVfeatured
p1245
I00
sVlikes
p1246
I0
sVkeywords
p1247
NsVid
p1248
I1961
sVdescription
p1249
VA plugin for expand your web2py application with OpenLayers field widgets
p1250
sVmodified_by
p1251
NsVauthor
p1252
I1129
sVsubscriptions
p1253
I1
sVcreated_by
p1254
I1129
sVdraft
p1255
I00
sVpublish_date
p1256
NsVblocked
p1257
I00
sVthumbnail
p1258
NsVpicture
p1259
V
sVresponses
p1260
I0
sVviews
p1261
I2438
sVis_active
p1262
I01
sVcontent_type
p1263
NsVmodified_on
p1264
NsVslug
p1265
Volwidgets
p1266
sVtags
p1267
(lp1268
Vplugin
p1269
aVopenlayers
p1270
asVcontent_type_id
p1271
I4
sVlicense
p1272
V3
sVprivacy
p1273
NsVcreated_on
p1274
NsVmedium_thumbnail
p1275
NsVpublish_tz
p1276
NsVtitle
p1277
Volwidgets
p1278
sVcategory_id
p1279
(lp1280
I41
assVpackage_data
p1281
(dp1282
Vpackage_type
p1283
Vplugin
p1284
sVtype_id
p1285
I4
sVdemo
p1286
V
sVdownload
p1287
Vhttp://cloud.deep.to.it/public.php?service=files&t=87a58546f90c414b719d98a0e85c6ed0
p1288
sVcreated_on
p1289
NsVrepository_url
p1290
Vhttps://github.com/manuelep/web2py.olwidgets
p1291
sVscreenshots
p1292
(lp1293
sVid
p1294
I30
sVmodified_by
p1295
I1129
sVlicense_body
p1296
V
sVcreated_by
p1297
I1129
sVrepository_brand
p1298
Vgit
p1299
sVbody
p1300
V
sVpypi
p1301
V
sVis_active
p1302
I01
sVmodified_on
p1303
NsVarticle_id
p1304
I1961
sVlicense_version
p1305
V
sVmarkup
p1306
Vhtml
p1307
sVdocumentation
p1308
V
sVlicense_url
p1309
V
sVqualification
p1310
(lp1311
sVrepository_page
p1312
Vhttps://github.com/manuelep/web2py.olwidgets
p1313
sVlicense_type
p1314
Vgpl
p1315
sVrepository_project
p1316
Vweb2py.olwidgets
p1317
ssa(dp1318
Varticle
p1319
(dp1320
Vfavorited
p1321
I0
sVdislikes
p1322
I0
sVauthor_nickname
p1323
NsVfeatured
p1324
I00
sVlikes
p1325
I0
sVkeywords
p1326
NsVid
p1327
I1970
sVdescription
p1328
Vhttps://github.com/hiho-/CRYPT_AES
p1329
sVmodified_by
p1330
I2
sVauthor
p1331
I2282
sVsubscriptions
p1332
I0
sVcreated_by
p1333
I2282
sVdraft
p1334
I01
sVpublish_date
p1335
NsVblocked
p1336
I00
sVthumbnail
p1337
NsVpicture
p1338
V
sVresponses
p1339
I0
sVviews
p1340
I0
sVis_active
p1341
I01
sVcontent_type
p1342
NsVmodified_on
p1343
NsVslug
p1344
Vcrypt-aes
p1345
sVtags
p1346
(lp1347
sVcontent_type_id
p1348
I4
sVlicense
p1349
V2
sVprivacy
p1350
NsVcreated_on
p1351
NsVmedium_thumbnail
p1352
NsVpublish_tz
p1353
NsVtitle
p1354
VCRYPT_AES
p1355
sVcategory_id
p1356
(lp1357
ssVpackage_data
p1358
(dp1359
Vpackage_type
p1360
Vplugin
p1361
sVtype_id
p1362
I4
sVdemo
p1363
V
sVdownload
p1364
Vhttps://www.dropbox.com/sh/1x3ztesezz50d2d/AADR9XTpYiAueJjikoVtcAd9a
p1365
sVcreated_on
p1366
NsVrepository_url
p1367
Vhttps://github.com/hiho-/CRYPT_AES
p1368
sVscreenshots
p1369
(lp1370
sVid
p1371
I31
sVmodified_by
p1372
I2282
sVlicense_body
p1373
V
sVcreated_by
p1374
I2282
sVrepository_brand
p1375
Vgit
p1376
sVbody
p1377
V<p>\u000a	CRYPT_AES is a plugin for web2py framework. This will encrypt the database field that you specify.</p>\u000a<p>\u000a	&nbsp;</p>\u000a<p>\u000a	Please see github, if you want to read more.</p>\u000a
p1378
sVpypi
p1379
V
sVis_active
p1380
I01
sVmodified_on
p1381
NsVarticle_id
p1382
I1970
sVlicense_version
p1383
V
sVmarkup
p1384
Vhtml
p1385
sVdocumentation
p1386
Vhttps://github.com/hiho-/CRYPT_AES
p1387
sVlicense_url
p1388
V
sVqualification
p1389
(lp1390
sVrepository_page
p1391
Vhttps://github.com/hiho-/CRYPT_AES
p1392
sVlicense_type
p1393
Vgpl
p1394
sVrepository_project
p1395
VCRYPT_AES
p1396
ssa(dp1397
Varticle
p1398
(dp1399
Vfavorited
p1400
I0
sVdislikes
p1401
I0
sVauthor_nickname
p1402
NsVfeatured
p1403
I00
sVlikes
p1404
I0
sVkeywords
p1405
NsVid
p1406
I1971
sVdescription
p1407
Vhttps://github.com/hiho-/CRYPT_AES
p1408
sVmodified_by
p1409
I2
sVauthor
p1410
I2282
sVsubscriptions
p1411
I0
sVcreated_by
p1412
I2282
sVdraft
p1413
I01
sVpublish_date
p1414
NsVblocked
p1415
I00
sVthumbnail
p1416
NsVpicture
p1417
V
sVresponses
p1418
I0
sVviews
p1419
I0
sVis_active
p1420
I01
sVcontent_type
p1421
NsVmodified_on
p1422
NsVslug
p1423
Vcrypt-aes
p1424
sVtags
p1425
(lp1426
sVcontent_type_id
p1427
I4
sVlicense
p1428
V2
sVprivacy
p1429
NsVcreated_on
p1430
NsVmedium_thumbnail
p1431
NsVpublish_tz
p1432
NsVtitle
p1433
VCRYPT_AES
p1434
sVcategory_id
p1435
(lp1436
ssVpackage_data
p1437
(dp1438
Vpackage_type
p1439
Vplugin
p1440
sVtype_id
p1441
I4
sVdemo
p1442
V
sVdownload
p1443
Vhttps://www.dropbox.com/sh/1x3ztesezz50d2d/AADR9XTpYiAueJjikoVtcAd9a
p1444
sVcreated_on
p1445
NsVrepository_url
p1446
V
sVscreenshots
p1447
(lp1448
sVid
p1449
I32
sVmodified_by
p1450
I2282
sVlicense_body
p1451
V
sVcreated_by
p1452
I2282
sVrepository_brand
p1453
Vgit
p1454
sVbody
p1455
V<p>\u000a	CRYPT_AES is a plugin for web2py framework. This will encrypt the database field that you specify.</p>\u000a
p1456
sVpypi
p1457
V
sVis_active
p1458
I01
sVmodified_on
p1459
NsVarticle_id
p1460
I1971
sVlicense_version
p1461
V
sVmarkup
p1462
Vhtml
p1463
sVdocumentation
p1464
Vhttps://github.com/hiho-/CRYPT_AES
p1465
sVlicense_url
p1466
V
sVqualification
p1467
(lp1468
sVrepository_page
p1469
Vhttps://github.com/hiho-/CRYPT_AES
p1470
sVlicense_type
p1471
Vgpl
p1472
sVrepository_project
p1473
Vhttps://github.com/hiho-/CRYPT_AES
p1474
ssa(dp1475
Varticle
p1476
(dp1477
Vfavorited
p1478
I1
sVdislikes
p1479
I1
sVauthor_nickname
p1480
NsVfeatured
p1481
I00
sVlikes
p1482
I4
sVkeywords
p1483
NsVid
p1484
I1987
sVdescription
p1485
VIt is a plug-in such as a spreadsheet.
p1486
sVmodified_by
p1487
NsVauthor
p1488
I2282
sVsubscriptions
p1489
I0
sVcreated_by
p1490
I2282
sVdraft
p1491
I00
sVpublish_date
p1492
NsVblocked
p1493
I00
sVthumbnail
p1494
Varticle.picture.b88ffb387bcccc0c.73716c6564697461626c655f3030312e706e67_thumb.png
p1495
sVpicture
p1496
Varticle.picture.b88ffb387bcccc0c.73716c6564697461626c655f3030312e706e67.png
p1497
sVresponses
p1498
I0
sVviews
p1499
I3750
sVis_active
p1500
I01
sVcontent_type
p1501
NsVmodified_on
p1502
NsVslug
p1503
Vsqleditable
p1504
sVtags
p1505
(lp1506
sVcontent_type_id
p1507
I4
sVlicense
p1508
V1
sVprivacy
p1509
NsVcreated_on
p1510
NsVmedium_thumbnail
p1511
Varticle.picture.b88ffb387bcccc0c.73716c6564697461626c655f3030312e706e67_medium_thumb.png
p1512
sVpublish_tz
p1513
NsVtitle
p1514
VSQLEDITABLE
p1515
sVcategory_id
p1516
(lp1517
ssVpackage_data
p1518
(dp1519
Vpackage_type
p1520
Vplugin
p1521
sVtype_id
p1522
I4
sVdemo
p1523
Vhttp://docs1.erp2py.com/sqleditable/demo/demo_en.html
p1524
sVdownload
p1525
Vhttps://github.com/hiho-/SQLEDITABLE/releases
p1526
sVcreated_on
p1527
NsVrepository_url
p1528
Vhttps://github.com/hiho-/SQLEDITABLE
p1529
sVscreenshots
p1530
(lp1531
sVid
p1532
I33
sVmodified_by
p1533
I2282
sVlicense_body
p1534
V
sVcreated_by
p1535
I2282
sVrepository_brand
p1536
Vgit
p1537
sVbody
p1538
V
sVpypi
p1539
V
sVis_active
p1540
I01
sVmodified_on
p1541
NsVarticle_id
p1542
I1987
sVlicense_version
p1543
Vv3
p1544
sVmarkup
p1545
Vhtml
p1546
sVdocumentation
p1547
Vhttp://docs1.erp2py.com/sqleditable/docs/document_en.html
p1548
sVlicense_url
p1549
V
sVqualification
p1550
(lp1551
sVrepository_page
p1552
Vhttps://github.com/hiho-/SQLEDITABLE
p1553
sVlicense_type
p1554
Vlgpl
p1555
sVrepository_project
p1556
VSQLEDITABLE
p1557
ssa(dp1558
Varticle
p1559
(dp1560
Vfavorited
p1561
I0
sVdislikes
p1562
I0
sVauthor_nickname
p1563
NsVfeatured
p1564
I00
sVlikes
p1565
I1
sVkeywords
p1566
NsVid
p1567
I1996
sVdescription
p1568
VA Web2py plugin and a webpage for wishes with a snowing effect, using HTML5 & JS\u000aThe preview site is https://piggy1989.pythonanywhere.com/ylrc/plugin_wish/wishes
p1569
sVmodified_by
p1570
NsVauthor
p1571
I2353
sVsubscriptions
p1572
I0
sVcreated_by
p1573
I2353
sVdraft
p1574
I00
sVpublish_date
p1575
NsVblocked
p1576
I00
sVthumbnail
p1577
Varticle.picture.b58fe6d473a56b5f.556e7469746c65642e706e67_thumb.png
p1578
sVpicture
p1579
Varticle.picture.b58fe6d473a56b5f.556e7469746c65642e706e67.png
p1580
sVresponses
p1581
I0
sVviews
p1582
I1843
sVis_active
p1583
I01
sVcontent_type
p1584
NsVmodified_on
p1585
NsVslug
p1586
Vsnowingwishes
p1587
sVtags
p1588
(lp1589
Vhtml5
p1590
asVcontent_type_id
p1591
I4
sVlicense
p1592
V2
sVprivacy
p1593
NsVcreated_on
p1594
NsVmedium_thumbnail
p1595
Varticle.picture.b58fe6d473a56b5f.556e7469746c65642e706e67_medium_thumb.png
p1596
sVpublish_tz
p1597
NsVtitle
p1598
VSnowingWishes
p1599
sVcategory_id
p1600
(lp1601
I41
assVpackage_data
p1602
(dp1603
Vpackage_type
p1604
Vplugin
p1605
sVtype_id
p1606
I4
sVdemo
p1607
Vhttps://piggy1989.pythonanywhere.com/ylrc/plugin_wish/wishes
p1608
sVdownload
p1609
V
sVcreated_on
p1610
NsVrepository_url
p1611
V
sVscreenshots
p1612
(lp1613
sVid
p1614
I34
sVmodified_by
p1615
I2353
sVlicense_body
p1616
V
sVcreated_by
p1617
I2353
sVrepository_brand
p1618
Vgit
p1619
sVbody
p1620
V<h1 style="box-sizing: border-box; font-size: 2.25em; margin-bottom: 16px; line-height: 1.2; position: relative; padding-bottom: 0.3em; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; margin-top: 0px !important;">\u000a	SnowingWishes</h1>\u000a<p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; text-align: start;">\u000a	A&nbsp;<a href="http://www.web2py.com/" style="box-sizing: border-box; color: rgb(65, 131, 196); background: transparent;">Web2py</a>&nbsp;plugin and a webpage for wishes with a snowing effect, using HTML5 &amp; JS</p>\u000a<p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; text-align: start;">\u000a	The preview site is&nbsp;<a href="https://piggy1989.pythonanywhere.com/ylrc/plugin_wish/wishes" style="box-sizing: border-box; color: rgb(65, 131, 196); background: transparent;">https://piggy1989.pythonanywhere.com/ylrc/plugin_wish/wishes</a></p>\u000a<p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; text-align: start;">\u000a	All you need to do is two steps:</p>\u000a<p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; text-align: start;">\u000a	1.Adding the following script in your default.py.</p>\u000a<pre style="box-sizing: border-box; overflow: auto; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 14px; margin-top: 0px; margin-bottom: 16px; line-height: 1.45; padding: 16px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; word-wrap: normal; color: rgb(51, 51, 51); background-color: rgb(247, 247, 247);">def wish():\u000a    wishes=db(db.plugin_wish_wishes.apply_time!=None).select(orderby=~db.plugin_wish_wishes.apply_time, limitby=(0,100))\u000a    return dict(wishes=wishes)\u000a</pre>\u000a<p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 16px; color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, 'Segoe UI', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px; text-align: start;">\u000a	2.Adding the following script in your db.py.</p>\u000a<pre style="box-sizing: border-box; overflow: auto; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 14px; margin-top: 0px; line-height: 1.45; padding: 16px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; word-wrap: normal; color: rgb(51, 51, 51); margin-bottom: 0px !important; background-color: rgb(247, 247, 247);">from plugin_wish import Wish\u000awish = Wish(db)\u000awish.define_tables()</pre>\u000a
p1621
sVpypi
p1622
V
sVis_active
p1623
I01
sVmodified_on
p1624
NsVarticle_id
p1625
I1996
sVlicense_version
p1626
V
sVmarkup
p1627
Vhtml
p1628
sVdocumentation
p1629
V
sVlicense_url
p1630
V
sVqualification
p1631
(lp1632
sVrepository_page
p1633
Vhttps://github.com/piggy1989/SnowingWishes
p1634
sVlicense_type
p1635
Vmit
p1636
sVrepository_project
p1637
VSnowingWishes
p1638
ssa(dp1639
Varticle
p1640
(dp1641
Vfavorited
p1642
I0
sVdislikes
p1643
I0
sVauthor_nickname
p1644
NsVfeatured
p1645
I00
sVlikes
p1646
I0
sVkeywords
p1647
NsVid
p1648
I1998
sVdescription
p1649
VThumbnails plugin for the web2py framework.\u000a\u000aThis plugin allows automatic creation of thumbnails from image upload fields. It creates a virtual field and not modify original tables.
p1650
sVmodified_by
p1651
NsVauthor
p1652
I2298
sVsubscriptions
p1653
I0
sVcreated_by
p1654
I2298
sVdraft
p1655
I00
sVpublish_date
p1656
NsVblocked
p1657
I00
sVthumbnail
p1658
NsVpicture
p1659
V
sVresponses
p1660
I0
sVviews
p1661
I77
sVis_active
p1662
I01
sVcontent_type
p1663
NsVmodified_on
p1664
NsVslug
p1665
Vthumbnails-plugin
p1666
sVtags
p1667
(lp1668
Vthumbnails
p1669
aVimages
p1670
aVplugin
p1671
asVcontent_type_id
p1672
I4
sVlicense
p1673
V1
sVprivacy
p1674
NsVcreated_on
p1675
NsVmedium_thumbnail
p1676
NsVpublish_tz
p1677
NsVtitle
p1678
VThumbnails plugin
p1679
sVcategory_id
p1680
(lp1681
ssVpackage_data
p1682
(dp1683
Vpackage_type
p1684
Vplugin
p1685
sVtype_id
p1686
I4
sVdemo
p1687
V
sVdownload
p1688
Vhttps://github.com/cccaballero/web2py-thumbnails
p1689
sVcreated_on
p1690
NsVrepository_url
p1691
Vhttps://github.com/cccaballero/web2py-thumbnails
p1692
sVscreenshots
p1693
(lp1694
sVid
p1695
I35
sVmodified_by
p1696
I2298
sVlicense_body
p1697
V
sVcreated_by
p1698
I2298
sVrepository_brand
p1699
Vgit
p1700
sVbody
p1701
V<h4>\u000a	web2py-thumbnails</h4>\u000a<p>\u000a	Thumbnails plugin for the web2py framework.</p>\u000a<p>\u000a	This plugin allows automatic creation of thumbnails from image upload fields. It creates a virtual field and not modify original tables.</p>\u000a<h4>\u000a	Installation</h4>\u000a<ul class="task-list">\u000a	<li>\u000a		Install or include Python Imaging Library (PIL)</li>\u000a	<li>\u000a		Download The plugin installer (.w2p file) and install it via the web2py interface.</li>\u000a</ul>\u000a<h4>\u000a	Usage</h4>\u000a<pre class="prettyprint linenums"># coding: utf8\u000a\u000adb = DAL()\u000adb.define_table(&#39;mytable&#39;,Field(&#39;myfield&#39;,&#39;string&#39;),\u000a                          Field(&#39;img&#39;,&#39;upload&#39;))\u000a\u000afrom plugin_thumbnails.thumbnails import thumbnails       # imports thumbnails plugin\u000athumb = thumbnails(db)                                    # instantiate plugin and crete needed table\u000athumb.create(db.mytable.img)                              # create thumbnails for mytable img field\u000a\u000adb.mytable.insert(myfield=&#39;Char&#39;,img=image)               # automatically create thumbnail for img field\u000adb(db.mytable.id).update(img=new_image)                   # automatically update thumbnail\u000athumbnail = db(db.mytable).select().first().img_thumbnail # select thumbnail\u000adb(db.mytable).delete()                                   # automatically delete thumbnail\u000a\u000a</pre>\u000a
p1702
sVpypi
p1703
V
sVis_active
p1704
I01
sVmodified_on
p1705
NsVarticle_id
p1706
I1998
sVlicense_version
p1707
V
sVmarkup
p1708
Vhtml
p1709
sVdocumentation
p1710
V
sVlicense_url
p1711
V
sVqualification
p1712
(lp1713
sVrepository_page
p1714
Vhttps://github.com/cccaballero/web2py-thumbnails
p1715
sVlicense_type
p1716
Vgpl
p1717
sVrepository_project
p1718
Vweb2py-thumbnails
p1719
ssa(dp1720
Varticle
p1721
(dp1722
Vfavorited
p1723
I0
sVdislikes
p1724
I0
sVauthor_nickname
p1725
NsVfeatured
p1726
I00
sVlikes
p1727
I0
sVkeywords
p1728
NsVid
p1729
I1999
sVdescription
p1730
VThis plugin allows automatic creation of thumbnails from image upload fields. It creates a virtual field and not modify original tables.
p1731
sVmodified_by
p1732
NsVauthor
p1733
I2298
sVsubscriptions
p1734
I0
sVcreated_by
p1735
I2298
sVdraft
p1736
I00
sVpublish_date
p1737
NsVblocked
p1738
I00
sVthumbnail
p1739
NsVpicture
p1740
V
sVresponses
p1741
I0
sVviews
p1742
I73
sVis_active
p1743
I01
sVcontent_type
p1744
NsVmodified_on
p1745
NsVslug
p1746
Vthumbnails-plugin
p1747
sVtags
p1748
(lp1749
Vthumbnails
p1750
aVplugin
p1751
asVcontent_type_id
p1752
I4
sVlicense
p1753
V2
sVprivacy
p1754
NsVcreated_on
p1755
NsVmedium_thumbnail
p1756
NsVpublish_tz
p1757
NsVtitle
p1758
VThumbnails plugin
p1759
sVcategory_id
p1760
(lp1761
I41
assVpackage_data
p1762
(dp1763
Vpackage_type
p1764
Vplugin
p1765
sVtype_id
p1766
I4
sVdemo
p1767
V
sVdownload
p1768
Vhttps://github.com/cccaballero/web2py-thumbnails/blob/master/web2py.plugin.thumbnails.w2p?raw=true
p1769
sVcreated_on
p1770
NsVrepository_url
p1771
Vhttps://github.com/cccaballero/web2py-thumbnails
p1772
sVscreenshots
p1773
(lp1774
sVid
p1775
I36
sVmodified_by
p1776
I2298
sVlicense_body
p1777
V
sVcreated_by
p1778
I2298
sVrepository_brand
p1779
Vgit
p1780
sVbody
p1781
V<h3>\u000a	Thumbnails plugin for the web2py framework.</h3>\u000a<p>\u000a	This plugin allows automatic creation of thumbnails from image upload fields. It creates a virtual field and not modify original tables.</p>\u000a<h4>\u000a	Installation</h4>\u000a<ul class="task-list">\u000a	<li>\u000a		Install or include Python Imaging Library (PIL)</li>\u000a	<li>\u000a		Download The plugin installer (.w2p file) and install it via the web2py interface.</li>\u000a</ul>\u000a<h4>\u000a	Usage</h4>\u000a<pre class="prettyprint linenums"># coding: utf8\u000a\u000adb = DAL()\u000adb.define_table(&#39;mytable&#39;,Field(&#39;myfield&#39;,&#39;string&#39;),\u000a                          Field(&#39;img&#39;,&#39;upload&#39;))\u000a\u000afrom plugin_thumbnails.thumbnails import thumbnails       # imports thumbnails plugin\u000athumb = thumbnails(db)                                    # instantiate plugin and crete needed table\u000athumb.create(db.mytable.img)                              # create thumbnails for mytable img field\u000a\u000adb.mytable.insert(myfield=&#39;Char&#39;,img=image)               # automatically create thumbnail for img field\u000adb(db.mytable.id).update(img=new_image)                   # automatically update thumbnail\u000athumbnail = db(db.mytable).select().first().img_thumbnail # select thumbnail\u000adb(db.mytable).delete()                                   # automatically delete thumbnail\u000a\u000a</pre>\u000a
p1782
sVpypi
p1783
V
sVis_active
p1784
I01
sVmodified_on
p1785
NsVarticle_id
p1786
I1999
sVlicense_version
p1787
V
sVmarkup
p1788
Vhtml
p1789
sVdocumentation
p1790
V
sVlicense_url
p1791
V
sVqualification
p1792
(lp1793
sVrepository_page
p1794
Vhttps://github.com/cccaballero/web2py-thumbnails
p1795
sVlicense_type
p1796
Vlgpl
p1797
sVrepository_project
p1798
Vweb2py-thumbnails
p1799
ssa(dp1800
Varticle
p1801
(dp1802
Vfavorited
p1803
I0
sVdislikes
p1804
I0
sVauthor_nickname
p1805
NsVfeatured
p1806
I00
sVlikes
p1807
I0
sVkeywords
p1808
NsVid
p1809
I2000
sVdescription
p1810
VThis plugin allows automatic creation of thumbnails from image upload fields. It creates a virtual field and not modify original tables.
p1811
sVmodified_by
p1812
NsVauthor
p1813
I2298
sVsubscriptions
p1814
I0
sVcreated_by
p1815
I2298
sVdraft
p1816
I00
sVpublish_date
p1817
NsVblocked
p1818
I00
sVthumbnail
p1819
NsVpicture
p1820
V
sVresponses
p1821
I0
sVviews
p1822
I119
sVis_active
p1823
I01
sVcontent_type
p1824
NsVmodified_on
p1825
NsVslug
p1826
Vthumbnails-plugin
p1827
sVtags
p1828
(lp1829
Vplugin
p1830
aVthumbnails
p1831
asVcontent_type_id
p1832
I4
sVlicense
p1833
V1
sVprivacy
p1834
NsVcreated_on
p1835
NsVmedium_thumbnail
p1836
NsVpublish_tz
p1837
NsVtitle
p1838
VThumbnails plugin
p1839
sVcategory_id
p1840
(lp1841
I41
assVpackage_data
p1842
(dp1843
Vpackage_type
p1844
Vplugin
p1845
sVtype_id
p1846
I4
sVdemo
p1847
V
sVdownload
p1848
Vhttps://github.com/cccaballero/web2py-thumbnails/blob/master/web2py.plugin.thumbnails.w2p?raw=true
p1849
sVcreated_on
p1850
NsVrepository_url
p1851
Vhttps://github.com/cccaballero/web2py-thumbnails
p1852
sVscreenshots
p1853
(lp1854
sVid
p1855
I37
sVmodified_by
p1856
I2298
sVlicense_body
p1857
V
sVcreated_by
p1858
I2298
sVrepository_brand
p1859
Vgit
p1860
sVbody
p1861
V<h3>\u000a	Thumbnails plugin for the web2py framework.</h3>\u000a<p>\u000a	This plugin allows automatic creation of thumbnails from image upload fields. It creates a virtual field and not modify original tables.</p>\u000a<h4>\u000a	Installation</h4>\u000a<ul class="task-list">\u000a	<li>\u000a		Install or include Python Imaging Library (PIL)</li>\u000a	<li>\u000a		Download The plugin installer (.w2p file) and install it via the web2py interface.</li>\u000a</ul>\u000a<h4>\u000a	Usage</h4>\u000a<pre class="prettyprint linenums"># coding: utf8\u000a\u000adb = DAL()\u000adb.define_table(&#39;mytable&#39;,Field(&#39;myfield&#39;,&#39;string&#39;),\u000a                          Field(&#39;img&#39;,&#39;upload&#39;))\u000a\u000afrom plugin_thumbnails.thumbnails import thumbnails       # imports thumbnails plugin\u000athumb = thumbnails(db)                                    # instantiate plugin and crete needed table\u000athumb.create(db.mytable.img)                              # create thumbnails for mytable img field\u000a\u000adb.mytable.insert(myfield=&#39;Char&#39;,img=image)               # automatically create thumbnail for img field\u000adb(db.mytable.id).update(img=new_image)                   # automatically update thumbnail\u000athumbnail = db(db.mytable).select().first().img_thumbnail # select thumbnail\u000adb(db.mytable).delete()                                   # automatically delete thumbnail\u000a\u000a</pre>\u000a
p1862
sVpypi
p1863
V
sVis_active
p1864
I01
sVmodified_on
p1865
NsVarticle_id
p1866
I2000
sVlicense_version
p1867
V
sVmarkup
p1868
Vhtml
p1869
sVdocumentation
p1870
V
sVlicense_url
p1871
V
sVqualification
p1872
(lp1873
sVrepository_page
p1874
Vhttps://github.com/cccaballero/web2py-thumbnails
p1875
sVlicense_type
p1876
Vlgpl
p1877
sVrepository_project
p1878
Vweb2py-thumbnails
p1879
ssa(dp1880
Varticle
p1881
(dp1882
Vfavorited
p1883
I0
sVdislikes
p1884
I0
sVauthor_nickname
p1885
NsVfeatured
p1886
I00
sVlikes
p1887
I0
sVkeywords
p1888
NsVid
p1889
I2018
sVdescription
p1890
VCreate admin group (and other groups), make possible edit user membership of the groups.
p1891
sVmodified_by
p1892
NsVauthor
p1893
I2198
sVsubscriptions
p1894
I0
sVcreated_by
p1895
I2198
sVdraft
p1896
I00
sVpublish_date
p1897
NsVblocked
p1898
I00
sVthumbnail
p1899
NsVpicture
p1900
V
sVresponses
p1901
I0
sVviews
p1902
I266
sVis_active
p1903
I01
sVcontent_type
p1904
NsVmodified_on
p1905
NsVslug
p1906
Vplugin-manage-groups
p1907
sVtags
p1908
(lp1909
Vadmin
p1910
aVgroups
p1911
aVmembership
p1912
aVauth
p1913
asVcontent_type_id
p1914
I4
sVlicense
p1915
V1
sVprivacy
p1916
NsVcreated_on
p1917
NsVmedium_thumbnail
p1918
NsVpublish_tz
p1919
NsVtitle
p1920
Vplugin_MANAGE_GROUPS
p1921
sVcategory_id
p1922
(lp1923
ssVpackage_data
p1924
(dp1925
Vpackage_type
p1926
Vplugin
p1927
sVtype_id
p1928
I4
sVdemo
p1929
V
sVdownload
p1930
Vhttps://github.com/zvolsky/plugin_manage_groups/blob/master/web2py.plugin.manage_groups.w2p
p1931
sVcreated_on
p1932
NsVrepository_url
p1933
Vhttps://github.com/zvolsky/plugin_manage_groups
p1934
sVscreenshots
p1935
(lp1936
sVid
p1937
I38
sVmodified_by
p1938
I2198
sVlicense_body
p1939
VSame licensing as Web2py
p1940
sVcreated_by
p1941
I2198
sVrepository_brand
p1942
Vgit
p1943
sVbody
p1944
V<p>\u000a	Creates an admin group, makes the first user its member and give him possibility to manage admin membership at url</p>\u000a<p>\u000a	(app)/plugin_manage_groups</p>\u000a<p>\u000a	and create/manage other groups at url</p>\u000a<p>\u000a	(app)/plugin_manage_groups/group/(group-name)</p>\u000a
p1945
sVpypi
p1946
V
sVis_active
p1947
I01
sVmodified_on
p1948
NsVarticle_id
p1949
I2018
sVlicense_version
p1950
V3
sVmarkup
p1951
Vhtml
p1952
sVdocumentation
p1953
Vhttps://github.com/zvolsky/plugin_manage_groups
p1954
sVlicense_url
p1955
Vhttps://github.com/zvolsky/plugin_manage_groups/blob/master/LICENSE
p1956
sVqualification
p1957
(lp1958
sVrepository_page
p1959
Vhttps://github.com/zvolsky/plugin_manage_groups
p1960
sVlicense_type
p1961
Vlgpl
p1962
sVrepository_project
p1963
Vplugin_MANAGE_GROUPS
p1964
ssa(dp1965
Varticle
p1966
(dp1967
Vfavorited
p1968
I0
sVdislikes
p1969
I0
sVauthor_nickname
p1970
NsVfeatured
p1971
I00
sVlikes
p1972
I0
sVkeywords
p1973
NsVid
p1974
I2028
sVdescription
p1975
VTesting - what type of 'slice' will be counted in profile as 'wrote N slices' to give possibility to edit previous entries?
p1976
sVmodified_by
p1977
I1013
sVauthor
p1978
I2478
sVsubscriptions
p1979
I0
sVcreated_by
p1980
I2478
sVdraft
p1981
I00
sVpublish_date
p1982
NsVblocked
p1983
I00
sVthumbnail
p1984
NsVpicture
p1985
V
sVresponses
p1986
I0
sVviews
p1987
I5
sVis_active
p1988
I00
sVcontent_type
p1989
NsVmodified_on
p1990
NsVslug
p1991
Vtesting-what-type-of-slice-will-be-counted-package-as-other-user
p1992
sVtags
p1993
(lp1994
Vplugin
p1995
asVcontent_type_id
p1996
I4
sVlicense
p1997
V2
sVprivacy
p1998
NsVcreated_on
p1999
NsVmedium_thumbnail
p2000
NsVpublish_tz
p2001
NsVtitle
p2002
VTesting - what type of 'slice' will be counted - Package? (as other user)
p2003
sVcategory_id
p2004
(lp2005
I41
assVpackage_data
p2006
(dp2007
Vpackage_type
p2008
Vplugin
p2009
sVtype_id
p2010
I4
sVdemo
p2011
Vhttps://github.com/zvolsky/plugin_manage_groups
p2012
sVdownload
p2013
Vhttps://zvolsky.github.io/plugin_manage_groups/web2py.plugin.manage_groups.w2p
p2014
sVcreated_on
p2015
NsVrepository_url
p2016
Vhttps://github.com/zvolsky/plugin_manage_groups
p2017
sVscreenshots
p2018
(lp2019
sVid
p2020
I39
sVmodified_by
p2021
I2478
sVlicense_body
p2022
VLGPLv3 and/or same as Web2py
p2023
sVcreated_by
p2024
I2478
sVrepository_brand
p2025
Vgit
p2026
sVbody
p2027
V<p>\u000a	<span style="color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px;">Create admin group (and other groups), make possible edit user membership of the groups.</span></p>\u000a
p2028
sVpypi
p2029
Vhttps://github.com/zvolsky/plugin_manage_groups
p2030
sVis_active
p2031
I01
sVmodified_on
p2032
NsVarticle_id
p2033
I2028
sVlicense_version
p2034
Vv3
p2035
sVmarkup
p2036
Vhtml
p2037
sVdocumentation
p2038
Vhttps://github.com/zvolsky/plugin_manage_groups
p2039
sVlicense_url
p2040
Vhttps://github.com/zvolsky/plugin_manage_groups/blob/master/LICENSE
p2041
sVqualification
p2042
(lp2043
sVrepository_page
p2044
Vhttps://github.com/zvolsky/plugin_manage_groups
p2045
sVlicense_type
p2046
Vlgpl
p2047
sVrepository_project
p2048
Vplugin_MANAGE_GROUPS
p2049
ssa(dp2050
Varticle
p2051
(dp2052
Vfavorited
p2053
I0
sVdislikes
p2054
I0
sVauthor_nickname
p2055
NsVfeatured
p2056
I00
sVlikes
p2057
I0
sVkeywords
p2058
NsVid
p2059
I2029
sVdescription
p2060
VTesting - what type of 'slice' will be counted in profile as 'wrote N slices' to give possibility to edit previous entries?
p2061
sVmodified_by
p2062
I1013
sVauthor
p2063
I2478
sVsubscriptions
p2064
I0
sVcreated_by
p2065
I2478
sVdraft
p2066
I00
sVpublish_date
p2067
NsVblocked
p2068
I00
sVthumbnail
p2069
NsVpicture
p2070
V
sVresponses
p2071
I0
sVviews
p2072
I3
sVis_active
p2073
I00
sVcontent_type
p2074
NsVmodified_on
p2075
NsVslug
p2076
Vtesting-what-type-of-slice-will-be-counted-package-as-other-user-2
p2077
sVtags
p2078
(lp2079
Vplugin
p2080
asVcontent_type_id
p2081
I4
sVlicense
p2082
V2
sVprivacy
p2083
NsVcreated_on
p2084
NsVmedium_thumbnail
p2085
NsVpublish_tz
p2086
NsVtitle
p2087
VTesting - what type of 'slice' will be counted - Package? (as other user /2)
p2088
sVcategory_id
p2089
(lp2090
ssVpackage_data
p2091
(dp2092
Vpackage_type
p2093
Vplugin
p2094
sVtype_id
p2095
I4
sVdemo
p2096
Vhttps://github.com/zvolsky/plugin_manage_groups
p2097
sVdownload
p2098
Vhttps://zvolsky.github.io/plugin_manage_groups/web2py.plugin.manage_groups.w2p
p2099
sVcreated_on
p2100
NsVrepository_url
p2101
Vhttps://github.com/zvolsky/plugin_manage_groups
p2102
sVscreenshots
p2103
(lp2104
sVid
p2105
I40
sVmodified_by
p2106
I2478
sVlicense_body
p2107
VLGPLv3
p2108
sVcreated_by
p2109
I2478
sVrepository_brand
p2110
Vgit
p2111
sVbody
p2112
V<p>\u000a	<span style="color: rgb(51, 51, 51); font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 20px;">Create admin group (and other groups), make possible edit user membership of the groups.</span></p>\u000a
p2113
sVpypi
p2114
Vhttps://github.com/zvolsky/plugin_manage_groups
p2115
sVis_active
p2116
I01
sVmodified_on
p2117
NsVarticle_id
p2118
I2029
sVlicense_version
p2119
Vv3
p2120
sVmarkup
p2121
Vhtml
p2122
sVdocumentation
p2123
Vhttps://github.com/zvolsky/plugin_manage_groups
p2124
sVlicense_url
p2125
Vhttps://github.com/zvolsky/plugin_manage_groups/blob/master/LICENSE
p2126
sVqualification
p2127
(lp2128
sVrepository_page
p2129
Vhttps://github.com/zvolsky/plugin_manage_groups
p2130
sVlicense_type
p2131
Vlgpl
p2132
sVrepository_project
p2133
Vplugin_MANAGE_GROUPS
p2134
ssassS'_formkey[appcreate/create]'
p2135
(lp2136
S'7b1f7895-1123-4946-b0eb-9b966150b034'
p2137
aS'67c19b1f-0611-44eb-83d6-5625aa328dd9'
p2138
aS'11d5a073-7ed1-4dde-8036-b5b1546964ec'
p2139
aS'b6b8c151-d65f-452f-82f4-2a6fb8a7cb7e'
p2140
aS'075f458b-b83f-462e-b89f-04cc4ef9852a'
p2141
aS'd766eeec-a282-4786-9570-84d62ce23158'
p2142
aS'247801ec-c3fd-4d78-bc70-d85adf0116f1'
p2143
aS'83bcf18d-eb74-410d-be76-9a44b61e072e'
p2144
asS'last_time'
p2145
F1437997725.627548
s.